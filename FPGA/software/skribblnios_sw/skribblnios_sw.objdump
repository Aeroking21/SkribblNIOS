
skribblnios_sw.elf:     file format elf32-littlenios2
skribblnios_sw.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020248

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010368 memsz 0x00010368 flags r-x
    LOAD off    0x00011388 vaddr 0x00030388 paddr 0x00031ea0 align 2**12
         filesz 0x00001b18 memsz 0x00001b18 flags rw-
    LOAD off    0x000139b8 vaddr 0x000339b8 paddr 0x000339b8 align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fdf0  00020248  00020248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000350  00030038  00030038  00011038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b18  00030388  00031ea0  00011388  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  000339b8  000339b8  000139b8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00033b34  00033b34  00012ea0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012ea0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fb0  00000000  00000000  00012ec8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00028134  00000000  00000000  00013e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009ee8  00000000  00000000  0003bfac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c608  00000000  00000000  00045e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000022a0  00000000  00000000  0005249c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003b19  00000000  00000000  0005473c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000181fa  00000000  00000000  00058255  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00070450  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001988  00000000  00000000  00070480  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000751fe  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00075201  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00075204  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00075205  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  00075206  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0007520f  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  00075218  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  00075221  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000049  00000000  00000000  0007522b  2**0
                  CONTENTS, READONLY
 26 .jdi          00004ddf  00000000  00000000  00075274  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0006dc86  00000000  00000000  0007a053  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020248 l    d  .text	00000000 .text
00030038 l    d  .rodata	00000000 .rodata
00030388 l    d  .rwdata	00000000 .rwdata
000339b8 l    d  .bss	00000000 .bss
00033b34 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../skribblnios_sw_bsp//obj/HAL/src/crt0.o
00020290 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 skribblmain.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000207d8 l     F .text	00000008 __fp_unlock
000207ec l     F .text	0000019c __sinit.part.1
00020988 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00030388 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
000223ac l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000300c2 l     O .rodata	00000010 zeroes.4404
000249d8 l     F .text	000000bc __sbprintf
000300d2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
00024c9c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00030bd4 l     O .rwdata	00000020 lc_ctype_charset
00030bb4 l     O .rwdata	00000020 lc_message_charset
00030bf4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00030100 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000286b4 l     F .text	000000fc __sprint_r.part.0
00030234 l     O .rodata	00000010 blanks.4348
00030224 l     O .rodata	00000010 zeroes.4349
00029c40 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002d5d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d6e0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d70c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d7f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d8d8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d9c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0002db98 l     F .text	0000003c alt_get_errno
0002dbd4 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
0002ddec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00031e90 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002e038 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002e16c l     F .text	00000034 alt_dev_reg
00030dd4 l     O .rwdata	00001060 jtag_uart
00031e34 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e45c l     F .text	00000210 altera_avalon_jtag_uart_irq
0002e66c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002f2e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002f6f0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00033a08 g     O .bss	00000004 alt_instruction_exception_handler
00027e28 g     F .text	00000074 _mprec_log10
00027f14 g     F .text	0000008c __any_on
00026a8c g     F .text	00000054 _isatty_r
0003010c g     O .rodata	00000028 __mprec_tinytens
0002dad4 g     F .text	0000007c alt_main
00020294 g     F .text	00000038 led_write
000222d8 g     F .text	000000c0 _puts_r
00033a34 g     O .bss	00000100 alt_irq
00026bbc g     F .text	00000060 _lseek_r
00031ea0 g       *ABS*	00000000 __flash_rwdata_start
00026524 g     F .text	000000ac __sflags
0002c100 g     F .text	00000088 .hidden __eqdf2
00033b34 g       *ABS*	00000000 __alt_heap_start
0002229c g     F .text	0000003c printf
0002a120 g     F .text	0000009c _wcrtomb_r
000226c8 g     F .text	0000005c __sseek
00020b28 g     F .text	00000010 __sinit
00029fc8 g     F .text	00000140 __swbuf_r
00026ae0 g     F .text	0000007c _setlocale_r
00020990 g     F .text	00000068 __sfmoreglue
0002db74 g     F .text	00000024 __malloc_unlock
000339f8 g     O .bss	00000004 altera_avalon_timer_ts_freq
000339b8 g     O .bss	00000004 fp
00026e48 g     F .text	0000015c memmove
00020b10 g     F .text	00000018 _cleanup
00026fa4 g     F .text	000000a8 _Balloc
0002c188 g     F .text	000000dc .hidden __gtdf2
0002fb54 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
0002ef08 g     F .text	000000cc alt_up_accelerometer_spi_read_x_axis
00020020 g       *ABS*	00000000 __flash_exceptions_start
00021538 g     F .text	0000005c _fstat_r
000339cc g     O .bss	00000004 errno
00022644 g     F .text	00000008 __seofread
000339ec g     O .bss	00000004 alt_argv
00039e60 g       *ABS*	00000000 _gp
00030c54 g     O .rwdata	00000180 alt_fd_list
0002f480 g     F .text	00000090 alt_find_dev
00026d00 g     F .text	00000148 memcpy
000207e0 g     F .text	0000000c _cleanup_r
0002d3ec g     F .text	000000dc .hidden __floatsidf
0002f7b4 g     F .text	0000007c alt_io_redirect
0002c264 g     F .text	000000f4 .hidden __ltdf2
00030038 g       *ABS*	00000000 __DTOR_END__
00022398 g     F .text	00000014 puts
0002fc08 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00028564 g     F .text	00000074 __fpclassifyd
00027d84 g     F .text	000000a4 __ratio
00029c24 g     F .text	0000001c __vfiprintf_internal
0002e864 g     F .text	0000021c altera_avalon_jtag_uart_read
0002226c g     F .text	00000030 _printf_r
0002aeb0 g     F .text	00000064 .hidden __udivsi3
0002d834 g     F .text	000000a4 isatty
0003015c g     O .rodata	000000c8 __mprec_tens
00026b5c g     F .text	0000000c __locale_charset
0002fb78 g     F .text	00000090 alt_icache_flush
000339d8 g     O .bss	00000004 __malloc_top_pad
00031e70 g     O .rwdata	00000004 __mb_cur_max
00026b8c g     F .text	0000000c _localeconv_r
000273b0 g     F .text	0000003c __i2b
000265d0 g     F .text	000004bc __sfvwrite_r
0002259c g     F .text	00000054 _sbrk_r
00027fa0 g     F .text	00000060 _read_r
00031e88 g     O .rwdata	00000004 alt_max_fd
0002042c g     F .text	000000f0 _fclose_r
000207a8 g     F .text	00000030 fflush
000339d4 g     O .bss	00000004 __malloc_max_sbrked_mem
0002f830 g     F .text	00000180 alt_irq_register
0002af6c g     F .text	000008ac .hidden __adddf3
00027b2c g     F .text	0000010c __b2d
0002a880 g     F .text	00000538 .hidden __umoddi3
0002da00 g     F .text	000000d4 lseek
00031e60 g     O .rwdata	00000004 _global_impure_ptr
00028000 g     F .text	00000564 _realloc_r
00033b34 g       *ABS*	00000000 __bss_end
0002fa4c g     F .text	00000108 alt_tick
0002a308 g     F .text	00000578 .hidden __udivdi3
00029f24 g     F .text	00000024 _fputwc_r
00030134 g     O .rodata	00000028 __mprec_bigtens
00027194 g     F .text	00000104 __s2b
0002d4c8 g     F .text	000000a8 .hidden __floatunsidf
0002786c g     F .text	00000060 __mcmp
00020b48 g     F .text	00000018 __fp_lock_all
0002f9b0 g     F .text	0000009c alt_alarm_stop
000339fc g     O .bss	00000004 alt_irq_active
000210d8 g     F .text	00000444 _fseeko_r
000200fc g     F .exceptions	000000d8 alt_irq_handler
00030c2c g     O .rwdata	00000028 alt_dev_null
0002f298 g     F .text	00000048 alt_dcache_flush_all
00027298 g     F .text	00000068 __hi0bits
0002d36c g     F .text	00000080 .hidden __fixdfsi
00031ea0 g       *ABS*	00000000 __ram_rwdata_end
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory
00031e80 g     O .rwdata	00000008 alt_dev_list
0002e074 g     F .text	000000f8 write
0002ed9c g     F .text	00000020 alt_timestamp_freq
00030388 g       *ABS*	00000000 __ram_rodata_end
0002d748 g     F .text	000000b0 fstat
0002c264 g     F .text	000000f4 .hidden __ledf2
000275e4 g     F .text	00000140 __pow5mult
000339bc g     O .bss	00000001 led
000287c8 g     F .text	0000145c ___vfiprintf_internal_r
000339e4 g     O .bss	00000004 __nlocale_changed
0002af14 g     F .text	00000058 .hidden __umodsi3
00033b34 g       *ABS*	00000000 end
0002151c g     F .text	0000001c fseeko
000210bc g     F .text	0000001c fseek
0002e3a8 g     F .text	000000b4 altera_avalon_jtag_uart_init
000201d4 g     F .exceptions	00000074 alt_instruction_exception_entry
00030038 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002d570 g     F .text	00000064 .hidden __clzsi2
0002ea80 g     F .text	00000224 altera_avalon_jtag_uart_write
00020b38 g     F .text	00000004 __sfp_lock_acquire
00026c1c g     F .text	000000e4 memchr
000227c4 g     F .text	000021f8 ___vfprintf_internal_r
00020da8 g     F .text	00000310 _free_r
00026b68 g     F .text	00000010 __locale_mb_cur_max
0002fe84 g     F .text	00000180 __call_exitprocs
000339e0 g     O .bss	00000004 __mlocale_changed
00031e68 g     O .rwdata	00000004 __malloc_sbrk_base
00020248 g     F .text	0000004c _start
000339c0 g     O .bss	00000004 level
00033a00 g     O .bss	00000004 _alt_tick_rate
00027724 g     F .text	00000148 __lshift
00033a04 g     O .bss	00000004 _alt_nticks
000339c4 g     O .bss	00000004 stopTime
0002de28 g     F .text	000000fc read
0002e1d8 g     F .text	0000006c alt_sys_init
0002edf8 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
0002220c g     F .text	00000060 _open_r
0002fd6c g     F .text	00000118 __register_exitproc
000273ec g     F .text	000001f8 __multiply
0002e70c g     F .text	00000068 altera_avalon_jtag_uart_close
00030388 g       *ABS*	00000000 __ram_rwdata_start
00030038 g       *ABS*	00000000 __ram_rodata_start
00033a0c g     O .bss	00000028 __malloc_current_mallinfo
00027c38 g     F .text	0000014c __d2b
0002e244 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002f618 g     F .text	000000a4 alt_get_fd
0002efd4 g     F .text	000000cc alt_up_accelerometer_spi_read_y_axis
00024c48 g     F .text	00000054 _close_r
0002fcf0 g     F .text	0000007c memcmp
0002e304 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00033b34 g       *ABS*	00000000 __alt_stack_base
0002e354 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00024af4 g     F .text	00000154 __swsetup_r
0002b818 g     F .text	000008e8 .hidden __divdf3
000209f8 g     F .text	00000118 __sfp
00027e9c g     F .text	00000078 __copybits
000307ac g     O .rwdata	00000408 __malloc_av_
00020b44 g     F .text	00000004 __sinit_lock_release
0002c358 g     F .text	00000718 .hidden __muldf3
000225f0 g     F .text	00000054 __sread
0002f510 g     F .text	00000108 alt_find_file
0002f31c g     F .text	000000a4 alt_dev_llist_insert
0002db50 g     F .text	00000024 __malloc_lock
0002df88 g     F .text	000000b0 sbrk
0002074c g     F .text	0000005c _fflush_r
00029cfc g     F .text	000000c4 _calloc_r
00020c6c g     F .text	00000018 fopen
000339b8 g       *ABS*	00000000 __bss_start
000220e4 g     F .text	00000128 memset
000202cc g     F .text	00000160 main
000339f0 g     O .bss	00000004 alt_envp
000339d0 g     O .bss	00000004 __malloc_max_total_mem
0002e2a4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002a108 g     F .text	00000018 __swbuf
00022724 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
0002051c g     F .text	00000014 fclose
0002eca4 g     F .text	00000078 alt_timestamp_start
00024e9c g     F .text	00001688 _dtoa_r
000218d8 g     F .text	0000080c _malloc_r
0002a27c g     F .text	00000030 __ascii_wctomb
00031e8c g     O .rwdata	00000004 alt_errno
00021594 g     F .text	000000c4 _fwalk
0002adb8 g     F .text	00000084 .hidden __divsi3
00020c84 g     F .text	00000124 _malloc_trim_r
00030038 g       *ABS*	00000000 __CTOR_END__
000285d8 g     F .text	000000dc strcmp
00030038 g       *ABS*	00000000 __flash_rodata_start
00030038 g       *ABS*	00000000 __DTOR_LIST__
0002c100 g     F .text	00000088 .hidden __nedf2
0002e1a0 g     F .text	00000038 alt_irq_init
0002df24 g     F .text	00000064 alt_release_fd
00030244 g     O .rodata	00000100 .hidden __clz_tab
000339dc g     O .bss	00000004 _PathLocale
0002fca4 g     F .text	00000014 atexit
00024a94 g     F .text	00000060 _write_r
00026b98 g     F .text	00000018 setlocale
00031e64 g     O .rwdata	00000004 _impure_ptr
000339e8 g     O .bss	00000004 alt_argc
00020530 g     F .text	0000021c __sflush_r
000339f4 g     O .bss	00000004 altera_avalon_timer_ts_base
0002f420 g     F .text	00000060 _do_dtors
00026b84 g     F .text	00000008 __locale_cjk_lang
000210b8 g     F .text	00000004 _fseek_r
000223c8 g     F .text	000001d4 __srefill_r
00020020 g       .exceptions	00000000 alt_irq_entry
00027ac8 g     F .text	00000064 __ulp
00020b60 g     F .text	00000018 __fp_unlock_all
00031e78 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002edbc g     F .text	0000003c alt_up_accelerometer_spi_open_dev
00026bb0 g     F .text	0000000c localeconv
0002ed1c g     F .text	00000080 alt_timestamp
00031ea0 g       *ABS*	00000000 _edata
00033b34 g       *ABS*	00000000 _end
00029dc0 g     F .text	00000164 __fputwc
00020248 g       *ABS*	00000000 __ram_exceptions_end
0002e774 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002264c g     F .text	0000007c __swrite
00031e6c g     O .rwdata	00000004 __malloc_trim_threshold
00026b78 g     F .text	0000000c __locale_msgcharset
0002fcb8 g     F .text	00000038 exit
00021658 g     F .text	000000c4 _fwalk_reent
000278cc g     F .text	000001fc __mdiff
0002ae3c g     F .text	00000074 .hidden __modsi3
0002f0a0 g     F .text	000000cc alt_up_accelerometer_spi_read_z_axis
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00020b3c g     F .text	00000004 __sfp_lock_release
00020b78 g     F .text	000000f4 _fopen_r
00030004 g     F .text	00000034 _exit
0002f16c g     F .text	0000012c alt_alarm_start
0002ee3c g     F .text	00000068 alt_up_accelerometer_spi_read
0002eea4 g     F .text	00000064 alt_up_accelerometer_spi_write
0002171c g     F .text	000001bc __smakebuf_r
0002272c g     F .text	00000098 strlen
0002dc98 g     F .text	00000154 open
0002c188 g     F .text	000000dc .hidden __gedf2
00031e74 g     O .rwdata	00000004 __wctomb
000287b0 g     F .text	00000018 __sprint_r
0002f6bc g     F .text	00000034 alt_icache_flush_all
00031e94 g     O .rwdata	00000004 alt_priority_mask
000249bc g     F .text	0000001c __vfprintf_internal
000339c8 g     O .bss	00000004 startTime
0002a2ac g     F .text	0000005c _wctomb_r
0002ca70 g     F .text	000008fc .hidden __subdf3
00027300 g     F .text	000000b0 __lo0bits
00031e98 g     O .rwdata	00000008 alt_alarm_list
0002f3c0 g     F .text	00000060 _do_ctors
0002a1bc g     F .text	000000c0 wcrtomb
0002d610 g     F .text	000000d0 close
0002d940 g     F .text	00000084 alt_load
00029f48 g     F .text	00000080 fputwc
00020b40 g     F .text	00000004 __sinit_lock_acquire
00027074 g     F .text	00000120 __multadd
0002704c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409214 	ori	at,at,584
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d40 	call	201d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001526 	beq	r2,zero,20190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   2013c:	008000f4 	movhi	r2,3
   20140:	108e8d04 	addi	r2,r2,14900
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	108e8d04 	addi	r2,r2,14900
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	e17ffd17 	ldw	r5,-12(fp)
   20174:	1009883a 	mov	r4,r2
   20178:	183ee83a 	callr	r3
#endif
        break;
   2017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20180:	0005313a 	rdctl	r2,ipending
   20184:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20188:	e0bfff17 	ldw	r2,-4(fp)
   2018c:	00000706 	br	201ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
   20190:	e0bffc17 	ldw	r2,-16(fp)
   20194:	1085883a 	add	r2,r2,r2
   20198:	e0bffc15 	stw	r2,-16(fp)
      i++;
   2019c:	e0bffd17 	ldw	r2,-12(fp)
   201a0:	10800044 	addi	r2,r2,1
   201a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a8:	003fe006 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201b0:	e0bffb17 	ldw	r2,-20(fp)
   201b4:	103fda1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b8:	0001883a 	nop
}
   201bc:	0001883a 	nop
   201c0:	e037883a 	mov	sp,fp
   201c4:	dfc00117 	ldw	ra,4(sp)
   201c8:	df000017 	ldw	fp,0(sp)
   201cc:	dec00204 	addi	sp,sp,8
   201d0:	f800283a 	ret

000201d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d4:	defffb04 	addi	sp,sp,-20
   201d8:	dfc00415 	stw	ra,16(sp)
   201dc:	df000315 	stw	fp,12(sp)
   201e0:	df000304 	addi	fp,sp,12
   201e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e8:	000531fa 	rdctl	r2,exception
   201ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201f0:	e0bffd17 	ldw	r2,-12(fp)
   201f4:	10801f0c 	andi	r2,r2,124
   201f8:	1004d0ba 	srli	r2,r2,2
   201fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   20200:	0005333a 	rdctl	r2,badaddr
   20204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20208:	d0a6ea17 	ldw	r2,-25688(gp)
   2020c:	10000726 	beq	r2,zero,2022c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   20210:	d0a6ea17 	ldw	r2,-25688(gp)
   20214:	e0fffd17 	ldw	r3,-12(fp)
   20218:	e1bffe17 	ldw	r6,-8(fp)
   2021c:	e17fff17 	ldw	r5,-4(fp)
   20220:	1809883a 	mov	r4,r3
   20224:	103ee83a 	callr	r2
   20228:	00000206 	br	20234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   2022c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20230:	0005883a 	mov	r2,zero
}
   20234:	e037883a 	mov	sp,fp
   20238:	dfc00117 	ldw	ra,4(sp)
   2023c:	df000017 	ldw	fp,0(sp)
   20240:	dec00204 	addi	sp,sp,8
   20244:	f800283a 	ret

Disassembly of section .text:

00020248 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20248:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   2024c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   20250:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20254:	00bffd16 	blt	zero,r2,2024c <__alt_data_end+0xfffe024c>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20258:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   2025c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   20260:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20264:	d6a79814 	ori	gp,gp,40544
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20268:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   2026c:	108e6e14 	ori	r2,r2,14776

    movhi r3, %hi(__bss_end)
   20270:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20274:	18cecd14 	ori	r3,r3,15156

    beq r2, r3, 1f
   20278:	10c00326 	beq	r2,r3,20288 <_start+0x40>

0:
    stw zero, (r2)
   2027c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20280:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20284:	10fffd36 	bltu	r2,r3,2027c <__alt_data_end+0xfffe027c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20288:	002d9400 	call	2d940 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   2028c:	002dad40 	call	2dad4 <alt_main>

00020290 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20290:	003fff06 	br	20290 <__alt_data_end+0xfffe0290>

00020294 <led_write>:
int level;

//Timer
alt_u32 startTime, stopTime;

void led_write(alt_u8 led_pattern) {
   20294:	defffe04 	addi	sp,sp,-8
   20298:	df000115 	stw	fp,4(sp)
   2029c:	df000104 	addi	fp,sp,4
   202a0:	2005883a 	mov	r2,r4
   202a4:	e0bfff05 	stb	r2,-4(fp)
    IOWR(LED_BASE, 0, led_pattern);
   202a8:	e0ffff03 	ldbu	r3,-4(fp)
   202ac:	00800134 	movhi	r2,4
   202b0:	10842804 	addi	r2,r2,4256
   202b4:	10c00035 	stwio	r3,0(r2)
}
   202b8:	0001883a 	nop
   202bc:	e037883a 	mov	sp,fp
   202c0:	df000017 	ldw	fp,0(sp)
   202c4:	dec00104 	addi	sp,sp,4
   202c8:	f800283a 	ret

000202cc <main>:

int main () {
   202cc:	defff904 	addi	sp,sp,-28
   202d0:	dfc00615 	stw	ra,24(sp)
   202d4:	df000515 	stw	fp,20(sp)
   202d8:	df000504 	addi	fp,sp,20
	//Accelerometer setup
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   202dc:	010000f4 	movhi	r4,3
   202e0:	21000e04 	addi	r4,r4,56
   202e4:	002edbc0 	call	2edbc <alt_up_accelerometer_spi_open_dev>
   202e8:	e0bffb15 	stw	r2,-20(fp)
	if (acc_dev == NULL) {
   202ec:	e0bffb17 	ldw	r2,-20(fp)
   202f0:	1000021e 	bne	r2,zero,202fc <main+0x30>
		// if return 1, check if the spi ip name is "accelerometer_spi"
		return 1;
   202f4:	00800044 	movi	r2,1
   202f8:	00004706 	br	20418 <main+0x14c>
	}
	//Open file for reading and writing
	char dataIn = 0;
   202fc:	e03ffc05 	stb	zero,-16(fp)
	fp = fopen ("/dev/jtag_uart", "r+");
   20300:	014000f4 	movhi	r5,3
   20304:	29401404 	addi	r5,r5,80
   20308:	010000f4 	movhi	r4,3
   2030c:	21001504 	addi	r4,r4,84
   20310:	0020c6c0 	call	20c6c <fopen>
   20314:	d0a6d615 	stw	r2,-25768(gp)

	if (fp)	{
   20318:	d0a6d617 	ldw	r2,-25768(gp)
   2031c:	10003d26 	beq	r2,zero,20414 <main+0x148>
		//Begin
		led_write(0x7);
   20320:	010001c4 	movi	r4,7
   20324:	00202940 	call	20294 <led_write>
		alt_timestamp_start();
   20328:	002eca40 	call	2eca4 <alt_timestamp_start>
		startTime = alt_timestamp();
   2032c:	002ed1c0 	call	2ed1c <alt_timestamp>
   20330:	d0a6da15 	stw	r2,-25752(gp)
		// Loop until KILL command
		//Comparing strings in the usual way compares the pointers.
		while (dataIn != 'k') {
   20334:	00002c06 	br	203e8 <main+0x11c>
			// Get data/command from Python interface
			led_write(0x60);
   20338:	01001804 	movi	r4,96
   2033c:	00202940 	call	20294 <led_write>
				fwrite (msg, strlen (msg), 1, fp);
				alt_printf("Got t\n");
			}
			*/
			//If file write fails
			if (ferror(fp)) {// Check if an error occurred with the file
   20340:	d0a6d617 	ldw	r2,-25768(gp)
   20344:	1080030b 	ldhu	r2,12(r2)
   20348:	10bfffcc 	andi	r2,r2,65535
   2034c:	1080100c 	andi	r2,r2,64
   20350:	10000626 	beq	r2,zero,2036c <main+0xa0>
				clearerr(fp);// If so, clear it.
   20354:	d0a6d617 	ldw	r2,-25768(gp)
   20358:	d0e6d617 	ldw	r3,-25768(gp)
   2035c:	1900030b 	ldhu	r4,12(r3)
   20360:	00ffe7c4 	movi	r3,-97
   20364:	20c6703a 	and	r3,r4,r3
   20368:	10c0030d 	sth	r3,12(r2)
			}
			//Obtain values at a certain frequency
			stopTime = alt_timestamp();
   2036c:	002ed1c0 	call	2ed1c <alt_timestamp>
   20370:	d0a6d915 	stw	r2,-25756(gp)
			//Frequency of accelerometer is 2^SAMPLING_TIME Hz, with 6, 64Hz
			if ((stopTime-startTime) > (INTERVALSECOND >> SAMPLING_TIME-1)) {
   20374:	d0e6d917 	ldw	r3,-25756(gp)
   20378:	d0a6da17 	ldw	r2,-25752(gp)
   2037c:	1887c83a 	sub	r3,r3,r2
   20380:	00805f74 	movhi	r2,381
   20384:	109e1004 	addi	r2,r2,30784
   20388:	10c0172e 	bgeu	r2,r3,203e8 <main+0x11c>
				alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
   2038c:	e0bffd04 	addi	r2,fp,-12
   20390:	100b883a 	mov	r5,r2
   20394:	e13ffb17 	ldw	r4,-20(fp)
   20398:	002ef080 	call	2ef08 <alt_up_accelerometer_spi_read_x_axis>
				alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
   2039c:	e0bffe04 	addi	r2,fp,-8
   203a0:	100b883a 	mov	r5,r2
   203a4:	e13ffb17 	ldw	r4,-20(fp)
   203a8:	002efd40 	call	2efd4 <alt_up_accelerometer_spi_read_y_axis>
				alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);
   203ac:	e0bfff04 	addi	r2,fp,-4
   203b0:	100b883a 	mov	r5,r2
   203b4:	e13ffb17 	ldw	r4,-20(fp)
   203b8:	002f0a00 	call	2f0a0 <alt_up_accelerometer_spi_read_z_axis>
				printf("%d %d %d\n", x_read, y_read, z_read);
   203bc:	e0bffd17 	ldw	r2,-12(fp)
   203c0:	e0fffe17 	ldw	r3,-8(fp)
   203c4:	e13fff17 	ldw	r4,-4(fp)
   203c8:	200f883a 	mov	r7,r4
   203cc:	180d883a 	mov	r6,r3
   203d0:	100b883a 	mov	r5,r2
   203d4:	010000f4 	movhi	r4,3
   203d8:	21001904 	addi	r4,r4,100
   203dc:	002229c0 	call	2229c <printf>
				startTime = alt_timestamp();
   203e0:	002ed1c0 	call	2ed1c <alt_timestamp>
   203e4:	d0a6da15 	stw	r2,-25752(gp)
		led_write(0x7);
		alt_timestamp_start();
		startTime = alt_timestamp();
		// Loop until KILL command
		//Comparing strings in the usual way compares the pointers.
		while (dataIn != 'k') {
   203e8:	e0bffc07 	ldb	r2,-16(fp)
   203ec:	10801ad8 	cmpnei	r2,r2,107
   203f0:	103fd11e 	bne	r2,zero,20338 <__alt_data_end+0xfffe0338>
				alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);
				printf("%d %d %d\n", x_read, y_read, z_read);
				startTime = alt_timestamp();
			}
		}
		printf("Killed.\n");
   203f4:	010000f4 	movhi	r4,3
   203f8:	21001c04 	addi	r4,r4,112
   203fc:	00223980 	call	22398 <puts>
		led_write(0x1);
   20400:	01000044 	movi	r4,1
   20404:	00202940 	call	20294 <led_write>
		fclose (fp);
   20408:	d0a6d617 	ldw	r2,-25768(gp)
   2040c:	1009883a 	mov	r4,r2
   20410:	002051c0 	call	2051c <fclose>
	}
	return 0;
   20414:	0005883a 	mov	r2,zero
}
   20418:	e037883a 	mov	sp,fp
   2041c:	dfc00117 	ldw	ra,4(sp)
   20420:	df000017 	ldw	fp,0(sp)
   20424:	dec00204 	addi	sp,sp,8
   20428:	f800283a 	ret

0002042c <_fclose_r>:
   2042c:	28003926 	beq	r5,zero,20514 <_fclose_r+0xe8>
   20430:	defffc04 	addi	sp,sp,-16
   20434:	dc400115 	stw	r17,4(sp)
   20438:	dc000015 	stw	r16,0(sp)
   2043c:	dfc00315 	stw	ra,12(sp)
   20440:	dc800215 	stw	r18,8(sp)
   20444:	2023883a 	mov	r17,r4
   20448:	2821883a 	mov	r16,r5
   2044c:	20000226 	beq	r4,zero,20458 <_fclose_r+0x2c>
   20450:	20800e17 	ldw	r2,56(r4)
   20454:	10002726 	beq	r2,zero,204f4 <_fclose_r+0xc8>
   20458:	8080030f 	ldh	r2,12(r16)
   2045c:	1000071e 	bne	r2,zero,2047c <_fclose_r+0x50>
   20460:	0005883a 	mov	r2,zero
   20464:	dfc00317 	ldw	ra,12(sp)
   20468:	dc800217 	ldw	r18,8(sp)
   2046c:	dc400117 	ldw	r17,4(sp)
   20470:	dc000017 	ldw	r16,0(sp)
   20474:	dec00404 	addi	sp,sp,16
   20478:	f800283a 	ret
   2047c:	800b883a 	mov	r5,r16
   20480:	8809883a 	mov	r4,r17
   20484:	00205300 	call	20530 <__sflush_r>
   20488:	1025883a 	mov	r18,r2
   2048c:	80800b17 	ldw	r2,44(r16)
   20490:	10000426 	beq	r2,zero,204a4 <_fclose_r+0x78>
   20494:	81400717 	ldw	r5,28(r16)
   20498:	8809883a 	mov	r4,r17
   2049c:	103ee83a 	callr	r2
   204a0:	10001616 	blt	r2,zero,204fc <_fclose_r+0xd0>
   204a4:	8080030b 	ldhu	r2,12(r16)
   204a8:	1080200c 	andi	r2,r2,128
   204ac:	1000151e 	bne	r2,zero,20504 <_fclose_r+0xd8>
   204b0:	81400c17 	ldw	r5,48(r16)
   204b4:	28000526 	beq	r5,zero,204cc <_fclose_r+0xa0>
   204b8:	80801004 	addi	r2,r16,64
   204bc:	28800226 	beq	r5,r2,204c8 <_fclose_r+0x9c>
   204c0:	8809883a 	mov	r4,r17
   204c4:	0020da80 	call	20da8 <_free_r>
   204c8:	80000c15 	stw	zero,48(r16)
   204cc:	81401117 	ldw	r5,68(r16)
   204d0:	28000326 	beq	r5,zero,204e0 <_fclose_r+0xb4>
   204d4:	8809883a 	mov	r4,r17
   204d8:	0020da80 	call	20da8 <_free_r>
   204dc:	80001115 	stw	zero,68(r16)
   204e0:	0020b380 	call	20b38 <__sfp_lock_acquire>
   204e4:	8000030d 	sth	zero,12(r16)
   204e8:	0020b3c0 	call	20b3c <__sfp_lock_release>
   204ec:	9005883a 	mov	r2,r18
   204f0:	003fdc06 	br	20464 <__alt_data_end+0xfffe0464>
   204f4:	0020b280 	call	20b28 <__sinit>
   204f8:	003fd706 	br	20458 <__alt_data_end+0xfffe0458>
   204fc:	04bfffc4 	movi	r18,-1
   20500:	003fe806 	br	204a4 <__alt_data_end+0xfffe04a4>
   20504:	81400417 	ldw	r5,16(r16)
   20508:	8809883a 	mov	r4,r17
   2050c:	0020da80 	call	20da8 <_free_r>
   20510:	003fe706 	br	204b0 <__alt_data_end+0xfffe04b0>
   20514:	0005883a 	mov	r2,zero
   20518:	f800283a 	ret

0002051c <fclose>:
   2051c:	008000f4 	movhi	r2,3
   20520:	10879904 	addi	r2,r2,7780
   20524:	200b883a 	mov	r5,r4
   20528:	11000017 	ldw	r4,0(r2)
   2052c:	002042c1 	jmpi	2042c <_fclose_r>

00020530 <__sflush_r>:
   20530:	2880030b 	ldhu	r2,12(r5)
   20534:	defffb04 	addi	sp,sp,-20
   20538:	dcc00315 	stw	r19,12(sp)
   2053c:	dc400115 	stw	r17,4(sp)
   20540:	dfc00415 	stw	ra,16(sp)
   20544:	dc800215 	stw	r18,8(sp)
   20548:	dc000015 	stw	r16,0(sp)
   2054c:	10c0020c 	andi	r3,r2,8
   20550:	2823883a 	mov	r17,r5
   20554:	2027883a 	mov	r19,r4
   20558:	1800311e 	bne	r3,zero,20620 <__sflush_r+0xf0>
   2055c:	28c00117 	ldw	r3,4(r5)
   20560:	10820014 	ori	r2,r2,2048
   20564:	2880030d 	sth	r2,12(r5)
   20568:	00c04b0e 	bge	zero,r3,20698 <__sflush_r+0x168>
   2056c:	8a000a17 	ldw	r8,40(r17)
   20570:	40002326 	beq	r8,zero,20600 <__sflush_r+0xd0>
   20574:	9c000017 	ldw	r16,0(r19)
   20578:	10c4000c 	andi	r3,r2,4096
   2057c:	98000015 	stw	zero,0(r19)
   20580:	18004826 	beq	r3,zero,206a4 <__sflush_r+0x174>
   20584:	89801417 	ldw	r6,80(r17)
   20588:	10c0010c 	andi	r3,r2,4
   2058c:	18000626 	beq	r3,zero,205a8 <__sflush_r+0x78>
   20590:	88c00117 	ldw	r3,4(r17)
   20594:	88800c17 	ldw	r2,48(r17)
   20598:	30cdc83a 	sub	r6,r6,r3
   2059c:	10000226 	beq	r2,zero,205a8 <__sflush_r+0x78>
   205a0:	88800f17 	ldw	r2,60(r17)
   205a4:	308dc83a 	sub	r6,r6,r2
   205a8:	89400717 	ldw	r5,28(r17)
   205ac:	000f883a 	mov	r7,zero
   205b0:	9809883a 	mov	r4,r19
   205b4:	403ee83a 	callr	r8
   205b8:	00ffffc4 	movi	r3,-1
   205bc:	10c04426 	beq	r2,r3,206d0 <__sflush_r+0x1a0>
   205c0:	88c0030b 	ldhu	r3,12(r17)
   205c4:	89000417 	ldw	r4,16(r17)
   205c8:	88000115 	stw	zero,4(r17)
   205cc:	197dffcc 	andi	r5,r3,63487
   205d0:	8940030d 	sth	r5,12(r17)
   205d4:	89000015 	stw	r4,0(r17)
   205d8:	18c4000c 	andi	r3,r3,4096
   205dc:	18002c1e 	bne	r3,zero,20690 <__sflush_r+0x160>
   205e0:	89400c17 	ldw	r5,48(r17)
   205e4:	9c000015 	stw	r16,0(r19)
   205e8:	28000526 	beq	r5,zero,20600 <__sflush_r+0xd0>
   205ec:	88801004 	addi	r2,r17,64
   205f0:	28800226 	beq	r5,r2,205fc <__sflush_r+0xcc>
   205f4:	9809883a 	mov	r4,r19
   205f8:	0020da80 	call	20da8 <_free_r>
   205fc:	88000c15 	stw	zero,48(r17)
   20600:	0005883a 	mov	r2,zero
   20604:	dfc00417 	ldw	ra,16(sp)
   20608:	dcc00317 	ldw	r19,12(sp)
   2060c:	dc800217 	ldw	r18,8(sp)
   20610:	dc400117 	ldw	r17,4(sp)
   20614:	dc000017 	ldw	r16,0(sp)
   20618:	dec00504 	addi	sp,sp,20
   2061c:	f800283a 	ret
   20620:	2c800417 	ldw	r18,16(r5)
   20624:	903ff626 	beq	r18,zero,20600 <__alt_data_end+0xfffe0600>
   20628:	2c000017 	ldw	r16,0(r5)
   2062c:	108000cc 	andi	r2,r2,3
   20630:	2c800015 	stw	r18,0(r5)
   20634:	84a1c83a 	sub	r16,r16,r18
   20638:	1000131e 	bne	r2,zero,20688 <__sflush_r+0x158>
   2063c:	28800517 	ldw	r2,20(r5)
   20640:	88800215 	stw	r2,8(r17)
   20644:	04000316 	blt	zero,r16,20654 <__sflush_r+0x124>
   20648:	003fed06 	br	20600 <__alt_data_end+0xfffe0600>
   2064c:	90a5883a 	add	r18,r18,r2
   20650:	043feb0e 	bge	zero,r16,20600 <__alt_data_end+0xfffe0600>
   20654:	88800917 	ldw	r2,36(r17)
   20658:	89400717 	ldw	r5,28(r17)
   2065c:	800f883a 	mov	r7,r16
   20660:	900d883a 	mov	r6,r18
   20664:	9809883a 	mov	r4,r19
   20668:	103ee83a 	callr	r2
   2066c:	80a1c83a 	sub	r16,r16,r2
   20670:	00bff616 	blt	zero,r2,2064c <__alt_data_end+0xfffe064c>
   20674:	88c0030b 	ldhu	r3,12(r17)
   20678:	00bfffc4 	movi	r2,-1
   2067c:	18c01014 	ori	r3,r3,64
   20680:	88c0030d 	sth	r3,12(r17)
   20684:	003fdf06 	br	20604 <__alt_data_end+0xfffe0604>
   20688:	0005883a 	mov	r2,zero
   2068c:	003fec06 	br	20640 <__alt_data_end+0xfffe0640>
   20690:	88801415 	stw	r2,80(r17)
   20694:	003fd206 	br	205e0 <__alt_data_end+0xfffe05e0>
   20698:	28c00f17 	ldw	r3,60(r5)
   2069c:	00ffb316 	blt	zero,r3,2056c <__alt_data_end+0xfffe056c>
   206a0:	003fd706 	br	20600 <__alt_data_end+0xfffe0600>
   206a4:	89400717 	ldw	r5,28(r17)
   206a8:	000d883a 	mov	r6,zero
   206ac:	01c00044 	movi	r7,1
   206b0:	9809883a 	mov	r4,r19
   206b4:	403ee83a 	callr	r8
   206b8:	100d883a 	mov	r6,r2
   206bc:	00bfffc4 	movi	r2,-1
   206c0:	30801426 	beq	r6,r2,20714 <__sflush_r+0x1e4>
   206c4:	8880030b 	ldhu	r2,12(r17)
   206c8:	8a000a17 	ldw	r8,40(r17)
   206cc:	003fae06 	br	20588 <__alt_data_end+0xfffe0588>
   206d0:	98c00017 	ldw	r3,0(r19)
   206d4:	183fba26 	beq	r3,zero,205c0 <__alt_data_end+0xfffe05c0>
   206d8:	01000744 	movi	r4,29
   206dc:	19000626 	beq	r3,r4,206f8 <__sflush_r+0x1c8>
   206e0:	01000584 	movi	r4,22
   206e4:	19000426 	beq	r3,r4,206f8 <__sflush_r+0x1c8>
   206e8:	88c0030b 	ldhu	r3,12(r17)
   206ec:	18c01014 	ori	r3,r3,64
   206f0:	88c0030d 	sth	r3,12(r17)
   206f4:	003fc306 	br	20604 <__alt_data_end+0xfffe0604>
   206f8:	8880030b 	ldhu	r2,12(r17)
   206fc:	88c00417 	ldw	r3,16(r17)
   20700:	88000115 	stw	zero,4(r17)
   20704:	10bdffcc 	andi	r2,r2,63487
   20708:	8880030d 	sth	r2,12(r17)
   2070c:	88c00015 	stw	r3,0(r17)
   20710:	003fb306 	br	205e0 <__alt_data_end+0xfffe05e0>
   20714:	98800017 	ldw	r2,0(r19)
   20718:	103fea26 	beq	r2,zero,206c4 <__alt_data_end+0xfffe06c4>
   2071c:	00c00744 	movi	r3,29
   20720:	10c00226 	beq	r2,r3,2072c <__sflush_r+0x1fc>
   20724:	00c00584 	movi	r3,22
   20728:	10c0031e 	bne	r2,r3,20738 <__sflush_r+0x208>
   2072c:	9c000015 	stw	r16,0(r19)
   20730:	0005883a 	mov	r2,zero
   20734:	003fb306 	br	20604 <__alt_data_end+0xfffe0604>
   20738:	88c0030b 	ldhu	r3,12(r17)
   2073c:	3005883a 	mov	r2,r6
   20740:	18c01014 	ori	r3,r3,64
   20744:	88c0030d 	sth	r3,12(r17)
   20748:	003fae06 	br	20604 <__alt_data_end+0xfffe0604>

0002074c <_fflush_r>:
   2074c:	defffd04 	addi	sp,sp,-12
   20750:	dc000115 	stw	r16,4(sp)
   20754:	dfc00215 	stw	ra,8(sp)
   20758:	2021883a 	mov	r16,r4
   2075c:	20000226 	beq	r4,zero,20768 <_fflush_r+0x1c>
   20760:	20800e17 	ldw	r2,56(r4)
   20764:	10000c26 	beq	r2,zero,20798 <_fflush_r+0x4c>
   20768:	2880030f 	ldh	r2,12(r5)
   2076c:	1000051e 	bne	r2,zero,20784 <_fflush_r+0x38>
   20770:	0005883a 	mov	r2,zero
   20774:	dfc00217 	ldw	ra,8(sp)
   20778:	dc000117 	ldw	r16,4(sp)
   2077c:	dec00304 	addi	sp,sp,12
   20780:	f800283a 	ret
   20784:	8009883a 	mov	r4,r16
   20788:	dfc00217 	ldw	ra,8(sp)
   2078c:	dc000117 	ldw	r16,4(sp)
   20790:	dec00304 	addi	sp,sp,12
   20794:	00205301 	jmpi	20530 <__sflush_r>
   20798:	d9400015 	stw	r5,0(sp)
   2079c:	0020b280 	call	20b28 <__sinit>
   207a0:	d9400017 	ldw	r5,0(sp)
   207a4:	003ff006 	br	20768 <__alt_data_end+0xfffe0768>

000207a8 <fflush>:
   207a8:	20000526 	beq	r4,zero,207c0 <fflush+0x18>
   207ac:	008000f4 	movhi	r2,3
   207b0:	10879904 	addi	r2,r2,7780
   207b4:	200b883a 	mov	r5,r4
   207b8:	11000017 	ldw	r4,0(r2)
   207bc:	002074c1 	jmpi	2074c <_fflush_r>
   207c0:	008000f4 	movhi	r2,3
   207c4:	10879804 	addi	r2,r2,7776
   207c8:	11000017 	ldw	r4,0(r2)
   207cc:	014000b4 	movhi	r5,2
   207d0:	2941d304 	addi	r5,r5,1868
   207d4:	00216581 	jmpi	21658 <_fwalk_reent>

000207d8 <__fp_unlock>:
   207d8:	0005883a 	mov	r2,zero
   207dc:	f800283a 	ret

000207e0 <_cleanup_r>:
   207e0:	014000b4 	movhi	r5,2
   207e4:	29410b04 	addi	r5,r5,1068
   207e8:	00216581 	jmpi	21658 <_fwalk_reent>

000207ec <__sinit.part.1>:
   207ec:	defff704 	addi	sp,sp,-36
   207f0:	00c000b4 	movhi	r3,2
   207f4:	dfc00815 	stw	ra,32(sp)
   207f8:	ddc00715 	stw	r23,28(sp)
   207fc:	dd800615 	stw	r22,24(sp)
   20800:	dd400515 	stw	r21,20(sp)
   20804:	dd000415 	stw	r20,16(sp)
   20808:	dcc00315 	stw	r19,12(sp)
   2080c:	dc800215 	stw	r18,8(sp)
   20810:	dc400115 	stw	r17,4(sp)
   20814:	dc000015 	stw	r16,0(sp)
   20818:	18c1f804 	addi	r3,r3,2016
   2081c:	24000117 	ldw	r16,4(r4)
   20820:	20c00f15 	stw	r3,60(r4)
   20824:	2080bb04 	addi	r2,r4,748
   20828:	00c000c4 	movi	r3,3
   2082c:	20c0b915 	stw	r3,740(r4)
   20830:	2080ba15 	stw	r2,744(r4)
   20834:	2000b815 	stw	zero,736(r4)
   20838:	05c00204 	movi	r23,8
   2083c:	00800104 	movi	r2,4
   20840:	2025883a 	mov	r18,r4
   20844:	b80d883a 	mov	r6,r23
   20848:	81001704 	addi	r4,r16,92
   2084c:	000b883a 	mov	r5,zero
   20850:	80000015 	stw	zero,0(r16)
   20854:	80000115 	stw	zero,4(r16)
   20858:	80000215 	stw	zero,8(r16)
   2085c:	8080030d 	sth	r2,12(r16)
   20860:	80001915 	stw	zero,100(r16)
   20864:	8000038d 	sth	zero,14(r16)
   20868:	80000415 	stw	zero,16(r16)
   2086c:	80000515 	stw	zero,20(r16)
   20870:	80000615 	stw	zero,24(r16)
   20874:	00220e40 	call	220e4 <memset>
   20878:	058000b4 	movhi	r22,2
   2087c:	94400217 	ldw	r17,8(r18)
   20880:	054000b4 	movhi	r21,2
   20884:	050000b4 	movhi	r20,2
   20888:	04c000b4 	movhi	r19,2
   2088c:	b5897c04 	addi	r22,r22,9712
   20890:	ad499304 	addi	r21,r21,9804
   20894:	a509b204 	addi	r20,r20,9928
   20898:	9cc9c904 	addi	r19,r19,10020
   2089c:	85800815 	stw	r22,32(r16)
   208a0:	85400915 	stw	r21,36(r16)
   208a4:	85000a15 	stw	r20,40(r16)
   208a8:	84c00b15 	stw	r19,44(r16)
   208ac:	84000715 	stw	r16,28(r16)
   208b0:	00800284 	movi	r2,10
   208b4:	8880030d 	sth	r2,12(r17)
   208b8:	00800044 	movi	r2,1
   208bc:	b80d883a 	mov	r6,r23
   208c0:	89001704 	addi	r4,r17,92
   208c4:	000b883a 	mov	r5,zero
   208c8:	88000015 	stw	zero,0(r17)
   208cc:	88000115 	stw	zero,4(r17)
   208d0:	88000215 	stw	zero,8(r17)
   208d4:	88001915 	stw	zero,100(r17)
   208d8:	8880038d 	sth	r2,14(r17)
   208dc:	88000415 	stw	zero,16(r17)
   208e0:	88000515 	stw	zero,20(r17)
   208e4:	88000615 	stw	zero,24(r17)
   208e8:	00220e40 	call	220e4 <memset>
   208ec:	94000317 	ldw	r16,12(r18)
   208f0:	00800484 	movi	r2,18
   208f4:	8c400715 	stw	r17,28(r17)
   208f8:	8d800815 	stw	r22,32(r17)
   208fc:	8d400915 	stw	r21,36(r17)
   20900:	8d000a15 	stw	r20,40(r17)
   20904:	8cc00b15 	stw	r19,44(r17)
   20908:	8080030d 	sth	r2,12(r16)
   2090c:	00800084 	movi	r2,2
   20910:	80000015 	stw	zero,0(r16)
   20914:	80000115 	stw	zero,4(r16)
   20918:	80000215 	stw	zero,8(r16)
   2091c:	80001915 	stw	zero,100(r16)
   20920:	8080038d 	sth	r2,14(r16)
   20924:	80000415 	stw	zero,16(r16)
   20928:	80000515 	stw	zero,20(r16)
   2092c:	80000615 	stw	zero,24(r16)
   20930:	b80d883a 	mov	r6,r23
   20934:	000b883a 	mov	r5,zero
   20938:	81001704 	addi	r4,r16,92
   2093c:	00220e40 	call	220e4 <memset>
   20940:	00800044 	movi	r2,1
   20944:	84000715 	stw	r16,28(r16)
   20948:	85800815 	stw	r22,32(r16)
   2094c:	85400915 	stw	r21,36(r16)
   20950:	85000a15 	stw	r20,40(r16)
   20954:	84c00b15 	stw	r19,44(r16)
   20958:	90800e15 	stw	r2,56(r18)
   2095c:	dfc00817 	ldw	ra,32(sp)
   20960:	ddc00717 	ldw	r23,28(sp)
   20964:	dd800617 	ldw	r22,24(sp)
   20968:	dd400517 	ldw	r21,20(sp)
   2096c:	dd000417 	ldw	r20,16(sp)
   20970:	dcc00317 	ldw	r19,12(sp)
   20974:	dc800217 	ldw	r18,8(sp)
   20978:	dc400117 	ldw	r17,4(sp)
   2097c:	dc000017 	ldw	r16,0(sp)
   20980:	dec00904 	addi	sp,sp,36
   20984:	f800283a 	ret

00020988 <__fp_lock>:
   20988:	0005883a 	mov	r2,zero
   2098c:	f800283a 	ret

00020990 <__sfmoreglue>:
   20990:	defffc04 	addi	sp,sp,-16
   20994:	dc400115 	stw	r17,4(sp)
   20998:	2c7fffc4 	addi	r17,r5,-1
   2099c:	8c401a24 	muli	r17,r17,104
   209a0:	dc800215 	stw	r18,8(sp)
   209a4:	2825883a 	mov	r18,r5
   209a8:	89401d04 	addi	r5,r17,116
   209ac:	dc000015 	stw	r16,0(sp)
   209b0:	dfc00315 	stw	ra,12(sp)
   209b4:	00218d80 	call	218d8 <_malloc_r>
   209b8:	1021883a 	mov	r16,r2
   209bc:	10000726 	beq	r2,zero,209dc <__sfmoreglue+0x4c>
   209c0:	11000304 	addi	r4,r2,12
   209c4:	10000015 	stw	zero,0(r2)
   209c8:	14800115 	stw	r18,4(r2)
   209cc:	11000215 	stw	r4,8(r2)
   209d0:	89801a04 	addi	r6,r17,104
   209d4:	000b883a 	mov	r5,zero
   209d8:	00220e40 	call	220e4 <memset>
   209dc:	8005883a 	mov	r2,r16
   209e0:	dfc00317 	ldw	ra,12(sp)
   209e4:	dc800217 	ldw	r18,8(sp)
   209e8:	dc400117 	ldw	r17,4(sp)
   209ec:	dc000017 	ldw	r16,0(sp)
   209f0:	dec00404 	addi	sp,sp,16
   209f4:	f800283a 	ret

000209f8 <__sfp>:
   209f8:	defffb04 	addi	sp,sp,-20
   209fc:	dc000015 	stw	r16,0(sp)
   20a00:	040000f4 	movhi	r16,3
   20a04:	84079804 	addi	r16,r16,7776
   20a08:	dcc00315 	stw	r19,12(sp)
   20a0c:	2027883a 	mov	r19,r4
   20a10:	81000017 	ldw	r4,0(r16)
   20a14:	dfc00415 	stw	ra,16(sp)
   20a18:	dc800215 	stw	r18,8(sp)
   20a1c:	20800e17 	ldw	r2,56(r4)
   20a20:	dc400115 	stw	r17,4(sp)
   20a24:	1000021e 	bne	r2,zero,20a30 <__sfp+0x38>
   20a28:	00207ec0 	call	207ec <__sinit.part.1>
   20a2c:	81000017 	ldw	r4,0(r16)
   20a30:	2480b804 	addi	r18,r4,736
   20a34:	047fffc4 	movi	r17,-1
   20a38:	91000117 	ldw	r4,4(r18)
   20a3c:	94000217 	ldw	r16,8(r18)
   20a40:	213fffc4 	addi	r4,r4,-1
   20a44:	20000a16 	blt	r4,zero,20a70 <__sfp+0x78>
   20a48:	8080030f 	ldh	r2,12(r16)
   20a4c:	10000c26 	beq	r2,zero,20a80 <__sfp+0x88>
   20a50:	80c01d04 	addi	r3,r16,116
   20a54:	00000206 	br	20a60 <__sfp+0x68>
   20a58:	18bfe60f 	ldh	r2,-104(r3)
   20a5c:	10000826 	beq	r2,zero,20a80 <__sfp+0x88>
   20a60:	213fffc4 	addi	r4,r4,-1
   20a64:	1c3ffd04 	addi	r16,r3,-12
   20a68:	18c01a04 	addi	r3,r3,104
   20a6c:	247ffa1e 	bne	r4,r17,20a58 <__alt_data_end+0xfffe0a58>
   20a70:	90800017 	ldw	r2,0(r18)
   20a74:	10001d26 	beq	r2,zero,20aec <__sfp+0xf4>
   20a78:	1025883a 	mov	r18,r2
   20a7c:	003fee06 	br	20a38 <__alt_data_end+0xfffe0a38>
   20a80:	00bfffc4 	movi	r2,-1
   20a84:	8080038d 	sth	r2,14(r16)
   20a88:	00800044 	movi	r2,1
   20a8c:	8080030d 	sth	r2,12(r16)
   20a90:	80001915 	stw	zero,100(r16)
   20a94:	80000015 	stw	zero,0(r16)
   20a98:	80000215 	stw	zero,8(r16)
   20a9c:	80000115 	stw	zero,4(r16)
   20aa0:	80000415 	stw	zero,16(r16)
   20aa4:	80000515 	stw	zero,20(r16)
   20aa8:	80000615 	stw	zero,24(r16)
   20aac:	01800204 	movi	r6,8
   20ab0:	000b883a 	mov	r5,zero
   20ab4:	81001704 	addi	r4,r16,92
   20ab8:	00220e40 	call	220e4 <memset>
   20abc:	8005883a 	mov	r2,r16
   20ac0:	80000c15 	stw	zero,48(r16)
   20ac4:	80000d15 	stw	zero,52(r16)
   20ac8:	80001115 	stw	zero,68(r16)
   20acc:	80001215 	stw	zero,72(r16)
   20ad0:	dfc00417 	ldw	ra,16(sp)
   20ad4:	dcc00317 	ldw	r19,12(sp)
   20ad8:	dc800217 	ldw	r18,8(sp)
   20adc:	dc400117 	ldw	r17,4(sp)
   20ae0:	dc000017 	ldw	r16,0(sp)
   20ae4:	dec00504 	addi	sp,sp,20
   20ae8:	f800283a 	ret
   20aec:	01400104 	movi	r5,4
   20af0:	9809883a 	mov	r4,r19
   20af4:	00209900 	call	20990 <__sfmoreglue>
   20af8:	90800015 	stw	r2,0(r18)
   20afc:	103fde1e 	bne	r2,zero,20a78 <__alt_data_end+0xfffe0a78>
   20b00:	00800304 	movi	r2,12
   20b04:	98800015 	stw	r2,0(r19)
   20b08:	0005883a 	mov	r2,zero
   20b0c:	003ff006 	br	20ad0 <__alt_data_end+0xfffe0ad0>

00020b10 <_cleanup>:
   20b10:	008000f4 	movhi	r2,3
   20b14:	10879804 	addi	r2,r2,7776
   20b18:	11000017 	ldw	r4,0(r2)
   20b1c:	014000b4 	movhi	r5,2
   20b20:	29410b04 	addi	r5,r5,1068
   20b24:	00216581 	jmpi	21658 <_fwalk_reent>

00020b28 <__sinit>:
   20b28:	20800e17 	ldw	r2,56(r4)
   20b2c:	10000126 	beq	r2,zero,20b34 <__sinit+0xc>
   20b30:	f800283a 	ret
   20b34:	00207ec1 	jmpi	207ec <__sinit.part.1>

00020b38 <__sfp_lock_acquire>:
   20b38:	f800283a 	ret

00020b3c <__sfp_lock_release>:
   20b3c:	f800283a 	ret

00020b40 <__sinit_lock_acquire>:
   20b40:	f800283a 	ret

00020b44 <__sinit_lock_release>:
   20b44:	f800283a 	ret

00020b48 <__fp_lock_all>:
   20b48:	008000f4 	movhi	r2,3
   20b4c:	10879904 	addi	r2,r2,7780
   20b50:	11000017 	ldw	r4,0(r2)
   20b54:	014000b4 	movhi	r5,2
   20b58:	29426204 	addi	r5,r5,2440
   20b5c:	00215941 	jmpi	21594 <_fwalk>

00020b60 <__fp_unlock_all>:
   20b60:	008000f4 	movhi	r2,3
   20b64:	10879904 	addi	r2,r2,7780
   20b68:	11000017 	ldw	r4,0(r2)
   20b6c:	014000b4 	movhi	r5,2
   20b70:	2941f604 	addi	r5,r5,2008
   20b74:	00215941 	jmpi	21594 <_fwalk>

00020b78 <_fopen_r>:
   20b78:	defffa04 	addi	sp,sp,-24
   20b7c:	3005883a 	mov	r2,r6
   20b80:	dcc00415 	stw	r19,16(sp)
   20b84:	d80d883a 	mov	r6,sp
   20b88:	2827883a 	mov	r19,r5
   20b8c:	100b883a 	mov	r5,r2
   20b90:	dc800315 	stw	r18,12(sp)
   20b94:	dfc00515 	stw	ra,20(sp)
   20b98:	dc400215 	stw	r17,8(sp)
   20b9c:	dc000115 	stw	r16,4(sp)
   20ba0:	2025883a 	mov	r18,r4
   20ba4:	00265240 	call	26524 <__sflags>
   20ba8:	10002726 	beq	r2,zero,20c48 <_fopen_r+0xd0>
   20bac:	9009883a 	mov	r4,r18
   20bb0:	1023883a 	mov	r17,r2
   20bb4:	00209f80 	call	209f8 <__sfp>
   20bb8:	1021883a 	mov	r16,r2
   20bbc:	10002226 	beq	r2,zero,20c48 <_fopen_r+0xd0>
   20bc0:	d9800017 	ldw	r6,0(sp)
   20bc4:	01c06d84 	movi	r7,438
   20bc8:	980b883a 	mov	r5,r19
   20bcc:	9009883a 	mov	r4,r18
   20bd0:	002220c0 	call	2220c <_open_r>
   20bd4:	10001916 	blt	r2,zero,20c3c <_fopen_r+0xc4>
   20bd8:	8080038d 	sth	r2,14(r16)
   20bdc:	008000b4 	movhi	r2,2
   20be0:	10897c04 	addi	r2,r2,9712
   20be4:	80800815 	stw	r2,32(r16)
   20be8:	008000b4 	movhi	r2,2
   20bec:	10899304 	addi	r2,r2,9804
   20bf0:	80800915 	stw	r2,36(r16)
   20bf4:	008000b4 	movhi	r2,2
   20bf8:	1089b204 	addi	r2,r2,9928
   20bfc:	80800a15 	stw	r2,40(r16)
   20c00:	008000b4 	movhi	r2,2
   20c04:	1089c904 	addi	r2,r2,10020
   20c08:	8440030d 	sth	r17,12(r16)
   20c0c:	84000715 	stw	r16,28(r16)
   20c10:	80800b15 	stw	r2,44(r16)
   20c14:	8c40400c 	andi	r17,r17,256
   20c18:	88000d1e 	bne	r17,zero,20c50 <_fopen_r+0xd8>
   20c1c:	8005883a 	mov	r2,r16
   20c20:	dfc00517 	ldw	ra,20(sp)
   20c24:	dcc00417 	ldw	r19,16(sp)
   20c28:	dc800317 	ldw	r18,12(sp)
   20c2c:	dc400217 	ldw	r17,8(sp)
   20c30:	dc000117 	ldw	r16,4(sp)
   20c34:	dec00604 	addi	sp,sp,24
   20c38:	f800283a 	ret
   20c3c:	0020b380 	call	20b38 <__sfp_lock_acquire>
   20c40:	8000030d 	sth	zero,12(r16)
   20c44:	0020b3c0 	call	20b3c <__sfp_lock_release>
   20c48:	0005883a 	mov	r2,zero
   20c4c:	003ff406 	br	20c20 <__alt_data_end+0xfffe0c20>
   20c50:	01c00084 	movi	r7,2
   20c54:	000d883a 	mov	r6,zero
   20c58:	800b883a 	mov	r5,r16
   20c5c:	9009883a 	mov	r4,r18
   20c60:	00210b80 	call	210b8 <_fseek_r>
   20c64:	8005883a 	mov	r2,r16
   20c68:	003fed06 	br	20c20 <__alt_data_end+0xfffe0c20>

00020c6c <fopen>:
   20c6c:	008000f4 	movhi	r2,3
   20c70:	10879904 	addi	r2,r2,7780
   20c74:	280d883a 	mov	r6,r5
   20c78:	200b883a 	mov	r5,r4
   20c7c:	11000017 	ldw	r4,0(r2)
   20c80:	0020b781 	jmpi	20b78 <_fopen_r>

00020c84 <_malloc_trim_r>:
   20c84:	defffb04 	addi	sp,sp,-20
   20c88:	dcc00315 	stw	r19,12(sp)
   20c8c:	04c000f4 	movhi	r19,3
   20c90:	dc800215 	stw	r18,8(sp)
   20c94:	dc400115 	stw	r17,4(sp)
   20c98:	dc000015 	stw	r16,0(sp)
   20c9c:	dfc00415 	stw	ra,16(sp)
   20ca0:	2821883a 	mov	r16,r5
   20ca4:	9cc1eb04 	addi	r19,r19,1964
   20ca8:	2025883a 	mov	r18,r4
   20cac:	002db500 	call	2db50 <__malloc_lock>
   20cb0:	98800217 	ldw	r2,8(r19)
   20cb4:	14400117 	ldw	r17,4(r2)
   20cb8:	00bfff04 	movi	r2,-4
   20cbc:	88a2703a 	and	r17,r17,r2
   20cc0:	8c21c83a 	sub	r16,r17,r16
   20cc4:	8403fbc4 	addi	r16,r16,4079
   20cc8:	8020d33a 	srli	r16,r16,12
   20ccc:	0083ffc4 	movi	r2,4095
   20cd0:	843fffc4 	addi	r16,r16,-1
   20cd4:	8020933a 	slli	r16,r16,12
   20cd8:	1400060e 	bge	r2,r16,20cf4 <_malloc_trim_r+0x70>
   20cdc:	000b883a 	mov	r5,zero
   20ce0:	9009883a 	mov	r4,r18
   20ce4:	002259c0 	call	2259c <_sbrk_r>
   20ce8:	98c00217 	ldw	r3,8(r19)
   20cec:	1c47883a 	add	r3,r3,r17
   20cf0:	10c00a26 	beq	r2,r3,20d1c <_malloc_trim_r+0x98>
   20cf4:	9009883a 	mov	r4,r18
   20cf8:	002db740 	call	2db74 <__malloc_unlock>
   20cfc:	0005883a 	mov	r2,zero
   20d00:	dfc00417 	ldw	ra,16(sp)
   20d04:	dcc00317 	ldw	r19,12(sp)
   20d08:	dc800217 	ldw	r18,8(sp)
   20d0c:	dc400117 	ldw	r17,4(sp)
   20d10:	dc000017 	ldw	r16,0(sp)
   20d14:	dec00504 	addi	sp,sp,20
   20d18:	f800283a 	ret
   20d1c:	040bc83a 	sub	r5,zero,r16
   20d20:	9009883a 	mov	r4,r18
   20d24:	002259c0 	call	2259c <_sbrk_r>
   20d28:	00ffffc4 	movi	r3,-1
   20d2c:	10c00d26 	beq	r2,r3,20d64 <_malloc_trim_r+0xe0>
   20d30:	00c000f4 	movhi	r3,3
   20d34:	18ce8304 	addi	r3,r3,14860
   20d38:	18800017 	ldw	r2,0(r3)
   20d3c:	99000217 	ldw	r4,8(r19)
   20d40:	8c23c83a 	sub	r17,r17,r16
   20d44:	8c400054 	ori	r17,r17,1
   20d48:	1421c83a 	sub	r16,r2,r16
   20d4c:	24400115 	stw	r17,4(r4)
   20d50:	9009883a 	mov	r4,r18
   20d54:	1c000015 	stw	r16,0(r3)
   20d58:	002db740 	call	2db74 <__malloc_unlock>
   20d5c:	00800044 	movi	r2,1
   20d60:	003fe706 	br	20d00 <__alt_data_end+0xfffe0d00>
   20d64:	000b883a 	mov	r5,zero
   20d68:	9009883a 	mov	r4,r18
   20d6c:	002259c0 	call	2259c <_sbrk_r>
   20d70:	99000217 	ldw	r4,8(r19)
   20d74:	014003c4 	movi	r5,15
   20d78:	1107c83a 	sub	r3,r2,r4
   20d7c:	28ffdd0e 	bge	r5,r3,20cf4 <__alt_data_end+0xfffe0cf4>
   20d80:	014000f4 	movhi	r5,3
   20d84:	29479a04 	addi	r5,r5,7784
   20d88:	29400017 	ldw	r5,0(r5)
   20d8c:	18c00054 	ori	r3,r3,1
   20d90:	20c00115 	stw	r3,4(r4)
   20d94:	00c000f4 	movhi	r3,3
   20d98:	1145c83a 	sub	r2,r2,r5
   20d9c:	18ce8304 	addi	r3,r3,14860
   20da0:	18800015 	stw	r2,0(r3)
   20da4:	003fd306 	br	20cf4 <__alt_data_end+0xfffe0cf4>

00020da8 <_free_r>:
   20da8:	28004126 	beq	r5,zero,20eb0 <_free_r+0x108>
   20dac:	defffd04 	addi	sp,sp,-12
   20db0:	dc400115 	stw	r17,4(sp)
   20db4:	dc000015 	stw	r16,0(sp)
   20db8:	2023883a 	mov	r17,r4
   20dbc:	2821883a 	mov	r16,r5
   20dc0:	dfc00215 	stw	ra,8(sp)
   20dc4:	002db500 	call	2db50 <__malloc_lock>
   20dc8:	81ffff17 	ldw	r7,-4(r16)
   20dcc:	00bfff84 	movi	r2,-2
   20dd0:	010000f4 	movhi	r4,3
   20dd4:	81bffe04 	addi	r6,r16,-8
   20dd8:	3884703a 	and	r2,r7,r2
   20ddc:	2101eb04 	addi	r4,r4,1964
   20de0:	308b883a 	add	r5,r6,r2
   20de4:	2a400117 	ldw	r9,4(r5)
   20de8:	22000217 	ldw	r8,8(r4)
   20dec:	00ffff04 	movi	r3,-4
   20df0:	48c6703a 	and	r3,r9,r3
   20df4:	2a005726 	beq	r5,r8,20f54 <_free_r+0x1ac>
   20df8:	28c00115 	stw	r3,4(r5)
   20dfc:	39c0004c 	andi	r7,r7,1
   20e00:	3800091e 	bne	r7,zero,20e28 <_free_r+0x80>
   20e04:	823ffe17 	ldw	r8,-8(r16)
   20e08:	22400204 	addi	r9,r4,8
   20e0c:	320dc83a 	sub	r6,r6,r8
   20e10:	31c00217 	ldw	r7,8(r6)
   20e14:	1205883a 	add	r2,r2,r8
   20e18:	3a406526 	beq	r7,r9,20fb0 <_free_r+0x208>
   20e1c:	32000317 	ldw	r8,12(r6)
   20e20:	3a000315 	stw	r8,12(r7)
   20e24:	41c00215 	stw	r7,8(r8)
   20e28:	28cf883a 	add	r7,r5,r3
   20e2c:	39c00117 	ldw	r7,4(r7)
   20e30:	39c0004c 	andi	r7,r7,1
   20e34:	38003a26 	beq	r7,zero,20f20 <_free_r+0x178>
   20e38:	10c00054 	ori	r3,r2,1
   20e3c:	30c00115 	stw	r3,4(r6)
   20e40:	3087883a 	add	r3,r6,r2
   20e44:	18800015 	stw	r2,0(r3)
   20e48:	00c07fc4 	movi	r3,511
   20e4c:	18801936 	bltu	r3,r2,20eb4 <_free_r+0x10c>
   20e50:	1004d0fa 	srli	r2,r2,3
   20e54:	01c00044 	movi	r7,1
   20e58:	21400117 	ldw	r5,4(r4)
   20e5c:	10c00044 	addi	r3,r2,1
   20e60:	18c7883a 	add	r3,r3,r3
   20e64:	1005d0ba 	srai	r2,r2,2
   20e68:	18c7883a 	add	r3,r3,r3
   20e6c:	18c7883a 	add	r3,r3,r3
   20e70:	1907883a 	add	r3,r3,r4
   20e74:	3884983a 	sll	r2,r7,r2
   20e78:	19c00017 	ldw	r7,0(r3)
   20e7c:	1a3ffe04 	addi	r8,r3,-8
   20e80:	1144b03a 	or	r2,r2,r5
   20e84:	32000315 	stw	r8,12(r6)
   20e88:	31c00215 	stw	r7,8(r6)
   20e8c:	20800115 	stw	r2,4(r4)
   20e90:	19800015 	stw	r6,0(r3)
   20e94:	39800315 	stw	r6,12(r7)
   20e98:	8809883a 	mov	r4,r17
   20e9c:	dfc00217 	ldw	ra,8(sp)
   20ea0:	dc400117 	ldw	r17,4(sp)
   20ea4:	dc000017 	ldw	r16,0(sp)
   20ea8:	dec00304 	addi	sp,sp,12
   20eac:	002db741 	jmpi	2db74 <__malloc_unlock>
   20eb0:	f800283a 	ret
   20eb4:	100ad27a 	srli	r5,r2,9
   20eb8:	00c00104 	movi	r3,4
   20ebc:	19404a36 	bltu	r3,r5,20fe8 <_free_r+0x240>
   20ec0:	100ad1ba 	srli	r5,r2,6
   20ec4:	28c00e44 	addi	r3,r5,57
   20ec8:	18c7883a 	add	r3,r3,r3
   20ecc:	29400e04 	addi	r5,r5,56
   20ed0:	18c7883a 	add	r3,r3,r3
   20ed4:	18c7883a 	add	r3,r3,r3
   20ed8:	1909883a 	add	r4,r3,r4
   20edc:	20c00017 	ldw	r3,0(r4)
   20ee0:	01c000f4 	movhi	r7,3
   20ee4:	213ffe04 	addi	r4,r4,-8
   20ee8:	39c1eb04 	addi	r7,r7,1964
   20eec:	20c04426 	beq	r4,r3,21000 <_free_r+0x258>
   20ef0:	01ffff04 	movi	r7,-4
   20ef4:	19400117 	ldw	r5,4(r3)
   20ef8:	29ca703a 	and	r5,r5,r7
   20efc:	1140022e 	bgeu	r2,r5,20f08 <_free_r+0x160>
   20f00:	18c00217 	ldw	r3,8(r3)
   20f04:	20fffb1e 	bne	r4,r3,20ef4 <__alt_data_end+0xfffe0ef4>
   20f08:	19000317 	ldw	r4,12(r3)
   20f0c:	31000315 	stw	r4,12(r6)
   20f10:	30c00215 	stw	r3,8(r6)
   20f14:	21800215 	stw	r6,8(r4)
   20f18:	19800315 	stw	r6,12(r3)
   20f1c:	003fde06 	br	20e98 <__alt_data_end+0xfffe0e98>
   20f20:	29c00217 	ldw	r7,8(r5)
   20f24:	10c5883a 	add	r2,r2,r3
   20f28:	00c000f4 	movhi	r3,3
   20f2c:	18c1ed04 	addi	r3,r3,1972
   20f30:	38c03b26 	beq	r7,r3,21020 <_free_r+0x278>
   20f34:	2a000317 	ldw	r8,12(r5)
   20f38:	11400054 	ori	r5,r2,1
   20f3c:	3087883a 	add	r3,r6,r2
   20f40:	3a000315 	stw	r8,12(r7)
   20f44:	41c00215 	stw	r7,8(r8)
   20f48:	31400115 	stw	r5,4(r6)
   20f4c:	18800015 	stw	r2,0(r3)
   20f50:	003fbd06 	br	20e48 <__alt_data_end+0xfffe0e48>
   20f54:	39c0004c 	andi	r7,r7,1
   20f58:	10c5883a 	add	r2,r2,r3
   20f5c:	3800071e 	bne	r7,zero,20f7c <_free_r+0x1d4>
   20f60:	81fffe17 	ldw	r7,-8(r16)
   20f64:	31cdc83a 	sub	r6,r6,r7
   20f68:	30c00317 	ldw	r3,12(r6)
   20f6c:	31400217 	ldw	r5,8(r6)
   20f70:	11c5883a 	add	r2,r2,r7
   20f74:	28c00315 	stw	r3,12(r5)
   20f78:	19400215 	stw	r5,8(r3)
   20f7c:	10c00054 	ori	r3,r2,1
   20f80:	30c00115 	stw	r3,4(r6)
   20f84:	00c000f4 	movhi	r3,3
   20f88:	18c79b04 	addi	r3,r3,7788
   20f8c:	18c00017 	ldw	r3,0(r3)
   20f90:	21800215 	stw	r6,8(r4)
   20f94:	10ffc036 	bltu	r2,r3,20e98 <__alt_data_end+0xfffe0e98>
   20f98:	008000f4 	movhi	r2,3
   20f9c:	108e7604 	addi	r2,r2,14808
   20fa0:	11400017 	ldw	r5,0(r2)
   20fa4:	8809883a 	mov	r4,r17
   20fa8:	0020c840 	call	20c84 <_malloc_trim_r>
   20fac:	003fba06 	br	20e98 <__alt_data_end+0xfffe0e98>
   20fb0:	28c9883a 	add	r4,r5,r3
   20fb4:	21000117 	ldw	r4,4(r4)
   20fb8:	2100004c 	andi	r4,r4,1
   20fbc:	2000391e 	bne	r4,zero,210a4 <_free_r+0x2fc>
   20fc0:	29c00217 	ldw	r7,8(r5)
   20fc4:	29000317 	ldw	r4,12(r5)
   20fc8:	1885883a 	add	r2,r3,r2
   20fcc:	10c00054 	ori	r3,r2,1
   20fd0:	39000315 	stw	r4,12(r7)
   20fd4:	21c00215 	stw	r7,8(r4)
   20fd8:	30c00115 	stw	r3,4(r6)
   20fdc:	308d883a 	add	r6,r6,r2
   20fe0:	30800015 	stw	r2,0(r6)
   20fe4:	003fac06 	br	20e98 <__alt_data_end+0xfffe0e98>
   20fe8:	00c00504 	movi	r3,20
   20fec:	19401536 	bltu	r3,r5,21044 <_free_r+0x29c>
   20ff0:	28c01704 	addi	r3,r5,92
   20ff4:	18c7883a 	add	r3,r3,r3
   20ff8:	294016c4 	addi	r5,r5,91
   20ffc:	003fb406 	br	20ed0 <__alt_data_end+0xfffe0ed0>
   21000:	280bd0ba 	srai	r5,r5,2
   21004:	00c00044 	movi	r3,1
   21008:	38800117 	ldw	r2,4(r7)
   2100c:	194a983a 	sll	r5,r3,r5
   21010:	2007883a 	mov	r3,r4
   21014:	2884b03a 	or	r2,r5,r2
   21018:	38800115 	stw	r2,4(r7)
   2101c:	003fbb06 	br	20f0c <__alt_data_end+0xfffe0f0c>
   21020:	21800515 	stw	r6,20(r4)
   21024:	21800415 	stw	r6,16(r4)
   21028:	10c00054 	ori	r3,r2,1
   2102c:	31c00315 	stw	r7,12(r6)
   21030:	31c00215 	stw	r7,8(r6)
   21034:	30c00115 	stw	r3,4(r6)
   21038:	308d883a 	add	r6,r6,r2
   2103c:	30800015 	stw	r2,0(r6)
   21040:	003f9506 	br	20e98 <__alt_data_end+0xfffe0e98>
   21044:	00c01504 	movi	r3,84
   21048:	19400536 	bltu	r3,r5,21060 <_free_r+0x2b8>
   2104c:	100ad33a 	srli	r5,r2,12
   21050:	28c01bc4 	addi	r3,r5,111
   21054:	18c7883a 	add	r3,r3,r3
   21058:	29401b84 	addi	r5,r5,110
   2105c:	003f9c06 	br	20ed0 <__alt_data_end+0xfffe0ed0>
   21060:	00c05504 	movi	r3,340
   21064:	19400536 	bltu	r3,r5,2107c <_free_r+0x2d4>
   21068:	100ad3fa 	srli	r5,r2,15
   2106c:	28c01e04 	addi	r3,r5,120
   21070:	18c7883a 	add	r3,r3,r3
   21074:	29401dc4 	addi	r5,r5,119
   21078:	003f9506 	br	20ed0 <__alt_data_end+0xfffe0ed0>
   2107c:	00c15504 	movi	r3,1364
   21080:	19400536 	bltu	r3,r5,21098 <_free_r+0x2f0>
   21084:	100ad4ba 	srli	r5,r2,18
   21088:	28c01f44 	addi	r3,r5,125
   2108c:	18c7883a 	add	r3,r3,r3
   21090:	29401f04 	addi	r5,r5,124
   21094:	003f8e06 	br	20ed0 <__alt_data_end+0xfffe0ed0>
   21098:	00c03f84 	movi	r3,254
   2109c:	01401f84 	movi	r5,126
   210a0:	003f8b06 	br	20ed0 <__alt_data_end+0xfffe0ed0>
   210a4:	10c00054 	ori	r3,r2,1
   210a8:	30c00115 	stw	r3,4(r6)
   210ac:	308d883a 	add	r6,r6,r2
   210b0:	30800015 	stw	r2,0(r6)
   210b4:	003f7806 	br	20e98 <__alt_data_end+0xfffe0e98>

000210b8 <_fseek_r>:
   210b8:	00210d81 	jmpi	210d8 <_fseeko_r>

000210bc <fseek>:
   210bc:	008000f4 	movhi	r2,3
   210c0:	10879904 	addi	r2,r2,7780
   210c4:	300f883a 	mov	r7,r6
   210c8:	280d883a 	mov	r6,r5
   210cc:	200b883a 	mov	r5,r4
   210d0:	11000017 	ldw	r4,0(r2)
   210d4:	00210d81 	jmpi	210d8 <_fseeko_r>

000210d8 <_fseeko_r>:
   210d8:	deffe804 	addi	sp,sp,-96
   210dc:	dd401415 	stw	r21,80(sp)
   210e0:	dc801115 	stw	r18,68(sp)
   210e4:	dc401015 	stw	r17,64(sp)
   210e8:	dc000f15 	stw	r16,60(sp)
   210ec:	dfc01715 	stw	ra,92(sp)
   210f0:	ddc01615 	stw	r23,88(sp)
   210f4:	dd801515 	stw	r22,84(sp)
   210f8:	dd001315 	stw	r20,76(sp)
   210fc:	dcc01215 	stw	r19,72(sp)
   21100:	2023883a 	mov	r17,r4
   21104:	2821883a 	mov	r16,r5
   21108:	302b883a 	mov	r21,r6
   2110c:	3825883a 	mov	r18,r7
   21110:	20000226 	beq	r4,zero,2111c <_fseeko_r+0x44>
   21114:	20800e17 	ldw	r2,56(r4)
   21118:	10005a26 	beq	r2,zero,21284 <_fseeko_r+0x1ac>
   2111c:	8080030b 	ldhu	r2,12(r16)
   21120:	00c04204 	movi	r3,264
   21124:	1080420c 	andi	r2,r2,264
   21128:	10c05b26 	beq	r2,r3,21298 <_fseeko_r+0x1c0>
   2112c:	85000a17 	ldw	r20,40(r16)
   21130:	a000f626 	beq	r20,zero,2150c <_fseeko_r+0x434>
   21134:	00800044 	movi	r2,1
   21138:	90803e26 	beq	r18,r2,21234 <_fseeko_r+0x15c>
   2113c:	00800084 	movi	r2,2
   21140:	90801026 	beq	r18,r2,21184 <_fseeko_r+0xac>
   21144:	90000f26 	beq	r18,zero,21184 <_fseeko_r+0xac>
   21148:	00800584 	movi	r2,22
   2114c:	88800015 	stw	r2,0(r17)
   21150:	04ffffc4 	movi	r19,-1
   21154:	9805883a 	mov	r2,r19
   21158:	dfc01717 	ldw	ra,92(sp)
   2115c:	ddc01617 	ldw	r23,88(sp)
   21160:	dd801517 	ldw	r22,84(sp)
   21164:	dd401417 	ldw	r21,80(sp)
   21168:	dd001317 	ldw	r20,76(sp)
   2116c:	dcc01217 	ldw	r19,72(sp)
   21170:	dc801117 	ldw	r18,68(sp)
   21174:	dc401017 	ldw	r17,64(sp)
   21178:	dc000f17 	ldw	r16,60(sp)
   2117c:	dec01804 	addi	sp,sp,96
   21180:	f800283a 	ret
   21184:	80800417 	ldw	r2,16(r16)
   21188:	002f883a 	mov	r23,zero
   2118c:	0027883a 	mov	r19,zero
   21190:	1000cb26 	beq	r2,zero,214c0 <_fseeko_r+0x3e8>
   21194:	8080030b 	ldhu	r2,12(r16)
   21198:	10c2068c 	andi	r3,r2,2074
   2119c:	1800071e 	bne	r3,zero,211bc <_fseeko_r+0xe4>
   211a0:	10c1000c 	andi	r3,r2,1024
   211a4:	1800451e 	bne	r3,zero,212bc <_fseeko_r+0x1e4>
   211a8:	00c000b4 	movhi	r3,2
   211ac:	18c9b204 	addi	r3,r3,9928
   211b0:	a0c0b726 	beq	r20,r3,21490 <_fseeko_r+0x3b8>
   211b4:	10820014 	ori	r2,r2,2048
   211b8:	8080030d 	sth	r2,12(r16)
   211bc:	800b883a 	mov	r5,r16
   211c0:	8809883a 	mov	r4,r17
   211c4:	002074c0 	call	2074c <_fflush_r>
   211c8:	1027883a 	mov	r19,r2
   211cc:	103fe01e 	bne	r2,zero,21150 <__alt_data_end+0xfffe1150>
   211d0:	81400717 	ldw	r5,28(r16)
   211d4:	900f883a 	mov	r7,r18
   211d8:	a80d883a 	mov	r6,r21
   211dc:	8809883a 	mov	r4,r17
   211e0:	a03ee83a 	callr	r20
   211e4:	00ffffc4 	movi	r3,-1
   211e8:	10ffd926 	beq	r2,r3,21150 <__alt_data_end+0xfffe1150>
   211ec:	81400c17 	ldw	r5,48(r16)
   211f0:	28000526 	beq	r5,zero,21208 <_fseeko_r+0x130>
   211f4:	80801004 	addi	r2,r16,64
   211f8:	28800226 	beq	r5,r2,21204 <_fseeko_r+0x12c>
   211fc:	8809883a 	mov	r4,r17
   21200:	0020da80 	call	20da8 <_free_r>
   21204:	80000c15 	stw	zero,48(r16)
   21208:	8080030b 	ldhu	r2,12(r16)
   2120c:	80c00417 	ldw	r3,16(r16)
   21210:	80000115 	stw	zero,4(r16)
   21214:	10bdf7cc 	andi	r2,r2,63455
   21218:	80c00015 	stw	r3,0(r16)
   2121c:	8080030d 	sth	r2,12(r16)
   21220:	01800204 	movi	r6,8
   21224:	000b883a 	mov	r5,zero
   21228:	81001704 	addi	r4,r16,92
   2122c:	00220e40 	call	220e4 <memset>
   21230:	003fc806 	br	21154 <__alt_data_end+0xfffe1154>
   21234:	800b883a 	mov	r5,r16
   21238:	8809883a 	mov	r4,r17
   2123c:	002074c0 	call	2074c <_fflush_r>
   21240:	8080030b 	ldhu	r2,12(r16)
   21244:	10c4000c 	andi	r3,r2,4096
   21248:	18008726 	beq	r3,zero,21468 <_fseeko_r+0x390>
   2124c:	84c01417 	ldw	r19,80(r16)
   21250:	10c0010c 	andi	r3,r2,4
   21254:	1800431e 	bne	r3,zero,21364 <_fseeko_r+0x28c>
   21258:	1080020c 	andi	r2,r2,8
   2125c:	10008026 	beq	r2,zero,21460 <_fseeko_r+0x388>
   21260:	80c00017 	ldw	r3,0(r16)
   21264:	80800417 	ldw	r2,16(r16)
   21268:	18000226 	beq	r3,zero,21274 <_fseeko_r+0x19c>
   2126c:	1887c83a 	sub	r3,r3,r2
   21270:	98e7883a 	add	r19,r19,r3
   21274:	aceb883a 	add	r21,r21,r19
   21278:	05c00044 	movi	r23,1
   2127c:	0025883a 	mov	r18,zero
   21280:	003fc306 	br	21190 <__alt_data_end+0xfffe1190>
   21284:	0020b280 	call	20b28 <__sinit>
   21288:	8080030b 	ldhu	r2,12(r16)
   2128c:	00c04204 	movi	r3,264
   21290:	1080420c 	andi	r2,r2,264
   21294:	10ffa51e 	bne	r2,r3,2112c <__alt_data_end+0xfffe112c>
   21298:	800b883a 	mov	r5,r16
   2129c:	8809883a 	mov	r4,r17
   212a0:	002074c0 	call	2074c <_fflush_r>
   212a4:	003fa106 	br	2112c <__alt_data_end+0xfffe112c>
   212a8:	8080030b 	ldhu	r2,12(r16)
   212ac:	00c10004 	movi	r3,1024
   212b0:	80c01315 	stw	r3,76(r16)
   212b4:	10c4b03a 	or	r2,r2,r3
   212b8:	8080030d 	sth	r2,12(r16)
   212bc:	9000311e 	bne	r18,zero,21384 <_fseeko_r+0x2ac>
   212c0:	a82d883a 	mov	r22,r21
   212c4:	b800371e 	bne	r23,zero,213a4 <_fseeko_r+0x2cc>
   212c8:	8080030b 	ldhu	r2,12(r16)
   212cc:	1084000c 	andi	r2,r2,4096
   212d0:	10007f26 	beq	r2,zero,214d0 <_fseeko_r+0x3f8>
   212d4:	80801417 	ldw	r2,80(r16)
   212d8:	81800117 	ldw	r6,4(r16)
   212dc:	81400c17 	ldw	r5,48(r16)
   212e0:	11a7c83a 	sub	r19,r2,r6
   212e4:	28008226 	beq	r5,zero,214f0 <_fseeko_r+0x418>
   212e8:	81c00f17 	ldw	r7,60(r16)
   212ec:	99e7c83a 	sub	r19,r19,r7
   212f0:	81000e17 	ldw	r4,56(r16)
   212f4:	80800417 	ldw	r2,16(r16)
   212f8:	99a7883a 	add	r19,r19,r6
   212fc:	2087c83a 	sub	r3,r4,r2
   21300:	98e7c83a 	sub	r19,r19,r3
   21304:	38c7883a 	add	r3,r7,r3
   21308:	b4c02b16 	blt	r22,r19,213b8 <_fseeko_r+0x2e0>
   2130c:	98c9883a 	add	r4,r19,r3
   21310:	b100292e 	bgeu	r22,r4,213b8 <_fseeko_r+0x2e0>
   21314:	b4e7c83a 	sub	r19,r22,r19
   21318:	14c5883a 	add	r2,r2,r19
   2131c:	1ce7c83a 	sub	r19,r3,r19
   21320:	80800015 	stw	r2,0(r16)
   21324:	84c00115 	stw	r19,4(r16)
   21328:	28000526 	beq	r5,zero,21340 <_fseeko_r+0x268>
   2132c:	80801004 	addi	r2,r16,64
   21330:	28800226 	beq	r5,r2,2133c <_fseeko_r+0x264>
   21334:	8809883a 	mov	r4,r17
   21338:	0020da80 	call	20da8 <_free_r>
   2133c:	80000c15 	stw	zero,48(r16)
   21340:	8080030b 	ldhu	r2,12(r16)
   21344:	01800204 	movi	r6,8
   21348:	000b883a 	mov	r5,zero
   2134c:	10bff7cc 	andi	r2,r2,65503
   21350:	8080030d 	sth	r2,12(r16)
   21354:	81001704 	addi	r4,r16,92
   21358:	00220e40 	call	220e4 <memset>
   2135c:	0027883a 	mov	r19,zero
   21360:	003f7c06 	br	21154 <__alt_data_end+0xfffe1154>
   21364:	80c00117 	ldw	r3,4(r16)
   21368:	80800c17 	ldw	r2,48(r16)
   2136c:	98e7c83a 	sub	r19,r19,r3
   21370:	10003b26 	beq	r2,zero,21460 <_fseeko_r+0x388>
   21374:	80c00f17 	ldw	r3,60(r16)
   21378:	80800417 	ldw	r2,16(r16)
   2137c:	98e7c83a 	sub	r19,r19,r3
   21380:	003fbc06 	br	21274 <__alt_data_end+0xfffe1274>
   21384:	8140038f 	ldh	r5,14(r16)
   21388:	d80d883a 	mov	r6,sp
   2138c:	8809883a 	mov	r4,r17
   21390:	00215380 	call	21538 <_fstat_r>
   21394:	103f891e 	bne	r2,zero,211bc <__alt_data_end+0xfffe11bc>
   21398:	dd800417 	ldw	r22,16(sp)
   2139c:	adad883a 	add	r22,r21,r22
   213a0:	b83fc926 	beq	r23,zero,212c8 <__alt_data_end+0xfffe12c8>
   213a4:	81400c17 	ldw	r5,48(r16)
   213a8:	81800117 	ldw	r6,4(r16)
   213ac:	28005026 	beq	r5,zero,214f0 <_fseeko_r+0x418>
   213b0:	81c00f17 	ldw	r7,60(r16)
   213b4:	003fce06 	br	212f0 <__alt_data_end+0xfffe12f0>
   213b8:	84c01317 	ldw	r19,76(r16)
   213bc:	81400717 	ldw	r5,28(r16)
   213c0:	000f883a 	mov	r7,zero
   213c4:	04e7c83a 	sub	r19,zero,r19
   213c8:	9da6703a 	and	r19,r19,r22
   213cc:	980d883a 	mov	r6,r19
   213d0:	8809883a 	mov	r4,r17
   213d4:	a03ee83a 	callr	r20
   213d8:	00ffffc4 	movi	r3,-1
   213dc:	10ff7726 	beq	r2,r3,211bc <__alt_data_end+0xfffe11bc>
   213e0:	80800417 	ldw	r2,16(r16)
   213e4:	81400c17 	ldw	r5,48(r16)
   213e8:	80000115 	stw	zero,4(r16)
   213ec:	80800015 	stw	r2,0(r16)
   213f0:	28000526 	beq	r5,zero,21408 <_fseeko_r+0x330>
   213f4:	80801004 	addi	r2,r16,64
   213f8:	28800226 	beq	r5,r2,21404 <_fseeko_r+0x32c>
   213fc:	8809883a 	mov	r4,r17
   21400:	0020da80 	call	20da8 <_free_r>
   21404:	80000c15 	stw	zero,48(r16)
   21408:	8080030b 	ldhu	r2,12(r16)
   2140c:	b4e7c83a 	sub	r19,r22,r19
   21410:	10bff7cc 	andi	r2,r2,65503
   21414:	8080030d 	sth	r2,12(r16)
   21418:	98000b26 	beq	r19,zero,21448 <_fseeko_r+0x370>
   2141c:	800b883a 	mov	r5,r16
   21420:	8809883a 	mov	r4,r17
   21424:	00223c80 	call	223c8 <__srefill_r>
   21428:	103f641e 	bne	r2,zero,211bc <__alt_data_end+0xfffe11bc>
   2142c:	80800117 	ldw	r2,4(r16)
   21430:	14ff6236 	bltu	r2,r19,211bc <__alt_data_end+0xfffe11bc>
   21434:	80c00017 	ldw	r3,0(r16)
   21438:	14c5c83a 	sub	r2,r2,r19
   2143c:	80800115 	stw	r2,4(r16)
   21440:	1ce7883a 	add	r19,r3,r19
   21444:	84c00015 	stw	r19,0(r16)
   21448:	01800204 	movi	r6,8
   2144c:	000b883a 	mov	r5,zero
   21450:	81001704 	addi	r4,r16,92
   21454:	00220e40 	call	220e4 <memset>
   21458:	0027883a 	mov	r19,zero
   2145c:	003f3d06 	br	21154 <__alt_data_end+0xfffe1154>
   21460:	80800417 	ldw	r2,16(r16)
   21464:	003f8306 	br	21274 <__alt_data_end+0xfffe1274>
   21468:	81400717 	ldw	r5,28(r16)
   2146c:	900f883a 	mov	r7,r18
   21470:	000d883a 	mov	r6,zero
   21474:	8809883a 	mov	r4,r17
   21478:	a03ee83a 	callr	r20
   2147c:	1027883a 	mov	r19,r2
   21480:	00bfffc4 	movi	r2,-1
   21484:	98bf3226 	beq	r19,r2,21150 <__alt_data_end+0xfffe1150>
   21488:	8080030b 	ldhu	r2,12(r16)
   2148c:	003f7006 	br	21250 <__alt_data_end+0xfffe1250>
   21490:	8140038f 	ldh	r5,14(r16)
   21494:	283f4716 	blt	r5,zero,211b4 <__alt_data_end+0xfffe11b4>
   21498:	d80d883a 	mov	r6,sp
   2149c:	8809883a 	mov	r4,r17
   214a0:	00215380 	call	21538 <_fstat_r>
   214a4:	1000041e 	bne	r2,zero,214b8 <_fseeko_r+0x3e0>
   214a8:	d8800117 	ldw	r2,4(sp)
   214ac:	00e00014 	movui	r3,32768
   214b0:	10bc000c 	andi	r2,r2,61440
   214b4:	10ff7c26 	beq	r2,r3,212a8 <__alt_data_end+0xfffe12a8>
   214b8:	8080030b 	ldhu	r2,12(r16)
   214bc:	003f3d06 	br	211b4 <__alt_data_end+0xfffe11b4>
   214c0:	800b883a 	mov	r5,r16
   214c4:	8809883a 	mov	r4,r17
   214c8:	002171c0 	call	2171c <__smakebuf_r>
   214cc:	003f3106 	br	21194 <__alt_data_end+0xfffe1194>
   214d0:	81400717 	ldw	r5,28(r16)
   214d4:	01c00044 	movi	r7,1
   214d8:	000d883a 	mov	r6,zero
   214dc:	8809883a 	mov	r4,r17
   214e0:	a03ee83a 	callr	r20
   214e4:	00ffffc4 	movi	r3,-1
   214e8:	10ff7b1e 	bne	r2,r3,212d8 <__alt_data_end+0xfffe12d8>
   214ec:	003f3306 	br	211bc <__alt_data_end+0xfffe11bc>
   214f0:	80c00017 	ldw	r3,0(r16)
   214f4:	80800417 	ldw	r2,16(r16)
   214f8:	000b883a 	mov	r5,zero
   214fc:	1887c83a 	sub	r3,r3,r2
   21500:	98e7c83a 	sub	r19,r19,r3
   21504:	30c7883a 	add	r3,r6,r3
   21508:	003f7f06 	br	21308 <__alt_data_end+0xfffe1308>
   2150c:	00800744 	movi	r2,29
   21510:	88800015 	stw	r2,0(r17)
   21514:	04ffffc4 	movi	r19,-1
   21518:	003f0e06 	br	21154 <__alt_data_end+0xfffe1154>

0002151c <fseeko>:
   2151c:	008000f4 	movhi	r2,3
   21520:	10879904 	addi	r2,r2,7780
   21524:	300f883a 	mov	r7,r6
   21528:	280d883a 	mov	r6,r5
   2152c:	200b883a 	mov	r5,r4
   21530:	11000017 	ldw	r4,0(r2)
   21534:	00210d81 	jmpi	210d8 <_fseeko_r>

00021538 <_fstat_r>:
   21538:	defffd04 	addi	sp,sp,-12
   2153c:	2805883a 	mov	r2,r5
   21540:	dc000015 	stw	r16,0(sp)
   21544:	040000f4 	movhi	r16,3
   21548:	dc400115 	stw	r17,4(sp)
   2154c:	840e7304 	addi	r16,r16,14796
   21550:	2023883a 	mov	r17,r4
   21554:	300b883a 	mov	r5,r6
   21558:	1009883a 	mov	r4,r2
   2155c:	dfc00215 	stw	ra,8(sp)
   21560:	80000015 	stw	zero,0(r16)
   21564:	002d7480 	call	2d748 <fstat>
   21568:	00ffffc4 	movi	r3,-1
   2156c:	10c00526 	beq	r2,r3,21584 <_fstat_r+0x4c>
   21570:	dfc00217 	ldw	ra,8(sp)
   21574:	dc400117 	ldw	r17,4(sp)
   21578:	dc000017 	ldw	r16,0(sp)
   2157c:	dec00304 	addi	sp,sp,12
   21580:	f800283a 	ret
   21584:	80c00017 	ldw	r3,0(r16)
   21588:	183ff926 	beq	r3,zero,21570 <__alt_data_end+0xfffe1570>
   2158c:	88c00015 	stw	r3,0(r17)
   21590:	003ff706 	br	21570 <__alt_data_end+0xfffe1570>

00021594 <_fwalk>:
   21594:	defff704 	addi	sp,sp,-36
   21598:	dd000415 	stw	r20,16(sp)
   2159c:	dfc00815 	stw	ra,32(sp)
   215a0:	ddc00715 	stw	r23,28(sp)
   215a4:	dd800615 	stw	r22,24(sp)
   215a8:	dd400515 	stw	r21,20(sp)
   215ac:	dcc00315 	stw	r19,12(sp)
   215b0:	dc800215 	stw	r18,8(sp)
   215b4:	dc400115 	stw	r17,4(sp)
   215b8:	dc000015 	stw	r16,0(sp)
   215bc:	2500b804 	addi	r20,r4,736
   215c0:	a0002326 	beq	r20,zero,21650 <_fwalk+0xbc>
   215c4:	282b883a 	mov	r21,r5
   215c8:	002f883a 	mov	r23,zero
   215cc:	05800044 	movi	r22,1
   215d0:	04ffffc4 	movi	r19,-1
   215d4:	a4400117 	ldw	r17,4(r20)
   215d8:	a4800217 	ldw	r18,8(r20)
   215dc:	8c7fffc4 	addi	r17,r17,-1
   215e0:	88000d16 	blt	r17,zero,21618 <_fwalk+0x84>
   215e4:	94000304 	addi	r16,r18,12
   215e8:	94800384 	addi	r18,r18,14
   215ec:	8080000b 	ldhu	r2,0(r16)
   215f0:	8c7fffc4 	addi	r17,r17,-1
   215f4:	813ffd04 	addi	r4,r16,-12
   215f8:	b080042e 	bgeu	r22,r2,2160c <_fwalk+0x78>
   215fc:	9080000f 	ldh	r2,0(r18)
   21600:	14c00226 	beq	r2,r19,2160c <_fwalk+0x78>
   21604:	a83ee83a 	callr	r21
   21608:	b8aeb03a 	or	r23,r23,r2
   2160c:	84001a04 	addi	r16,r16,104
   21610:	94801a04 	addi	r18,r18,104
   21614:	8cfff51e 	bne	r17,r19,215ec <__alt_data_end+0xfffe15ec>
   21618:	a5000017 	ldw	r20,0(r20)
   2161c:	a03fed1e 	bne	r20,zero,215d4 <__alt_data_end+0xfffe15d4>
   21620:	b805883a 	mov	r2,r23
   21624:	dfc00817 	ldw	ra,32(sp)
   21628:	ddc00717 	ldw	r23,28(sp)
   2162c:	dd800617 	ldw	r22,24(sp)
   21630:	dd400517 	ldw	r21,20(sp)
   21634:	dd000417 	ldw	r20,16(sp)
   21638:	dcc00317 	ldw	r19,12(sp)
   2163c:	dc800217 	ldw	r18,8(sp)
   21640:	dc400117 	ldw	r17,4(sp)
   21644:	dc000017 	ldw	r16,0(sp)
   21648:	dec00904 	addi	sp,sp,36
   2164c:	f800283a 	ret
   21650:	002f883a 	mov	r23,zero
   21654:	003ff206 	br	21620 <__alt_data_end+0xfffe1620>

00021658 <_fwalk_reent>:
   21658:	defff704 	addi	sp,sp,-36
   2165c:	dd000415 	stw	r20,16(sp)
   21660:	dfc00815 	stw	ra,32(sp)
   21664:	ddc00715 	stw	r23,28(sp)
   21668:	dd800615 	stw	r22,24(sp)
   2166c:	dd400515 	stw	r21,20(sp)
   21670:	dcc00315 	stw	r19,12(sp)
   21674:	dc800215 	stw	r18,8(sp)
   21678:	dc400115 	stw	r17,4(sp)
   2167c:	dc000015 	stw	r16,0(sp)
   21680:	2500b804 	addi	r20,r4,736
   21684:	a0002326 	beq	r20,zero,21714 <_fwalk_reent+0xbc>
   21688:	282b883a 	mov	r21,r5
   2168c:	2027883a 	mov	r19,r4
   21690:	002f883a 	mov	r23,zero
   21694:	05800044 	movi	r22,1
   21698:	04bfffc4 	movi	r18,-1
   2169c:	a4400117 	ldw	r17,4(r20)
   216a0:	a4000217 	ldw	r16,8(r20)
   216a4:	8c7fffc4 	addi	r17,r17,-1
   216a8:	88000c16 	blt	r17,zero,216dc <_fwalk_reent+0x84>
   216ac:	84000304 	addi	r16,r16,12
   216b0:	8080000b 	ldhu	r2,0(r16)
   216b4:	8c7fffc4 	addi	r17,r17,-1
   216b8:	817ffd04 	addi	r5,r16,-12
   216bc:	b080052e 	bgeu	r22,r2,216d4 <_fwalk_reent+0x7c>
   216c0:	8080008f 	ldh	r2,2(r16)
   216c4:	9809883a 	mov	r4,r19
   216c8:	14800226 	beq	r2,r18,216d4 <_fwalk_reent+0x7c>
   216cc:	a83ee83a 	callr	r21
   216d0:	b8aeb03a 	or	r23,r23,r2
   216d4:	84001a04 	addi	r16,r16,104
   216d8:	8cbff51e 	bne	r17,r18,216b0 <__alt_data_end+0xfffe16b0>
   216dc:	a5000017 	ldw	r20,0(r20)
   216e0:	a03fee1e 	bne	r20,zero,2169c <__alt_data_end+0xfffe169c>
   216e4:	b805883a 	mov	r2,r23
   216e8:	dfc00817 	ldw	ra,32(sp)
   216ec:	ddc00717 	ldw	r23,28(sp)
   216f0:	dd800617 	ldw	r22,24(sp)
   216f4:	dd400517 	ldw	r21,20(sp)
   216f8:	dd000417 	ldw	r20,16(sp)
   216fc:	dcc00317 	ldw	r19,12(sp)
   21700:	dc800217 	ldw	r18,8(sp)
   21704:	dc400117 	ldw	r17,4(sp)
   21708:	dc000017 	ldw	r16,0(sp)
   2170c:	dec00904 	addi	sp,sp,36
   21710:	f800283a 	ret
   21714:	002f883a 	mov	r23,zero
   21718:	003ff206 	br	216e4 <__alt_data_end+0xfffe16e4>

0002171c <__smakebuf_r>:
   2171c:	2880030b 	ldhu	r2,12(r5)
   21720:	10c0008c 	andi	r3,r2,2
   21724:	1800411e 	bne	r3,zero,2182c <__smakebuf_r+0x110>
   21728:	deffec04 	addi	sp,sp,-80
   2172c:	dc000f15 	stw	r16,60(sp)
   21730:	2821883a 	mov	r16,r5
   21734:	2940038f 	ldh	r5,14(r5)
   21738:	dc401015 	stw	r17,64(sp)
   2173c:	dfc01315 	stw	ra,76(sp)
   21740:	dcc01215 	stw	r19,72(sp)
   21744:	dc801115 	stw	r18,68(sp)
   21748:	2023883a 	mov	r17,r4
   2174c:	28001c16 	blt	r5,zero,217c0 <__smakebuf_r+0xa4>
   21750:	d80d883a 	mov	r6,sp
   21754:	00215380 	call	21538 <_fstat_r>
   21758:	10001816 	blt	r2,zero,217bc <__smakebuf_r+0xa0>
   2175c:	d8800117 	ldw	r2,4(sp)
   21760:	00e00014 	movui	r3,32768
   21764:	10bc000c 	andi	r2,r2,61440
   21768:	14c80020 	cmpeqi	r19,r2,8192
   2176c:	10c03726 	beq	r2,r3,2184c <__smakebuf_r+0x130>
   21770:	80c0030b 	ldhu	r3,12(r16)
   21774:	18c20014 	ori	r3,r3,2048
   21778:	80c0030d 	sth	r3,12(r16)
   2177c:	00c80004 	movi	r3,8192
   21780:	10c0521e 	bne	r2,r3,218cc <__smakebuf_r+0x1b0>
   21784:	8140038f 	ldh	r5,14(r16)
   21788:	8809883a 	mov	r4,r17
   2178c:	0026a8c0 	call	26a8c <_isatty_r>
   21790:	10004c26 	beq	r2,zero,218c4 <__smakebuf_r+0x1a8>
   21794:	8080030b 	ldhu	r2,12(r16)
   21798:	80c010c4 	addi	r3,r16,67
   2179c:	80c00015 	stw	r3,0(r16)
   217a0:	10800054 	ori	r2,r2,1
   217a4:	8080030d 	sth	r2,12(r16)
   217a8:	00800044 	movi	r2,1
   217ac:	80c00415 	stw	r3,16(r16)
   217b0:	80800515 	stw	r2,20(r16)
   217b4:	04810004 	movi	r18,1024
   217b8:	00000706 	br	217d8 <__smakebuf_r+0xbc>
   217bc:	8080030b 	ldhu	r2,12(r16)
   217c0:	10c0200c 	andi	r3,r2,128
   217c4:	18001f1e 	bne	r3,zero,21844 <__smakebuf_r+0x128>
   217c8:	04810004 	movi	r18,1024
   217cc:	10820014 	ori	r2,r2,2048
   217d0:	8080030d 	sth	r2,12(r16)
   217d4:	0027883a 	mov	r19,zero
   217d8:	900b883a 	mov	r5,r18
   217dc:	8809883a 	mov	r4,r17
   217e0:	00218d80 	call	218d8 <_malloc_r>
   217e4:	10002c26 	beq	r2,zero,21898 <__smakebuf_r+0x17c>
   217e8:	80c0030b 	ldhu	r3,12(r16)
   217ec:	010000b4 	movhi	r4,2
   217f0:	2101f804 	addi	r4,r4,2016
   217f4:	89000f15 	stw	r4,60(r17)
   217f8:	18c02014 	ori	r3,r3,128
   217fc:	80c0030d 	sth	r3,12(r16)
   21800:	80800015 	stw	r2,0(r16)
   21804:	80800415 	stw	r2,16(r16)
   21808:	84800515 	stw	r18,20(r16)
   2180c:	98001a1e 	bne	r19,zero,21878 <__smakebuf_r+0x15c>
   21810:	dfc01317 	ldw	ra,76(sp)
   21814:	dcc01217 	ldw	r19,72(sp)
   21818:	dc801117 	ldw	r18,68(sp)
   2181c:	dc401017 	ldw	r17,64(sp)
   21820:	dc000f17 	ldw	r16,60(sp)
   21824:	dec01404 	addi	sp,sp,80
   21828:	f800283a 	ret
   2182c:	288010c4 	addi	r2,r5,67
   21830:	28800015 	stw	r2,0(r5)
   21834:	28800415 	stw	r2,16(r5)
   21838:	00800044 	movi	r2,1
   2183c:	28800515 	stw	r2,20(r5)
   21840:	f800283a 	ret
   21844:	04801004 	movi	r18,64
   21848:	003fe006 	br	217cc <__alt_data_end+0xfffe17cc>
   2184c:	81000a17 	ldw	r4,40(r16)
   21850:	00c000b4 	movhi	r3,2
   21854:	18c9b204 	addi	r3,r3,9928
   21858:	20ffc51e 	bne	r4,r3,21770 <__alt_data_end+0xfffe1770>
   2185c:	8080030b 	ldhu	r2,12(r16)
   21860:	04810004 	movi	r18,1024
   21864:	84801315 	stw	r18,76(r16)
   21868:	1484b03a 	or	r2,r2,r18
   2186c:	8080030d 	sth	r2,12(r16)
   21870:	0027883a 	mov	r19,zero
   21874:	003fd806 	br	217d8 <__alt_data_end+0xfffe17d8>
   21878:	8140038f 	ldh	r5,14(r16)
   2187c:	8809883a 	mov	r4,r17
   21880:	0026a8c0 	call	26a8c <_isatty_r>
   21884:	103fe226 	beq	r2,zero,21810 <__alt_data_end+0xfffe1810>
   21888:	8080030b 	ldhu	r2,12(r16)
   2188c:	10800054 	ori	r2,r2,1
   21890:	8080030d 	sth	r2,12(r16)
   21894:	003fde06 	br	21810 <__alt_data_end+0xfffe1810>
   21898:	8080030b 	ldhu	r2,12(r16)
   2189c:	10c0800c 	andi	r3,r2,512
   218a0:	183fdb1e 	bne	r3,zero,21810 <__alt_data_end+0xfffe1810>
   218a4:	10800094 	ori	r2,r2,2
   218a8:	80c010c4 	addi	r3,r16,67
   218ac:	8080030d 	sth	r2,12(r16)
   218b0:	00800044 	movi	r2,1
   218b4:	80c00015 	stw	r3,0(r16)
   218b8:	80c00415 	stw	r3,16(r16)
   218bc:	80800515 	stw	r2,20(r16)
   218c0:	003fd306 	br	21810 <__alt_data_end+0xfffe1810>
   218c4:	04810004 	movi	r18,1024
   218c8:	003fc306 	br	217d8 <__alt_data_end+0xfffe17d8>
   218cc:	0027883a 	mov	r19,zero
   218d0:	04810004 	movi	r18,1024
   218d4:	003fc006 	br	217d8 <__alt_data_end+0xfffe17d8>

000218d8 <_malloc_r>:
   218d8:	defff504 	addi	sp,sp,-44
   218dc:	dc800315 	stw	r18,12(sp)
   218e0:	dfc00a15 	stw	ra,40(sp)
   218e4:	df000915 	stw	fp,36(sp)
   218e8:	ddc00815 	stw	r23,32(sp)
   218ec:	dd800715 	stw	r22,28(sp)
   218f0:	dd400615 	stw	r21,24(sp)
   218f4:	dd000515 	stw	r20,20(sp)
   218f8:	dcc00415 	stw	r19,16(sp)
   218fc:	dc400215 	stw	r17,8(sp)
   21900:	dc000115 	stw	r16,4(sp)
   21904:	288002c4 	addi	r2,r5,11
   21908:	00c00584 	movi	r3,22
   2190c:	2025883a 	mov	r18,r4
   21910:	18807f2e 	bgeu	r3,r2,21b10 <_malloc_r+0x238>
   21914:	047ffe04 	movi	r17,-8
   21918:	1462703a 	and	r17,r2,r17
   2191c:	8800a316 	blt	r17,zero,21bac <_malloc_r+0x2d4>
   21920:	8940a236 	bltu	r17,r5,21bac <_malloc_r+0x2d4>
   21924:	002db500 	call	2db50 <__malloc_lock>
   21928:	00807dc4 	movi	r2,503
   2192c:	1441e92e 	bgeu	r2,r17,220d4 <_malloc_r+0x7fc>
   21930:	8804d27a 	srli	r2,r17,9
   21934:	1000a126 	beq	r2,zero,21bbc <_malloc_r+0x2e4>
   21938:	00c00104 	movi	r3,4
   2193c:	18811e36 	bltu	r3,r2,21db8 <_malloc_r+0x4e0>
   21940:	8804d1ba 	srli	r2,r17,6
   21944:	12000e44 	addi	r8,r2,57
   21948:	11c00e04 	addi	r7,r2,56
   2194c:	4209883a 	add	r4,r8,r8
   21950:	04c000f4 	movhi	r19,3
   21954:	2109883a 	add	r4,r4,r4
   21958:	9cc1eb04 	addi	r19,r19,1964
   2195c:	2109883a 	add	r4,r4,r4
   21960:	9909883a 	add	r4,r19,r4
   21964:	24000117 	ldw	r16,4(r4)
   21968:	213ffe04 	addi	r4,r4,-8
   2196c:	24009726 	beq	r4,r16,21bcc <_malloc_r+0x2f4>
   21970:	80800117 	ldw	r2,4(r16)
   21974:	01bfff04 	movi	r6,-4
   21978:	014003c4 	movi	r5,15
   2197c:	1184703a 	and	r2,r2,r6
   21980:	1447c83a 	sub	r3,r2,r17
   21984:	28c00716 	blt	r5,r3,219a4 <_malloc_r+0xcc>
   21988:	1800920e 	bge	r3,zero,21bd4 <_malloc_r+0x2fc>
   2198c:	84000317 	ldw	r16,12(r16)
   21990:	24008e26 	beq	r4,r16,21bcc <_malloc_r+0x2f4>
   21994:	80800117 	ldw	r2,4(r16)
   21998:	1184703a 	and	r2,r2,r6
   2199c:	1447c83a 	sub	r3,r2,r17
   219a0:	28fff90e 	bge	r5,r3,21988 <__alt_data_end+0xfffe1988>
   219a4:	3809883a 	mov	r4,r7
   219a8:	018000f4 	movhi	r6,3
   219ac:	9c000417 	ldw	r16,16(r19)
   219b0:	3181eb04 	addi	r6,r6,1964
   219b4:	32000204 	addi	r8,r6,8
   219b8:	82013426 	beq	r16,r8,21e8c <_malloc_r+0x5b4>
   219bc:	80c00117 	ldw	r3,4(r16)
   219c0:	00bfff04 	movi	r2,-4
   219c4:	188e703a 	and	r7,r3,r2
   219c8:	3c45c83a 	sub	r2,r7,r17
   219cc:	00c003c4 	movi	r3,15
   219d0:	18811f16 	blt	r3,r2,21e50 <_malloc_r+0x578>
   219d4:	32000515 	stw	r8,20(r6)
   219d8:	32000415 	stw	r8,16(r6)
   219dc:	10007f0e 	bge	r2,zero,21bdc <_malloc_r+0x304>
   219e0:	00807fc4 	movi	r2,511
   219e4:	11c0fd36 	bltu	r2,r7,21ddc <_malloc_r+0x504>
   219e8:	3806d0fa 	srli	r3,r7,3
   219ec:	01c00044 	movi	r7,1
   219f0:	30800117 	ldw	r2,4(r6)
   219f4:	19400044 	addi	r5,r3,1
   219f8:	294b883a 	add	r5,r5,r5
   219fc:	1807d0ba 	srai	r3,r3,2
   21a00:	294b883a 	add	r5,r5,r5
   21a04:	294b883a 	add	r5,r5,r5
   21a08:	298b883a 	add	r5,r5,r6
   21a0c:	38c6983a 	sll	r3,r7,r3
   21a10:	29c00017 	ldw	r7,0(r5)
   21a14:	2a7ffe04 	addi	r9,r5,-8
   21a18:	1886b03a 	or	r3,r3,r2
   21a1c:	82400315 	stw	r9,12(r16)
   21a20:	81c00215 	stw	r7,8(r16)
   21a24:	30c00115 	stw	r3,4(r6)
   21a28:	2c000015 	stw	r16,0(r5)
   21a2c:	3c000315 	stw	r16,12(r7)
   21a30:	2005d0ba 	srai	r2,r4,2
   21a34:	01400044 	movi	r5,1
   21a38:	288a983a 	sll	r5,r5,r2
   21a3c:	19406f36 	bltu	r3,r5,21bfc <_malloc_r+0x324>
   21a40:	28c4703a 	and	r2,r5,r3
   21a44:	10000a1e 	bne	r2,zero,21a70 <_malloc_r+0x198>
   21a48:	00bfff04 	movi	r2,-4
   21a4c:	294b883a 	add	r5,r5,r5
   21a50:	2088703a 	and	r4,r4,r2
   21a54:	28c4703a 	and	r2,r5,r3
   21a58:	21000104 	addi	r4,r4,4
   21a5c:	1000041e 	bne	r2,zero,21a70 <_malloc_r+0x198>
   21a60:	294b883a 	add	r5,r5,r5
   21a64:	28c4703a 	and	r2,r5,r3
   21a68:	21000104 	addi	r4,r4,4
   21a6c:	103ffc26 	beq	r2,zero,21a60 <__alt_data_end+0xfffe1a60>
   21a70:	02bfff04 	movi	r10,-4
   21a74:	024003c4 	movi	r9,15
   21a78:	21800044 	addi	r6,r4,1
   21a7c:	318d883a 	add	r6,r6,r6
   21a80:	318d883a 	add	r6,r6,r6
   21a84:	318d883a 	add	r6,r6,r6
   21a88:	998d883a 	add	r6,r19,r6
   21a8c:	333ffe04 	addi	r12,r6,-8
   21a90:	2017883a 	mov	r11,r4
   21a94:	31800104 	addi	r6,r6,4
   21a98:	34000017 	ldw	r16,0(r6)
   21a9c:	31fffd04 	addi	r7,r6,-12
   21aa0:	81c0041e 	bne	r16,r7,21ab4 <_malloc_r+0x1dc>
   21aa4:	0000fb06 	br	21e94 <_malloc_r+0x5bc>
   21aa8:	1801030e 	bge	r3,zero,21eb8 <_malloc_r+0x5e0>
   21aac:	84000317 	ldw	r16,12(r16)
   21ab0:	81c0f826 	beq	r16,r7,21e94 <_malloc_r+0x5bc>
   21ab4:	80800117 	ldw	r2,4(r16)
   21ab8:	1284703a 	and	r2,r2,r10
   21abc:	1447c83a 	sub	r3,r2,r17
   21ac0:	48fff90e 	bge	r9,r3,21aa8 <__alt_data_end+0xfffe1aa8>
   21ac4:	80800317 	ldw	r2,12(r16)
   21ac8:	81000217 	ldw	r4,8(r16)
   21acc:	89400054 	ori	r5,r17,1
   21ad0:	81400115 	stw	r5,4(r16)
   21ad4:	20800315 	stw	r2,12(r4)
   21ad8:	11000215 	stw	r4,8(r2)
   21adc:	8463883a 	add	r17,r16,r17
   21ae0:	9c400515 	stw	r17,20(r19)
   21ae4:	9c400415 	stw	r17,16(r19)
   21ae8:	18800054 	ori	r2,r3,1
   21aec:	88800115 	stw	r2,4(r17)
   21af0:	8a000315 	stw	r8,12(r17)
   21af4:	8a000215 	stw	r8,8(r17)
   21af8:	88e3883a 	add	r17,r17,r3
   21afc:	88c00015 	stw	r3,0(r17)
   21b00:	9009883a 	mov	r4,r18
   21b04:	002db740 	call	2db74 <__malloc_unlock>
   21b08:	80800204 	addi	r2,r16,8
   21b0c:	00001b06 	br	21b7c <_malloc_r+0x2a4>
   21b10:	04400404 	movi	r17,16
   21b14:	89402536 	bltu	r17,r5,21bac <_malloc_r+0x2d4>
   21b18:	002db500 	call	2db50 <__malloc_lock>
   21b1c:	00800184 	movi	r2,6
   21b20:	01000084 	movi	r4,2
   21b24:	04c000f4 	movhi	r19,3
   21b28:	1085883a 	add	r2,r2,r2
   21b2c:	9cc1eb04 	addi	r19,r19,1964
   21b30:	1085883a 	add	r2,r2,r2
   21b34:	9885883a 	add	r2,r19,r2
   21b38:	14000117 	ldw	r16,4(r2)
   21b3c:	10fffe04 	addi	r3,r2,-8
   21b40:	80c0d926 	beq	r16,r3,21ea8 <_malloc_r+0x5d0>
   21b44:	80c00117 	ldw	r3,4(r16)
   21b48:	81000317 	ldw	r4,12(r16)
   21b4c:	00bfff04 	movi	r2,-4
   21b50:	1884703a 	and	r2,r3,r2
   21b54:	81400217 	ldw	r5,8(r16)
   21b58:	8085883a 	add	r2,r16,r2
   21b5c:	10c00117 	ldw	r3,4(r2)
   21b60:	29000315 	stw	r4,12(r5)
   21b64:	21400215 	stw	r5,8(r4)
   21b68:	18c00054 	ori	r3,r3,1
   21b6c:	10c00115 	stw	r3,4(r2)
   21b70:	9009883a 	mov	r4,r18
   21b74:	002db740 	call	2db74 <__malloc_unlock>
   21b78:	80800204 	addi	r2,r16,8
   21b7c:	dfc00a17 	ldw	ra,40(sp)
   21b80:	df000917 	ldw	fp,36(sp)
   21b84:	ddc00817 	ldw	r23,32(sp)
   21b88:	dd800717 	ldw	r22,28(sp)
   21b8c:	dd400617 	ldw	r21,24(sp)
   21b90:	dd000517 	ldw	r20,20(sp)
   21b94:	dcc00417 	ldw	r19,16(sp)
   21b98:	dc800317 	ldw	r18,12(sp)
   21b9c:	dc400217 	ldw	r17,8(sp)
   21ba0:	dc000117 	ldw	r16,4(sp)
   21ba4:	dec00b04 	addi	sp,sp,44
   21ba8:	f800283a 	ret
   21bac:	00800304 	movi	r2,12
   21bb0:	90800015 	stw	r2,0(r18)
   21bb4:	0005883a 	mov	r2,zero
   21bb8:	003ff006 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21bbc:	01002004 	movi	r4,128
   21bc0:	02001004 	movi	r8,64
   21bc4:	01c00fc4 	movi	r7,63
   21bc8:	003f6106 	br	21950 <__alt_data_end+0xfffe1950>
   21bcc:	4009883a 	mov	r4,r8
   21bd0:	003f7506 	br	219a8 <__alt_data_end+0xfffe19a8>
   21bd4:	81000317 	ldw	r4,12(r16)
   21bd8:	003fde06 	br	21b54 <__alt_data_end+0xfffe1b54>
   21bdc:	81c5883a 	add	r2,r16,r7
   21be0:	11400117 	ldw	r5,4(r2)
   21be4:	9009883a 	mov	r4,r18
   21be8:	29400054 	ori	r5,r5,1
   21bec:	11400115 	stw	r5,4(r2)
   21bf0:	002db740 	call	2db74 <__malloc_unlock>
   21bf4:	80800204 	addi	r2,r16,8
   21bf8:	003fe006 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21bfc:	9c000217 	ldw	r16,8(r19)
   21c00:	00bfff04 	movi	r2,-4
   21c04:	85800117 	ldw	r22,4(r16)
   21c08:	b0ac703a 	and	r22,r22,r2
   21c0c:	b4400336 	bltu	r22,r17,21c1c <_malloc_r+0x344>
   21c10:	b445c83a 	sub	r2,r22,r17
   21c14:	00c003c4 	movi	r3,15
   21c18:	18805d16 	blt	r3,r2,21d90 <_malloc_r+0x4b8>
   21c1c:	05c000f4 	movhi	r23,3
   21c20:	008000f4 	movhi	r2,3
   21c24:	108e7604 	addi	r2,r2,14808
   21c28:	bdc79a04 	addi	r23,r23,7784
   21c2c:	15400017 	ldw	r21,0(r2)
   21c30:	b8c00017 	ldw	r3,0(r23)
   21c34:	00bfffc4 	movi	r2,-1
   21c38:	858d883a 	add	r6,r16,r22
   21c3c:	8d6b883a 	add	r21,r17,r21
   21c40:	1880ea26 	beq	r3,r2,21fec <_malloc_r+0x714>
   21c44:	ad4403c4 	addi	r21,r21,4111
   21c48:	00bc0004 	movi	r2,-4096
   21c4c:	a8aa703a 	and	r21,r21,r2
   21c50:	a80b883a 	mov	r5,r21
   21c54:	9009883a 	mov	r4,r18
   21c58:	d9800015 	stw	r6,0(sp)
   21c5c:	002259c0 	call	2259c <_sbrk_r>
   21c60:	1029883a 	mov	r20,r2
   21c64:	00bfffc4 	movi	r2,-1
   21c68:	d9800017 	ldw	r6,0(sp)
   21c6c:	a080e826 	beq	r20,r2,22010 <_malloc_r+0x738>
   21c70:	a180a636 	bltu	r20,r6,21f0c <_malloc_r+0x634>
   21c74:	070000f4 	movhi	fp,3
   21c78:	e70e8304 	addi	fp,fp,14860
   21c7c:	e0800017 	ldw	r2,0(fp)
   21c80:	a887883a 	add	r3,r21,r2
   21c84:	e0c00015 	stw	r3,0(fp)
   21c88:	3500e626 	beq	r6,r20,22024 <_malloc_r+0x74c>
   21c8c:	b9000017 	ldw	r4,0(r23)
   21c90:	00bfffc4 	movi	r2,-1
   21c94:	2080ee26 	beq	r4,r2,22050 <_malloc_r+0x778>
   21c98:	a185c83a 	sub	r2,r20,r6
   21c9c:	10c5883a 	add	r2,r2,r3
   21ca0:	e0800015 	stw	r2,0(fp)
   21ca4:	a0c001cc 	andi	r3,r20,7
   21ca8:	1800bc26 	beq	r3,zero,21f9c <_malloc_r+0x6c4>
   21cac:	a0e9c83a 	sub	r20,r20,r3
   21cb0:	00840204 	movi	r2,4104
   21cb4:	a5000204 	addi	r20,r20,8
   21cb8:	10c7c83a 	sub	r3,r2,r3
   21cbc:	a545883a 	add	r2,r20,r21
   21cc0:	1083ffcc 	andi	r2,r2,4095
   21cc4:	18abc83a 	sub	r21,r3,r2
   21cc8:	a80b883a 	mov	r5,r21
   21ccc:	9009883a 	mov	r4,r18
   21cd0:	002259c0 	call	2259c <_sbrk_r>
   21cd4:	00ffffc4 	movi	r3,-1
   21cd8:	10c0e126 	beq	r2,r3,22060 <_malloc_r+0x788>
   21cdc:	1505c83a 	sub	r2,r2,r20
   21ce0:	1545883a 	add	r2,r2,r21
   21ce4:	10800054 	ori	r2,r2,1
   21ce8:	e0c00017 	ldw	r3,0(fp)
   21cec:	9d000215 	stw	r20,8(r19)
   21cf0:	a0800115 	stw	r2,4(r20)
   21cf4:	a8c7883a 	add	r3,r21,r3
   21cf8:	e0c00015 	stw	r3,0(fp)
   21cfc:	84c00e26 	beq	r16,r19,21d38 <_malloc_r+0x460>
   21d00:	018003c4 	movi	r6,15
   21d04:	3580a72e 	bgeu	r6,r22,21fa4 <_malloc_r+0x6cc>
   21d08:	81400117 	ldw	r5,4(r16)
   21d0c:	013ffe04 	movi	r4,-8
   21d10:	b0bffd04 	addi	r2,r22,-12
   21d14:	1104703a 	and	r2,r2,r4
   21d18:	2900004c 	andi	r4,r5,1
   21d1c:	2088b03a 	or	r4,r4,r2
   21d20:	81000115 	stw	r4,4(r16)
   21d24:	01400144 	movi	r5,5
   21d28:	8089883a 	add	r4,r16,r2
   21d2c:	21400115 	stw	r5,4(r4)
   21d30:	21400215 	stw	r5,8(r4)
   21d34:	3080cd36 	bltu	r6,r2,2206c <_malloc_r+0x794>
   21d38:	008000f4 	movhi	r2,3
   21d3c:	108e7504 	addi	r2,r2,14804
   21d40:	11000017 	ldw	r4,0(r2)
   21d44:	20c0012e 	bgeu	r4,r3,21d4c <_malloc_r+0x474>
   21d48:	10c00015 	stw	r3,0(r2)
   21d4c:	008000f4 	movhi	r2,3
   21d50:	108e7404 	addi	r2,r2,14800
   21d54:	11000017 	ldw	r4,0(r2)
   21d58:	9c000217 	ldw	r16,8(r19)
   21d5c:	20c0012e 	bgeu	r4,r3,21d64 <_malloc_r+0x48c>
   21d60:	10c00015 	stw	r3,0(r2)
   21d64:	80c00117 	ldw	r3,4(r16)
   21d68:	00bfff04 	movi	r2,-4
   21d6c:	1886703a 	and	r3,r3,r2
   21d70:	1c45c83a 	sub	r2,r3,r17
   21d74:	1c400236 	bltu	r3,r17,21d80 <_malloc_r+0x4a8>
   21d78:	00c003c4 	movi	r3,15
   21d7c:	18800416 	blt	r3,r2,21d90 <_malloc_r+0x4b8>
   21d80:	9009883a 	mov	r4,r18
   21d84:	002db740 	call	2db74 <__malloc_unlock>
   21d88:	0005883a 	mov	r2,zero
   21d8c:	003f7b06 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21d90:	88c00054 	ori	r3,r17,1
   21d94:	80c00115 	stw	r3,4(r16)
   21d98:	8463883a 	add	r17,r16,r17
   21d9c:	10800054 	ori	r2,r2,1
   21da0:	9c400215 	stw	r17,8(r19)
   21da4:	88800115 	stw	r2,4(r17)
   21da8:	9009883a 	mov	r4,r18
   21dac:	002db740 	call	2db74 <__malloc_unlock>
   21db0:	80800204 	addi	r2,r16,8
   21db4:	003f7106 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21db8:	00c00504 	movi	r3,20
   21dbc:	18804a2e 	bgeu	r3,r2,21ee8 <_malloc_r+0x610>
   21dc0:	00c01504 	movi	r3,84
   21dc4:	18806e36 	bltu	r3,r2,21f80 <_malloc_r+0x6a8>
   21dc8:	8804d33a 	srli	r2,r17,12
   21dcc:	12001bc4 	addi	r8,r2,111
   21dd0:	11c01b84 	addi	r7,r2,110
   21dd4:	4209883a 	add	r4,r8,r8
   21dd8:	003edd06 	br	21950 <__alt_data_end+0xfffe1950>
   21ddc:	3804d27a 	srli	r2,r7,9
   21de0:	00c00104 	movi	r3,4
   21de4:	1880442e 	bgeu	r3,r2,21ef8 <_malloc_r+0x620>
   21de8:	00c00504 	movi	r3,20
   21dec:	18808136 	bltu	r3,r2,21ff4 <_malloc_r+0x71c>
   21df0:	11401704 	addi	r5,r2,92
   21df4:	10c016c4 	addi	r3,r2,91
   21df8:	294b883a 	add	r5,r5,r5
   21dfc:	294b883a 	add	r5,r5,r5
   21e00:	294b883a 	add	r5,r5,r5
   21e04:	994b883a 	add	r5,r19,r5
   21e08:	28800017 	ldw	r2,0(r5)
   21e0c:	018000f4 	movhi	r6,3
   21e10:	297ffe04 	addi	r5,r5,-8
   21e14:	3181eb04 	addi	r6,r6,1964
   21e18:	28806526 	beq	r5,r2,21fb0 <_malloc_r+0x6d8>
   21e1c:	01bfff04 	movi	r6,-4
   21e20:	10c00117 	ldw	r3,4(r2)
   21e24:	1986703a 	and	r3,r3,r6
   21e28:	38c0022e 	bgeu	r7,r3,21e34 <_malloc_r+0x55c>
   21e2c:	10800217 	ldw	r2,8(r2)
   21e30:	28bffb1e 	bne	r5,r2,21e20 <__alt_data_end+0xfffe1e20>
   21e34:	11400317 	ldw	r5,12(r2)
   21e38:	98c00117 	ldw	r3,4(r19)
   21e3c:	81400315 	stw	r5,12(r16)
   21e40:	80800215 	stw	r2,8(r16)
   21e44:	2c000215 	stw	r16,8(r5)
   21e48:	14000315 	stw	r16,12(r2)
   21e4c:	003ef806 	br	21a30 <__alt_data_end+0xfffe1a30>
   21e50:	88c00054 	ori	r3,r17,1
   21e54:	80c00115 	stw	r3,4(r16)
   21e58:	8463883a 	add	r17,r16,r17
   21e5c:	34400515 	stw	r17,20(r6)
   21e60:	34400415 	stw	r17,16(r6)
   21e64:	10c00054 	ori	r3,r2,1
   21e68:	8a000315 	stw	r8,12(r17)
   21e6c:	8a000215 	stw	r8,8(r17)
   21e70:	88c00115 	stw	r3,4(r17)
   21e74:	88a3883a 	add	r17,r17,r2
   21e78:	88800015 	stw	r2,0(r17)
   21e7c:	9009883a 	mov	r4,r18
   21e80:	002db740 	call	2db74 <__malloc_unlock>
   21e84:	80800204 	addi	r2,r16,8
   21e88:	003f3c06 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21e8c:	30c00117 	ldw	r3,4(r6)
   21e90:	003ee706 	br	21a30 <__alt_data_end+0xfffe1a30>
   21e94:	5ac00044 	addi	r11,r11,1
   21e98:	588000cc 	andi	r2,r11,3
   21e9c:	31800204 	addi	r6,r6,8
   21ea0:	103efd1e 	bne	r2,zero,21a98 <__alt_data_end+0xfffe1a98>
   21ea4:	00002406 	br	21f38 <_malloc_r+0x660>
   21ea8:	14000317 	ldw	r16,12(r2)
   21eac:	143f251e 	bne	r2,r16,21b44 <__alt_data_end+0xfffe1b44>
   21eb0:	21000084 	addi	r4,r4,2
   21eb4:	003ebc06 	br	219a8 <__alt_data_end+0xfffe19a8>
   21eb8:	8085883a 	add	r2,r16,r2
   21ebc:	10c00117 	ldw	r3,4(r2)
   21ec0:	81000317 	ldw	r4,12(r16)
   21ec4:	81400217 	ldw	r5,8(r16)
   21ec8:	18c00054 	ori	r3,r3,1
   21ecc:	10c00115 	stw	r3,4(r2)
   21ed0:	29000315 	stw	r4,12(r5)
   21ed4:	21400215 	stw	r5,8(r4)
   21ed8:	9009883a 	mov	r4,r18
   21edc:	002db740 	call	2db74 <__malloc_unlock>
   21ee0:	80800204 	addi	r2,r16,8
   21ee4:	003f2506 	br	21b7c <__alt_data_end+0xfffe1b7c>
   21ee8:	12001704 	addi	r8,r2,92
   21eec:	11c016c4 	addi	r7,r2,91
   21ef0:	4209883a 	add	r4,r8,r8
   21ef4:	003e9606 	br	21950 <__alt_data_end+0xfffe1950>
   21ef8:	3804d1ba 	srli	r2,r7,6
   21efc:	11400e44 	addi	r5,r2,57
   21f00:	10c00e04 	addi	r3,r2,56
   21f04:	294b883a 	add	r5,r5,r5
   21f08:	003fbc06 	br	21dfc <__alt_data_end+0xfffe1dfc>
   21f0c:	84ff5926 	beq	r16,r19,21c74 <__alt_data_end+0xfffe1c74>
   21f10:	008000f4 	movhi	r2,3
   21f14:	1081eb04 	addi	r2,r2,1964
   21f18:	14000217 	ldw	r16,8(r2)
   21f1c:	00bfff04 	movi	r2,-4
   21f20:	80c00117 	ldw	r3,4(r16)
   21f24:	1886703a 	and	r3,r3,r2
   21f28:	003f9106 	br	21d70 <__alt_data_end+0xfffe1d70>
   21f2c:	60800217 	ldw	r2,8(r12)
   21f30:	213fffc4 	addi	r4,r4,-1
   21f34:	1300651e 	bne	r2,r12,220cc <_malloc_r+0x7f4>
   21f38:	208000cc 	andi	r2,r4,3
   21f3c:	633ffe04 	addi	r12,r12,-8
   21f40:	103ffa1e 	bne	r2,zero,21f2c <__alt_data_end+0xfffe1f2c>
   21f44:	98800117 	ldw	r2,4(r19)
   21f48:	0146303a 	nor	r3,zero,r5
   21f4c:	1884703a 	and	r2,r3,r2
   21f50:	98800115 	stw	r2,4(r19)
   21f54:	294b883a 	add	r5,r5,r5
   21f58:	117f2836 	bltu	r2,r5,21bfc <__alt_data_end+0xfffe1bfc>
   21f5c:	283f2726 	beq	r5,zero,21bfc <__alt_data_end+0xfffe1bfc>
   21f60:	2886703a 	and	r3,r5,r2
   21f64:	5809883a 	mov	r4,r11
   21f68:	183ec31e 	bne	r3,zero,21a78 <__alt_data_end+0xfffe1a78>
   21f6c:	294b883a 	add	r5,r5,r5
   21f70:	2886703a 	and	r3,r5,r2
   21f74:	21000104 	addi	r4,r4,4
   21f78:	183ffc26 	beq	r3,zero,21f6c <__alt_data_end+0xfffe1f6c>
   21f7c:	003ebe06 	br	21a78 <__alt_data_end+0xfffe1a78>
   21f80:	00c05504 	movi	r3,340
   21f84:	18801236 	bltu	r3,r2,21fd0 <_malloc_r+0x6f8>
   21f88:	8804d3fa 	srli	r2,r17,15
   21f8c:	12001e04 	addi	r8,r2,120
   21f90:	11c01dc4 	addi	r7,r2,119
   21f94:	4209883a 	add	r4,r8,r8
   21f98:	003e6d06 	br	21950 <__alt_data_end+0xfffe1950>
   21f9c:	00c40004 	movi	r3,4096
   21fa0:	003f4606 	br	21cbc <__alt_data_end+0xfffe1cbc>
   21fa4:	00800044 	movi	r2,1
   21fa8:	a0800115 	stw	r2,4(r20)
   21fac:	003f7406 	br	21d80 <__alt_data_end+0xfffe1d80>
   21fb0:	1805d0ba 	srai	r2,r3,2
   21fb4:	01c00044 	movi	r7,1
   21fb8:	30c00117 	ldw	r3,4(r6)
   21fbc:	388e983a 	sll	r7,r7,r2
   21fc0:	2805883a 	mov	r2,r5
   21fc4:	38c6b03a 	or	r3,r7,r3
   21fc8:	30c00115 	stw	r3,4(r6)
   21fcc:	003f9b06 	br	21e3c <__alt_data_end+0xfffe1e3c>
   21fd0:	00c15504 	movi	r3,1364
   21fd4:	18801a36 	bltu	r3,r2,22040 <_malloc_r+0x768>
   21fd8:	8804d4ba 	srli	r2,r17,18
   21fdc:	12001f44 	addi	r8,r2,125
   21fe0:	11c01f04 	addi	r7,r2,124
   21fe4:	4209883a 	add	r4,r8,r8
   21fe8:	003e5906 	br	21950 <__alt_data_end+0xfffe1950>
   21fec:	ad400404 	addi	r21,r21,16
   21ff0:	003f1706 	br	21c50 <__alt_data_end+0xfffe1c50>
   21ff4:	00c01504 	movi	r3,84
   21ff8:	18802336 	bltu	r3,r2,22088 <_malloc_r+0x7b0>
   21ffc:	3804d33a 	srli	r2,r7,12
   22000:	11401bc4 	addi	r5,r2,111
   22004:	10c01b84 	addi	r3,r2,110
   22008:	294b883a 	add	r5,r5,r5
   2200c:	003f7b06 	br	21dfc <__alt_data_end+0xfffe1dfc>
   22010:	9c000217 	ldw	r16,8(r19)
   22014:	00bfff04 	movi	r2,-4
   22018:	80c00117 	ldw	r3,4(r16)
   2201c:	1886703a 	and	r3,r3,r2
   22020:	003f5306 	br	21d70 <__alt_data_end+0xfffe1d70>
   22024:	3083ffcc 	andi	r2,r6,4095
   22028:	103f181e 	bne	r2,zero,21c8c <__alt_data_end+0xfffe1c8c>
   2202c:	99000217 	ldw	r4,8(r19)
   22030:	b545883a 	add	r2,r22,r21
   22034:	10800054 	ori	r2,r2,1
   22038:	20800115 	stw	r2,4(r4)
   2203c:	003f3e06 	br	21d38 <__alt_data_end+0xfffe1d38>
   22040:	01003f84 	movi	r4,254
   22044:	02001fc4 	movi	r8,127
   22048:	01c01f84 	movi	r7,126
   2204c:	003e4006 	br	21950 <__alt_data_end+0xfffe1950>
   22050:	008000f4 	movhi	r2,3
   22054:	10879a04 	addi	r2,r2,7784
   22058:	15000015 	stw	r20,0(r2)
   2205c:	003f1106 	br	21ca4 <__alt_data_end+0xfffe1ca4>
   22060:	00800044 	movi	r2,1
   22064:	002b883a 	mov	r21,zero
   22068:	003f1f06 	br	21ce8 <__alt_data_end+0xfffe1ce8>
   2206c:	81400204 	addi	r5,r16,8
   22070:	9009883a 	mov	r4,r18
   22074:	0020da80 	call	20da8 <_free_r>
   22078:	008000f4 	movhi	r2,3
   2207c:	108e8304 	addi	r2,r2,14860
   22080:	10c00017 	ldw	r3,0(r2)
   22084:	003f2c06 	br	21d38 <__alt_data_end+0xfffe1d38>
   22088:	00c05504 	movi	r3,340
   2208c:	18800536 	bltu	r3,r2,220a4 <_malloc_r+0x7cc>
   22090:	3804d3fa 	srli	r2,r7,15
   22094:	11401e04 	addi	r5,r2,120
   22098:	10c01dc4 	addi	r3,r2,119
   2209c:	294b883a 	add	r5,r5,r5
   220a0:	003f5606 	br	21dfc <__alt_data_end+0xfffe1dfc>
   220a4:	00c15504 	movi	r3,1364
   220a8:	18800536 	bltu	r3,r2,220c0 <_malloc_r+0x7e8>
   220ac:	3804d4ba 	srli	r2,r7,18
   220b0:	11401f44 	addi	r5,r2,125
   220b4:	10c01f04 	addi	r3,r2,124
   220b8:	294b883a 	add	r5,r5,r5
   220bc:	003f4f06 	br	21dfc <__alt_data_end+0xfffe1dfc>
   220c0:	01403f84 	movi	r5,254
   220c4:	00c01f84 	movi	r3,126
   220c8:	003f4c06 	br	21dfc <__alt_data_end+0xfffe1dfc>
   220cc:	98800117 	ldw	r2,4(r19)
   220d0:	003fa006 	br	21f54 <__alt_data_end+0xfffe1f54>
   220d4:	8808d0fa 	srli	r4,r17,3
   220d8:	20800044 	addi	r2,r4,1
   220dc:	1085883a 	add	r2,r2,r2
   220e0:	003e9006 	br	21b24 <__alt_data_end+0xfffe1b24>

000220e4 <memset>:
   220e4:	20c000cc 	andi	r3,r4,3
   220e8:	2005883a 	mov	r2,r4
   220ec:	18004426 	beq	r3,zero,22200 <memset+0x11c>
   220f0:	31ffffc4 	addi	r7,r6,-1
   220f4:	30004026 	beq	r6,zero,221f8 <memset+0x114>
   220f8:	2813883a 	mov	r9,r5
   220fc:	200d883a 	mov	r6,r4
   22100:	2007883a 	mov	r3,r4
   22104:	00000406 	br	22118 <memset+0x34>
   22108:	3a3fffc4 	addi	r8,r7,-1
   2210c:	31800044 	addi	r6,r6,1
   22110:	38003926 	beq	r7,zero,221f8 <memset+0x114>
   22114:	400f883a 	mov	r7,r8
   22118:	18c00044 	addi	r3,r3,1
   2211c:	32400005 	stb	r9,0(r6)
   22120:	1a0000cc 	andi	r8,r3,3
   22124:	403ff81e 	bne	r8,zero,22108 <__alt_data_end+0xfffe2108>
   22128:	010000c4 	movi	r4,3
   2212c:	21c02d2e 	bgeu	r4,r7,221e4 <memset+0x100>
   22130:	29003fcc 	andi	r4,r5,255
   22134:	200c923a 	slli	r6,r4,8
   22138:	3108b03a 	or	r4,r6,r4
   2213c:	200c943a 	slli	r6,r4,16
   22140:	218cb03a 	or	r6,r4,r6
   22144:	010003c4 	movi	r4,15
   22148:	21c0182e 	bgeu	r4,r7,221ac <memset+0xc8>
   2214c:	3b3ffc04 	addi	r12,r7,-16
   22150:	6018d13a 	srli	r12,r12,4
   22154:	1a000104 	addi	r8,r3,4
   22158:	1ac00204 	addi	r11,r3,8
   2215c:	6008913a 	slli	r4,r12,4
   22160:	1a800304 	addi	r10,r3,12
   22164:	1813883a 	mov	r9,r3
   22168:	21000504 	addi	r4,r4,20
   2216c:	1909883a 	add	r4,r3,r4
   22170:	49800015 	stw	r6,0(r9)
   22174:	41800015 	stw	r6,0(r8)
   22178:	59800015 	stw	r6,0(r11)
   2217c:	51800015 	stw	r6,0(r10)
   22180:	42000404 	addi	r8,r8,16
   22184:	4a400404 	addi	r9,r9,16
   22188:	5ac00404 	addi	r11,r11,16
   2218c:	52800404 	addi	r10,r10,16
   22190:	413ff71e 	bne	r8,r4,22170 <__alt_data_end+0xfffe2170>
   22194:	63000044 	addi	r12,r12,1
   22198:	6018913a 	slli	r12,r12,4
   2219c:	39c003cc 	andi	r7,r7,15
   221a0:	010000c4 	movi	r4,3
   221a4:	1b07883a 	add	r3,r3,r12
   221a8:	21c00e2e 	bgeu	r4,r7,221e4 <memset+0x100>
   221ac:	1813883a 	mov	r9,r3
   221b0:	3811883a 	mov	r8,r7
   221b4:	010000c4 	movi	r4,3
   221b8:	49800015 	stw	r6,0(r9)
   221bc:	423fff04 	addi	r8,r8,-4
   221c0:	4a400104 	addi	r9,r9,4
   221c4:	223ffc36 	bltu	r4,r8,221b8 <__alt_data_end+0xfffe21b8>
   221c8:	393fff04 	addi	r4,r7,-4
   221cc:	2008d0ba 	srli	r4,r4,2
   221d0:	39c000cc 	andi	r7,r7,3
   221d4:	21000044 	addi	r4,r4,1
   221d8:	2109883a 	add	r4,r4,r4
   221dc:	2109883a 	add	r4,r4,r4
   221e0:	1907883a 	add	r3,r3,r4
   221e4:	38000526 	beq	r7,zero,221fc <memset+0x118>
   221e8:	19cf883a 	add	r7,r3,r7
   221ec:	19400005 	stb	r5,0(r3)
   221f0:	18c00044 	addi	r3,r3,1
   221f4:	38fffd1e 	bne	r7,r3,221ec <__alt_data_end+0xfffe21ec>
   221f8:	f800283a 	ret
   221fc:	f800283a 	ret
   22200:	2007883a 	mov	r3,r4
   22204:	300f883a 	mov	r7,r6
   22208:	003fc706 	br	22128 <__alt_data_end+0xfffe2128>

0002220c <_open_r>:
   2220c:	defffd04 	addi	sp,sp,-12
   22210:	2805883a 	mov	r2,r5
   22214:	dc000015 	stw	r16,0(sp)
   22218:	040000f4 	movhi	r16,3
   2221c:	dc400115 	stw	r17,4(sp)
   22220:	300b883a 	mov	r5,r6
   22224:	840e7304 	addi	r16,r16,14796
   22228:	2023883a 	mov	r17,r4
   2222c:	380d883a 	mov	r6,r7
   22230:	1009883a 	mov	r4,r2
   22234:	dfc00215 	stw	ra,8(sp)
   22238:	80000015 	stw	zero,0(r16)
   2223c:	002dc980 	call	2dc98 <open>
   22240:	00ffffc4 	movi	r3,-1
   22244:	10c00526 	beq	r2,r3,2225c <_open_r+0x50>
   22248:	dfc00217 	ldw	ra,8(sp)
   2224c:	dc400117 	ldw	r17,4(sp)
   22250:	dc000017 	ldw	r16,0(sp)
   22254:	dec00304 	addi	sp,sp,12
   22258:	f800283a 	ret
   2225c:	80c00017 	ldw	r3,0(r16)
   22260:	183ff926 	beq	r3,zero,22248 <__alt_data_end+0xfffe2248>
   22264:	88c00015 	stw	r3,0(r17)
   22268:	003ff706 	br	22248 <__alt_data_end+0xfffe2248>

0002226c <_printf_r>:
   2226c:	defffd04 	addi	sp,sp,-12
   22270:	2805883a 	mov	r2,r5
   22274:	dfc00015 	stw	ra,0(sp)
   22278:	d9800115 	stw	r6,4(sp)
   2227c:	d9c00215 	stw	r7,8(sp)
   22280:	21400217 	ldw	r5,8(r4)
   22284:	d9c00104 	addi	r7,sp,4
   22288:	100d883a 	mov	r6,r2
   2228c:	00227c40 	call	227c4 <___vfprintf_internal_r>
   22290:	dfc00017 	ldw	ra,0(sp)
   22294:	dec00304 	addi	sp,sp,12
   22298:	f800283a 	ret

0002229c <printf>:
   2229c:	defffc04 	addi	sp,sp,-16
   222a0:	dfc00015 	stw	ra,0(sp)
   222a4:	d9400115 	stw	r5,4(sp)
   222a8:	d9800215 	stw	r6,8(sp)
   222ac:	d9c00315 	stw	r7,12(sp)
   222b0:	008000f4 	movhi	r2,3
   222b4:	10879904 	addi	r2,r2,7780
   222b8:	10800017 	ldw	r2,0(r2)
   222bc:	200b883a 	mov	r5,r4
   222c0:	d9800104 	addi	r6,sp,4
   222c4:	11000217 	ldw	r4,8(r2)
   222c8:	00249bc0 	call	249bc <__vfprintf_internal>
   222cc:	dfc00017 	ldw	ra,0(sp)
   222d0:	dec00404 	addi	sp,sp,16
   222d4:	f800283a 	ret

000222d8 <_puts_r>:
   222d8:	defff604 	addi	sp,sp,-40
   222dc:	dc000715 	stw	r16,28(sp)
   222e0:	2021883a 	mov	r16,r4
   222e4:	2809883a 	mov	r4,r5
   222e8:	dc400815 	stw	r17,32(sp)
   222ec:	dfc00915 	stw	ra,36(sp)
   222f0:	2823883a 	mov	r17,r5
   222f4:	002272c0 	call	2272c <strlen>
   222f8:	10c00044 	addi	r3,r2,1
   222fc:	d8800115 	stw	r2,4(sp)
   22300:	008000f4 	movhi	r2,3
   22304:	10801f04 	addi	r2,r2,124
   22308:	d8800215 	stw	r2,8(sp)
   2230c:	00800044 	movi	r2,1
   22310:	d8800315 	stw	r2,12(sp)
   22314:	00800084 	movi	r2,2
   22318:	dc400015 	stw	r17,0(sp)
   2231c:	d8c00615 	stw	r3,24(sp)
   22320:	dec00415 	stw	sp,16(sp)
   22324:	d8800515 	stw	r2,20(sp)
   22328:	80000226 	beq	r16,zero,22334 <_puts_r+0x5c>
   2232c:	80800e17 	ldw	r2,56(r16)
   22330:	10001426 	beq	r2,zero,22384 <_puts_r+0xac>
   22334:	81400217 	ldw	r5,8(r16)
   22338:	2880030b 	ldhu	r2,12(r5)
   2233c:	10c8000c 	andi	r3,r2,8192
   22340:	1800061e 	bne	r3,zero,2235c <_puts_r+0x84>
   22344:	29001917 	ldw	r4,100(r5)
   22348:	00f7ffc4 	movi	r3,-8193
   2234c:	10880014 	ori	r2,r2,8192
   22350:	20c6703a 	and	r3,r4,r3
   22354:	2880030d 	sth	r2,12(r5)
   22358:	28c01915 	stw	r3,100(r5)
   2235c:	d9800404 	addi	r6,sp,16
   22360:	8009883a 	mov	r4,r16
   22364:	00265d00 	call	265d0 <__sfvwrite_r>
   22368:	1000091e 	bne	r2,zero,22390 <_puts_r+0xb8>
   2236c:	00800284 	movi	r2,10
   22370:	dfc00917 	ldw	ra,36(sp)
   22374:	dc400817 	ldw	r17,32(sp)
   22378:	dc000717 	ldw	r16,28(sp)
   2237c:	dec00a04 	addi	sp,sp,40
   22380:	f800283a 	ret
   22384:	8009883a 	mov	r4,r16
   22388:	0020b280 	call	20b28 <__sinit>
   2238c:	003fe906 	br	22334 <__alt_data_end+0xfffe2334>
   22390:	00bfffc4 	movi	r2,-1
   22394:	003ff606 	br	22370 <__alt_data_end+0xfffe2370>

00022398 <puts>:
   22398:	008000f4 	movhi	r2,3
   2239c:	10879904 	addi	r2,r2,7780
   223a0:	200b883a 	mov	r5,r4
   223a4:	11000017 	ldw	r4,0(r2)
   223a8:	00222d81 	jmpi	222d8 <_puts_r>

000223ac <lflush>:
   223ac:	2080030b 	ldhu	r2,12(r4)
   223b0:	00c00244 	movi	r3,9
   223b4:	1080024c 	andi	r2,r2,9
   223b8:	10c00226 	beq	r2,r3,223c4 <lflush+0x18>
   223bc:	0005883a 	mov	r2,zero
   223c0:	f800283a 	ret
   223c4:	00207a81 	jmpi	207a8 <fflush>

000223c8 <__srefill_r>:
   223c8:	defffc04 	addi	sp,sp,-16
   223cc:	dc400115 	stw	r17,4(sp)
   223d0:	dc000015 	stw	r16,0(sp)
   223d4:	dfc00315 	stw	ra,12(sp)
   223d8:	dc800215 	stw	r18,8(sp)
   223dc:	2023883a 	mov	r17,r4
   223e0:	2821883a 	mov	r16,r5
   223e4:	20000226 	beq	r4,zero,223f0 <__srefill_r+0x28>
   223e8:	20800e17 	ldw	r2,56(r4)
   223ec:	10003c26 	beq	r2,zero,224e0 <__srefill_r+0x118>
   223f0:	80c0030b 	ldhu	r3,12(r16)
   223f4:	1908000c 	andi	r4,r3,8192
   223f8:	1805883a 	mov	r2,r3
   223fc:	2000071e 	bne	r4,zero,2241c <__srefill_r+0x54>
   22400:	81001917 	ldw	r4,100(r16)
   22404:	18880014 	ori	r2,r3,8192
   22408:	00f7ffc4 	movi	r3,-8193
   2240c:	20c8703a 	and	r4,r4,r3
   22410:	8080030d 	sth	r2,12(r16)
   22414:	1007883a 	mov	r3,r2
   22418:	81001915 	stw	r4,100(r16)
   2241c:	80000115 	stw	zero,4(r16)
   22420:	1100080c 	andi	r4,r2,32
   22424:	2000571e 	bne	r4,zero,22584 <__srefill_r+0x1bc>
   22428:	1100010c 	andi	r4,r2,4
   2242c:	20001f26 	beq	r4,zero,224ac <__srefill_r+0xe4>
   22430:	81400c17 	ldw	r5,48(r16)
   22434:	28000826 	beq	r5,zero,22458 <__srefill_r+0x90>
   22438:	80801004 	addi	r2,r16,64
   2243c:	28800226 	beq	r5,r2,22448 <__srefill_r+0x80>
   22440:	8809883a 	mov	r4,r17
   22444:	0020da80 	call	20da8 <_free_r>
   22448:	80800f17 	ldw	r2,60(r16)
   2244c:	80000c15 	stw	zero,48(r16)
   22450:	80800115 	stw	r2,4(r16)
   22454:	1000391e 	bne	r2,zero,2253c <__srefill_r+0x174>
   22458:	80800417 	ldw	r2,16(r16)
   2245c:	10004b26 	beq	r2,zero,2258c <__srefill_r+0x1c4>
   22460:	8480030b 	ldhu	r18,12(r16)
   22464:	908000cc 	andi	r2,r18,3
   22468:	10001f1e 	bne	r2,zero,224e8 <__srefill_r+0x120>
   2246c:	81800417 	ldw	r6,16(r16)
   22470:	80800817 	ldw	r2,32(r16)
   22474:	81c00517 	ldw	r7,20(r16)
   22478:	81400717 	ldw	r5,28(r16)
   2247c:	81800015 	stw	r6,0(r16)
   22480:	8809883a 	mov	r4,r17
   22484:	103ee83a 	callr	r2
   22488:	80800115 	stw	r2,4(r16)
   2248c:	00800e0e 	bge	zero,r2,224c8 <__srefill_r+0x100>
   22490:	0005883a 	mov	r2,zero
   22494:	dfc00317 	ldw	ra,12(sp)
   22498:	dc800217 	ldw	r18,8(sp)
   2249c:	dc400117 	ldw	r17,4(sp)
   224a0:	dc000017 	ldw	r16,0(sp)
   224a4:	dec00404 	addi	sp,sp,16
   224a8:	f800283a 	ret
   224ac:	1100040c 	andi	r4,r2,16
   224b0:	20003026 	beq	r4,zero,22574 <__srefill_r+0x1ac>
   224b4:	1080020c 	andi	r2,r2,8
   224b8:	1000241e 	bne	r2,zero,2254c <__srefill_r+0x184>
   224bc:	18c00114 	ori	r3,r3,4
   224c0:	80c0030d 	sth	r3,12(r16)
   224c4:	003fe406 	br	22458 <__alt_data_end+0xfffe2458>
   224c8:	80c0030b 	ldhu	r3,12(r16)
   224cc:	1000161e 	bne	r2,zero,22528 <__srefill_r+0x160>
   224d0:	18c00814 	ori	r3,r3,32
   224d4:	00bfffc4 	movi	r2,-1
   224d8:	80c0030d 	sth	r3,12(r16)
   224dc:	003fed06 	br	22494 <__alt_data_end+0xfffe2494>
   224e0:	0020b280 	call	20b28 <__sinit>
   224e4:	003fc206 	br	223f0 <__alt_data_end+0xfffe23f0>
   224e8:	008000f4 	movhi	r2,3
   224ec:	10879804 	addi	r2,r2,7776
   224f0:	11000017 	ldw	r4,0(r2)
   224f4:	014000b4 	movhi	r5,2
   224f8:	00800044 	movi	r2,1
   224fc:	2948eb04 	addi	r5,r5,9132
   22500:	8080030d 	sth	r2,12(r16)
   22504:	00215940 	call	21594 <_fwalk>
   22508:	00800244 	movi	r2,9
   2250c:	8480030d 	sth	r18,12(r16)
   22510:	9480024c 	andi	r18,r18,9
   22514:	90bfd51e 	bne	r18,r2,2246c <__alt_data_end+0xfffe246c>
   22518:	800b883a 	mov	r5,r16
   2251c:	8809883a 	mov	r4,r17
   22520:	00205300 	call	20530 <__sflush_r>
   22524:	003fd106 	br	2246c <__alt_data_end+0xfffe246c>
   22528:	18c01014 	ori	r3,r3,64
   2252c:	80000115 	stw	zero,4(r16)
   22530:	00bfffc4 	movi	r2,-1
   22534:	80c0030d 	sth	r3,12(r16)
   22538:	003fd606 	br	22494 <__alt_data_end+0xfffe2494>
   2253c:	80c00e17 	ldw	r3,56(r16)
   22540:	0005883a 	mov	r2,zero
   22544:	80c00015 	stw	r3,0(r16)
   22548:	003fd206 	br	22494 <__alt_data_end+0xfffe2494>
   2254c:	800b883a 	mov	r5,r16
   22550:	8809883a 	mov	r4,r17
   22554:	002074c0 	call	2074c <_fflush_r>
   22558:	10000a1e 	bne	r2,zero,22584 <__srefill_r+0x1bc>
   2255c:	8080030b 	ldhu	r2,12(r16)
   22560:	00fffdc4 	movi	r3,-9
   22564:	80000215 	stw	zero,8(r16)
   22568:	1886703a 	and	r3,r3,r2
   2256c:	80000615 	stw	zero,24(r16)
   22570:	003fd206 	br	224bc <__alt_data_end+0xfffe24bc>
   22574:	00800244 	movi	r2,9
   22578:	88800015 	stw	r2,0(r17)
   2257c:	18c01014 	ori	r3,r3,64
   22580:	80c0030d 	sth	r3,12(r16)
   22584:	00bfffc4 	movi	r2,-1
   22588:	003fc206 	br	22494 <__alt_data_end+0xfffe2494>
   2258c:	800b883a 	mov	r5,r16
   22590:	8809883a 	mov	r4,r17
   22594:	002171c0 	call	2171c <__smakebuf_r>
   22598:	003fb106 	br	22460 <__alt_data_end+0xfffe2460>

0002259c <_sbrk_r>:
   2259c:	defffd04 	addi	sp,sp,-12
   225a0:	dc000015 	stw	r16,0(sp)
   225a4:	040000f4 	movhi	r16,3
   225a8:	dc400115 	stw	r17,4(sp)
   225ac:	840e7304 	addi	r16,r16,14796
   225b0:	2023883a 	mov	r17,r4
   225b4:	2809883a 	mov	r4,r5
   225b8:	dfc00215 	stw	ra,8(sp)
   225bc:	80000015 	stw	zero,0(r16)
   225c0:	002df880 	call	2df88 <sbrk>
   225c4:	00ffffc4 	movi	r3,-1
   225c8:	10c00526 	beq	r2,r3,225e0 <_sbrk_r+0x44>
   225cc:	dfc00217 	ldw	ra,8(sp)
   225d0:	dc400117 	ldw	r17,4(sp)
   225d4:	dc000017 	ldw	r16,0(sp)
   225d8:	dec00304 	addi	sp,sp,12
   225dc:	f800283a 	ret
   225e0:	80c00017 	ldw	r3,0(r16)
   225e4:	183ff926 	beq	r3,zero,225cc <__alt_data_end+0xfffe25cc>
   225e8:	88c00015 	stw	r3,0(r17)
   225ec:	003ff706 	br	225cc <__alt_data_end+0xfffe25cc>

000225f0 <__sread>:
   225f0:	defffe04 	addi	sp,sp,-8
   225f4:	dc000015 	stw	r16,0(sp)
   225f8:	2821883a 	mov	r16,r5
   225fc:	2940038f 	ldh	r5,14(r5)
   22600:	dfc00115 	stw	ra,4(sp)
   22604:	0027fa00 	call	27fa0 <_read_r>
   22608:	10000716 	blt	r2,zero,22628 <__sread+0x38>
   2260c:	80c01417 	ldw	r3,80(r16)
   22610:	1887883a 	add	r3,r3,r2
   22614:	80c01415 	stw	r3,80(r16)
   22618:	dfc00117 	ldw	ra,4(sp)
   2261c:	dc000017 	ldw	r16,0(sp)
   22620:	dec00204 	addi	sp,sp,8
   22624:	f800283a 	ret
   22628:	80c0030b 	ldhu	r3,12(r16)
   2262c:	18fbffcc 	andi	r3,r3,61439
   22630:	80c0030d 	sth	r3,12(r16)
   22634:	dfc00117 	ldw	ra,4(sp)
   22638:	dc000017 	ldw	r16,0(sp)
   2263c:	dec00204 	addi	sp,sp,8
   22640:	f800283a 	ret

00022644 <__seofread>:
   22644:	0005883a 	mov	r2,zero
   22648:	f800283a 	ret

0002264c <__swrite>:
   2264c:	2880030b 	ldhu	r2,12(r5)
   22650:	defffb04 	addi	sp,sp,-20
   22654:	dcc00315 	stw	r19,12(sp)
   22658:	dc800215 	stw	r18,8(sp)
   2265c:	dc400115 	stw	r17,4(sp)
   22660:	dc000015 	stw	r16,0(sp)
   22664:	dfc00415 	stw	ra,16(sp)
   22668:	10c0400c 	andi	r3,r2,256
   2266c:	2821883a 	mov	r16,r5
   22670:	2023883a 	mov	r17,r4
   22674:	3025883a 	mov	r18,r6
   22678:	3827883a 	mov	r19,r7
   2267c:	18000526 	beq	r3,zero,22694 <__swrite+0x48>
   22680:	2940038f 	ldh	r5,14(r5)
   22684:	01c00084 	movi	r7,2
   22688:	000d883a 	mov	r6,zero
   2268c:	0026bbc0 	call	26bbc <_lseek_r>
   22690:	8080030b 	ldhu	r2,12(r16)
   22694:	8140038f 	ldh	r5,14(r16)
   22698:	10bbffcc 	andi	r2,r2,61439
   2269c:	980f883a 	mov	r7,r19
   226a0:	900d883a 	mov	r6,r18
   226a4:	8809883a 	mov	r4,r17
   226a8:	8080030d 	sth	r2,12(r16)
   226ac:	dfc00417 	ldw	ra,16(sp)
   226b0:	dcc00317 	ldw	r19,12(sp)
   226b4:	dc800217 	ldw	r18,8(sp)
   226b8:	dc400117 	ldw	r17,4(sp)
   226bc:	dc000017 	ldw	r16,0(sp)
   226c0:	dec00504 	addi	sp,sp,20
   226c4:	0024a941 	jmpi	24a94 <_write_r>

000226c8 <__sseek>:
   226c8:	defffe04 	addi	sp,sp,-8
   226cc:	dc000015 	stw	r16,0(sp)
   226d0:	2821883a 	mov	r16,r5
   226d4:	2940038f 	ldh	r5,14(r5)
   226d8:	dfc00115 	stw	ra,4(sp)
   226dc:	0026bbc0 	call	26bbc <_lseek_r>
   226e0:	00ffffc4 	movi	r3,-1
   226e4:	10c00826 	beq	r2,r3,22708 <__sseek+0x40>
   226e8:	80c0030b 	ldhu	r3,12(r16)
   226ec:	80801415 	stw	r2,80(r16)
   226f0:	18c40014 	ori	r3,r3,4096
   226f4:	80c0030d 	sth	r3,12(r16)
   226f8:	dfc00117 	ldw	ra,4(sp)
   226fc:	dc000017 	ldw	r16,0(sp)
   22700:	dec00204 	addi	sp,sp,8
   22704:	f800283a 	ret
   22708:	80c0030b 	ldhu	r3,12(r16)
   2270c:	18fbffcc 	andi	r3,r3,61439
   22710:	80c0030d 	sth	r3,12(r16)
   22714:	dfc00117 	ldw	ra,4(sp)
   22718:	dc000017 	ldw	r16,0(sp)
   2271c:	dec00204 	addi	sp,sp,8
   22720:	f800283a 	ret

00022724 <__sclose>:
   22724:	2940038f 	ldh	r5,14(r5)
   22728:	0024c481 	jmpi	24c48 <_close_r>

0002272c <strlen>:
   2272c:	208000cc 	andi	r2,r4,3
   22730:	10002026 	beq	r2,zero,227b4 <strlen+0x88>
   22734:	20800007 	ldb	r2,0(r4)
   22738:	10002026 	beq	r2,zero,227bc <strlen+0x90>
   2273c:	2005883a 	mov	r2,r4
   22740:	00000206 	br	2274c <strlen+0x20>
   22744:	10c00007 	ldb	r3,0(r2)
   22748:	18001826 	beq	r3,zero,227ac <strlen+0x80>
   2274c:	10800044 	addi	r2,r2,1
   22750:	10c000cc 	andi	r3,r2,3
   22754:	183ffb1e 	bne	r3,zero,22744 <__alt_data_end+0xfffe2744>
   22758:	10c00017 	ldw	r3,0(r2)
   2275c:	01ffbff4 	movhi	r7,65279
   22760:	39ffbfc4 	addi	r7,r7,-257
   22764:	00ca303a 	nor	r5,zero,r3
   22768:	01a02074 	movhi	r6,32897
   2276c:	19c7883a 	add	r3,r3,r7
   22770:	31a02004 	addi	r6,r6,-32640
   22774:	1946703a 	and	r3,r3,r5
   22778:	1986703a 	and	r3,r3,r6
   2277c:	1800091e 	bne	r3,zero,227a4 <strlen+0x78>
   22780:	10800104 	addi	r2,r2,4
   22784:	10c00017 	ldw	r3,0(r2)
   22788:	19cb883a 	add	r5,r3,r7
   2278c:	00c6303a 	nor	r3,zero,r3
   22790:	28c6703a 	and	r3,r5,r3
   22794:	1986703a 	and	r3,r3,r6
   22798:	183ff926 	beq	r3,zero,22780 <__alt_data_end+0xfffe2780>
   2279c:	00000106 	br	227a4 <strlen+0x78>
   227a0:	10800044 	addi	r2,r2,1
   227a4:	10c00007 	ldb	r3,0(r2)
   227a8:	183ffd1e 	bne	r3,zero,227a0 <__alt_data_end+0xfffe27a0>
   227ac:	1105c83a 	sub	r2,r2,r4
   227b0:	f800283a 	ret
   227b4:	2005883a 	mov	r2,r4
   227b8:	003fe706 	br	22758 <__alt_data_end+0xfffe2758>
   227bc:	0005883a 	mov	r2,zero
   227c0:	f800283a 	ret

000227c4 <___vfprintf_internal_r>:
   227c4:	deffb804 	addi	sp,sp,-288
   227c8:	dfc04715 	stw	ra,284(sp)
   227cc:	ddc04515 	stw	r23,276(sp)
   227d0:	dd404315 	stw	r21,268(sp)
   227d4:	d9002c15 	stw	r4,176(sp)
   227d8:	282f883a 	mov	r23,r5
   227dc:	302b883a 	mov	r21,r6
   227e0:	d9c02d15 	stw	r7,180(sp)
   227e4:	df004615 	stw	fp,280(sp)
   227e8:	dd804415 	stw	r22,272(sp)
   227ec:	dd004215 	stw	r20,264(sp)
   227f0:	dcc04115 	stw	r19,260(sp)
   227f4:	dc804015 	stw	r18,256(sp)
   227f8:	dc403f15 	stw	r17,252(sp)
   227fc:	dc003e15 	stw	r16,248(sp)
   22800:	0026b8c0 	call	26b8c <_localeconv_r>
   22804:	10800017 	ldw	r2,0(r2)
   22808:	1009883a 	mov	r4,r2
   2280c:	d8803415 	stw	r2,208(sp)
   22810:	002272c0 	call	2272c <strlen>
   22814:	d8803715 	stw	r2,220(sp)
   22818:	d8802c17 	ldw	r2,176(sp)
   2281c:	10000226 	beq	r2,zero,22828 <___vfprintf_internal_r+0x64>
   22820:	10800e17 	ldw	r2,56(r2)
   22824:	1000f926 	beq	r2,zero,22c0c <___vfprintf_internal_r+0x448>
   22828:	b880030b 	ldhu	r2,12(r23)
   2282c:	10c8000c 	andi	r3,r2,8192
   22830:	1800061e 	bne	r3,zero,2284c <___vfprintf_internal_r+0x88>
   22834:	b9001917 	ldw	r4,100(r23)
   22838:	00f7ffc4 	movi	r3,-8193
   2283c:	10880014 	ori	r2,r2,8192
   22840:	20c6703a 	and	r3,r4,r3
   22844:	b880030d 	sth	r2,12(r23)
   22848:	b8c01915 	stw	r3,100(r23)
   2284c:	10c0020c 	andi	r3,r2,8
   22850:	1800c126 	beq	r3,zero,22b58 <___vfprintf_internal_r+0x394>
   22854:	b8c00417 	ldw	r3,16(r23)
   22858:	1800bf26 	beq	r3,zero,22b58 <___vfprintf_internal_r+0x394>
   2285c:	1080068c 	andi	r2,r2,26
   22860:	00c00284 	movi	r3,10
   22864:	10c0c426 	beq	r2,r3,22b78 <___vfprintf_internal_r+0x3b4>
   22868:	d8c00404 	addi	r3,sp,16
   2286c:	050000f4 	movhi	r20,3
   22870:	d9001e04 	addi	r4,sp,120
   22874:	a5003084 	addi	r20,r20,194
   22878:	d8c01e15 	stw	r3,120(sp)
   2287c:	d8002015 	stw	zero,128(sp)
   22880:	d8001f15 	stw	zero,124(sp)
   22884:	d8003315 	stw	zero,204(sp)
   22888:	d8003615 	stw	zero,216(sp)
   2288c:	d8003815 	stw	zero,224(sp)
   22890:	1811883a 	mov	r8,r3
   22894:	d8003915 	stw	zero,228(sp)
   22898:	d8003a15 	stw	zero,232(sp)
   2289c:	d8002f15 	stw	zero,188(sp)
   228a0:	d9002815 	stw	r4,160(sp)
   228a4:	a8800007 	ldb	r2,0(r21)
   228a8:	10027b26 	beq	r2,zero,23298 <___vfprintf_internal_r+0xad4>
   228ac:	00c00944 	movi	r3,37
   228b0:	a821883a 	mov	r16,r21
   228b4:	10c0021e 	bne	r2,r3,228c0 <___vfprintf_internal_r+0xfc>
   228b8:	00001406 	br	2290c <___vfprintf_internal_r+0x148>
   228bc:	10c00326 	beq	r2,r3,228cc <___vfprintf_internal_r+0x108>
   228c0:	84000044 	addi	r16,r16,1
   228c4:	80800007 	ldb	r2,0(r16)
   228c8:	103ffc1e 	bne	r2,zero,228bc <__alt_data_end+0xfffe28bc>
   228cc:	8563c83a 	sub	r17,r16,r21
   228d0:	88000e26 	beq	r17,zero,2290c <___vfprintf_internal_r+0x148>
   228d4:	d8c02017 	ldw	r3,128(sp)
   228d8:	d8801f17 	ldw	r2,124(sp)
   228dc:	45400015 	stw	r21,0(r8)
   228e0:	1c47883a 	add	r3,r3,r17
   228e4:	10800044 	addi	r2,r2,1
   228e8:	d8c02015 	stw	r3,128(sp)
   228ec:	44400115 	stw	r17,4(r8)
   228f0:	d8801f15 	stw	r2,124(sp)
   228f4:	00c001c4 	movi	r3,7
   228f8:	1880a716 	blt	r3,r2,22b98 <___vfprintf_internal_r+0x3d4>
   228fc:	42000204 	addi	r8,r8,8
   22900:	d9402f17 	ldw	r5,188(sp)
   22904:	2c4b883a 	add	r5,r5,r17
   22908:	d9402f15 	stw	r5,188(sp)
   2290c:	80800007 	ldb	r2,0(r16)
   22910:	1000a826 	beq	r2,zero,22bb4 <___vfprintf_internal_r+0x3f0>
   22914:	84400047 	ldb	r17,1(r16)
   22918:	00bfffc4 	movi	r2,-1
   2291c:	85400044 	addi	r21,r16,1
   22920:	d8002785 	stb	zero,158(sp)
   22924:	0007883a 	mov	r3,zero
   22928:	000f883a 	mov	r7,zero
   2292c:	d8802915 	stw	r2,164(sp)
   22930:	d8003115 	stw	zero,196(sp)
   22934:	0025883a 	mov	r18,zero
   22938:	01401604 	movi	r5,88
   2293c:	01800244 	movi	r6,9
   22940:	02800a84 	movi	r10,42
   22944:	02401b04 	movi	r9,108
   22948:	ad400044 	addi	r21,r21,1
   2294c:	88bff804 	addi	r2,r17,-32
   22950:	28830436 	bltu	r5,r2,23564 <___vfprintf_internal_r+0xda0>
   22954:	100490ba 	slli	r2,r2,2
   22958:	010000b4 	movhi	r4,2
   2295c:	210a5b04 	addi	r4,r4,10604
   22960:	1105883a 	add	r2,r2,r4
   22964:	10800017 	ldw	r2,0(r2)
   22968:	1000683a 	jmp	r2
   2296c:	00023484 	movi	zero,2258
   22970:	00023564 	muli	zero,zero,2261
   22974:	00023564 	muli	zero,zero,2261
   22978:	000234a4 	muli	zero,zero,2258
   2297c:	00023564 	muli	zero,zero,2261
   22980:	00023564 	muli	zero,zero,2261
   22984:	00023564 	muli	zero,zero,2261
   22988:	00023564 	muli	zero,zero,2261
   2298c:	00023564 	muli	zero,zero,2261
   22990:	00023564 	muli	zero,zero,2261
   22994:	00022c18 	cmpnei	zero,zero,2224
   22998:	000233c0 	call	233c <__alt_mem_onchip_memory-0x1dcc4>
   2299c:	00023564 	muli	zero,zero,2261
   229a0:	00022ae0 	cmpeqi	zero,zero,2219
   229a4:	00022c40 	call	22c4 <__alt_mem_onchip_memory-0x1dd3c>
   229a8:	00023564 	muli	zero,zero,2261
   229ac:	00022c80 	call	22c8 <__alt_mem_onchip_memory-0x1dd38>
   229b0:	00022c8c 	andi	zero,zero,2226
   229b4:	00022c8c 	andi	zero,zero,2226
   229b8:	00022c8c 	andi	zero,zero,2226
   229bc:	00022c8c 	andi	zero,zero,2226
   229c0:	00022c8c 	andi	zero,zero,2226
   229c4:	00022c8c 	andi	zero,zero,2226
   229c8:	00022c8c 	andi	zero,zero,2226
   229cc:	00022c8c 	andi	zero,zero,2226
   229d0:	00022c8c 	andi	zero,zero,2226
   229d4:	00023564 	muli	zero,zero,2261
   229d8:	00023564 	muli	zero,zero,2261
   229dc:	00023564 	muli	zero,zero,2261
   229e0:	00023564 	muli	zero,zero,2261
   229e4:	00023564 	muli	zero,zero,2261
   229e8:	00023564 	muli	zero,zero,2261
   229ec:	00023564 	muli	zero,zero,2261
   229f0:	00023564 	muli	zero,zero,2261
   229f4:	00023564 	muli	zero,zero,2261
   229f8:	00023564 	muli	zero,zero,2261
   229fc:	00022cc0 	call	22cc <__alt_mem_onchip_memory-0x1dd34>
   22a00:	00022d7c 	xorhi	zero,zero,2229
   22a04:	00023564 	muli	zero,zero,2261
   22a08:	00022d7c 	xorhi	zero,zero,2229
   22a0c:	00023564 	muli	zero,zero,2261
   22a10:	00023564 	muli	zero,zero,2261
   22a14:	00023564 	muli	zero,zero,2261
   22a18:	00023564 	muli	zero,zero,2261
   22a1c:	00022e1c 	xori	zero,zero,2232
   22a20:	00023564 	muli	zero,zero,2261
   22a24:	00023564 	muli	zero,zero,2261
   22a28:	00022e28 	cmpgeui	zero,zero,2232
   22a2c:	00023564 	muli	zero,zero,2261
   22a30:	00023564 	muli	zero,zero,2261
   22a34:	00023564 	muli	zero,zero,2261
   22a38:	00023564 	muli	zero,zero,2261
   22a3c:	00023564 	muli	zero,zero,2261
   22a40:	000232a0 	cmpeqi	zero,zero,2250
   22a44:	00023564 	muli	zero,zero,2261
   22a48:	00023564 	muli	zero,zero,2261
   22a4c:	00023300 	call	2330 <__alt_mem_onchip_memory-0x1dcd0>
   22a50:	00023564 	muli	zero,zero,2261
   22a54:	00023564 	muli	zero,zero,2261
   22a58:	00023564 	muli	zero,zero,2261
   22a5c:	00023564 	muli	zero,zero,2261
   22a60:	00023564 	muli	zero,zero,2261
   22a64:	00023564 	muli	zero,zero,2261
   22a68:	00023564 	muli	zero,zero,2261
   22a6c:	00023564 	muli	zero,zero,2261
   22a70:	00023564 	muli	zero,zero,2261
   22a74:	00023564 	muli	zero,zero,2261
   22a78:	00023510 	cmplti	zero,zero,2260
   22a7c:	000234b0 	cmpltui	zero,zero,2258
   22a80:	00022d7c 	xorhi	zero,zero,2229
   22a84:	00022d7c 	xorhi	zero,zero,2229
   22a88:	00022d7c 	xorhi	zero,zero,2229
   22a8c:	000234c0 	call	234c <__alt_mem_onchip_memory-0x1dcb4>
   22a90:	000234b0 	cmpltui	zero,zero,2258
   22a94:	00023564 	muli	zero,zero,2261
   22a98:	00023564 	muli	zero,zero,2261
   22a9c:	000234cc 	andi	zero,zero,2259
   22aa0:	00023564 	muli	zero,zero,2261
   22aa4:	000234dc 	xori	zero,zero,2259
   22aa8:	000233b0 	cmpltui	zero,zero,2254
   22aac:	00022aec 	andhi	zero,zero,2219
   22ab0:	000233d0 	cmplti	zero,zero,2255
   22ab4:	00023564 	muli	zero,zero,2261
   22ab8:	000233dc 	xori	zero,zero,2255
   22abc:	00023564 	muli	zero,zero,2261
   22ac0:	00023438 	rdprs	zero,zero,2256
   22ac4:	00023564 	muli	zero,zero,2261
   22ac8:	00023564 	muli	zero,zero,2261
   22acc:	00023448 	cmpgei	zero,zero,2257
   22ad0:	d9003117 	ldw	r4,196(sp)
   22ad4:	d8802d15 	stw	r2,180(sp)
   22ad8:	0109c83a 	sub	r4,zero,r4
   22adc:	d9003115 	stw	r4,196(sp)
   22ae0:	94800114 	ori	r18,r18,4
   22ae4:	ac400007 	ldb	r17,0(r21)
   22ae8:	003f9706 	br	22948 <__alt_data_end+0xfffe2948>
   22aec:	00800c04 	movi	r2,48
   22af0:	d9002d17 	ldw	r4,180(sp)
   22af4:	d9402917 	ldw	r5,164(sp)
   22af8:	d8802705 	stb	r2,156(sp)
   22afc:	00801e04 	movi	r2,120
   22b00:	d8802745 	stb	r2,157(sp)
   22b04:	d8002785 	stb	zero,158(sp)
   22b08:	20c00104 	addi	r3,r4,4
   22b0c:	24c00017 	ldw	r19,0(r4)
   22b10:	002d883a 	mov	r22,zero
   22b14:	90800094 	ori	r2,r18,2
   22b18:	28029a16 	blt	r5,zero,23584 <___vfprintf_internal_r+0xdc0>
   22b1c:	00bfdfc4 	movi	r2,-129
   22b20:	90a4703a 	and	r18,r18,r2
   22b24:	d8c02d15 	stw	r3,180(sp)
   22b28:	94800094 	ori	r18,r18,2
   22b2c:	9802871e 	bne	r19,zero,2354c <___vfprintf_internal_r+0xd88>
   22b30:	008000f4 	movhi	r2,3
   22b34:	10802904 	addi	r2,r2,164
   22b38:	d8803915 	stw	r2,228(sp)
   22b3c:	04401e04 	movi	r17,120
   22b40:	d8802917 	ldw	r2,164(sp)
   22b44:	0039883a 	mov	fp,zero
   22b48:	1001e926 	beq	r2,zero,232f0 <___vfprintf_internal_r+0xb2c>
   22b4c:	0027883a 	mov	r19,zero
   22b50:	002d883a 	mov	r22,zero
   22b54:	00020506 	br	2336c <___vfprintf_internal_r+0xba8>
   22b58:	d9002c17 	ldw	r4,176(sp)
   22b5c:	b80b883a 	mov	r5,r23
   22b60:	0024af40 	call	24af4 <__swsetup_r>
   22b64:	1005ac1e 	bne	r2,zero,24218 <___vfprintf_internal_r+0x1a54>
   22b68:	b880030b 	ldhu	r2,12(r23)
   22b6c:	00c00284 	movi	r3,10
   22b70:	1080068c 	andi	r2,r2,26
   22b74:	10ff3c1e 	bne	r2,r3,22868 <__alt_data_end+0xfffe2868>
   22b78:	b880038f 	ldh	r2,14(r23)
   22b7c:	103f3a16 	blt	r2,zero,22868 <__alt_data_end+0xfffe2868>
   22b80:	d9c02d17 	ldw	r7,180(sp)
   22b84:	d9002c17 	ldw	r4,176(sp)
   22b88:	a80d883a 	mov	r6,r21
   22b8c:	b80b883a 	mov	r5,r23
   22b90:	00249d80 	call	249d8 <__sbprintf>
   22b94:	00001106 	br	22bdc <___vfprintf_internal_r+0x418>
   22b98:	d9002c17 	ldw	r4,176(sp)
   22b9c:	d9801e04 	addi	r6,sp,120
   22ba0:	b80b883a 	mov	r5,r23
   22ba4:	00287b00 	call	287b0 <__sprint_r>
   22ba8:	1000081e 	bne	r2,zero,22bcc <___vfprintf_internal_r+0x408>
   22bac:	da000404 	addi	r8,sp,16
   22bb0:	003f5306 	br	22900 <__alt_data_end+0xfffe2900>
   22bb4:	d8802017 	ldw	r2,128(sp)
   22bb8:	10000426 	beq	r2,zero,22bcc <___vfprintf_internal_r+0x408>
   22bbc:	d9002c17 	ldw	r4,176(sp)
   22bc0:	d9801e04 	addi	r6,sp,120
   22bc4:	b80b883a 	mov	r5,r23
   22bc8:	00287b00 	call	287b0 <__sprint_r>
   22bcc:	b880030b 	ldhu	r2,12(r23)
   22bd0:	1080100c 	andi	r2,r2,64
   22bd4:	1005901e 	bne	r2,zero,24218 <___vfprintf_internal_r+0x1a54>
   22bd8:	d8802f17 	ldw	r2,188(sp)
   22bdc:	dfc04717 	ldw	ra,284(sp)
   22be0:	df004617 	ldw	fp,280(sp)
   22be4:	ddc04517 	ldw	r23,276(sp)
   22be8:	dd804417 	ldw	r22,272(sp)
   22bec:	dd404317 	ldw	r21,268(sp)
   22bf0:	dd004217 	ldw	r20,264(sp)
   22bf4:	dcc04117 	ldw	r19,260(sp)
   22bf8:	dc804017 	ldw	r18,256(sp)
   22bfc:	dc403f17 	ldw	r17,252(sp)
   22c00:	dc003e17 	ldw	r16,248(sp)
   22c04:	dec04804 	addi	sp,sp,288
   22c08:	f800283a 	ret
   22c0c:	d9002c17 	ldw	r4,176(sp)
   22c10:	0020b280 	call	20b28 <__sinit>
   22c14:	003f0406 	br	22828 <__alt_data_end+0xfffe2828>
   22c18:	d8802d17 	ldw	r2,180(sp)
   22c1c:	d9002d17 	ldw	r4,180(sp)
   22c20:	10800017 	ldw	r2,0(r2)
   22c24:	d8803115 	stw	r2,196(sp)
   22c28:	20800104 	addi	r2,r4,4
   22c2c:	d9003117 	ldw	r4,196(sp)
   22c30:	203fa716 	blt	r4,zero,22ad0 <__alt_data_end+0xfffe2ad0>
   22c34:	d8802d15 	stw	r2,180(sp)
   22c38:	ac400007 	ldb	r17,0(r21)
   22c3c:	003f4206 	br	22948 <__alt_data_end+0xfffe2948>
   22c40:	ac400007 	ldb	r17,0(r21)
   22c44:	aac00044 	addi	r11,r21,1
   22c48:	8a872826 	beq	r17,r10,248ec <___vfprintf_internal_r+0x2128>
   22c4c:	88bff404 	addi	r2,r17,-48
   22c50:	0009883a 	mov	r4,zero
   22c54:	30867d36 	bltu	r6,r2,2464c <___vfprintf_internal_r+0x1e88>
   22c58:	5c400007 	ldb	r17,0(r11)
   22c5c:	210002a4 	muli	r4,r4,10
   22c60:	5d400044 	addi	r21,r11,1
   22c64:	a817883a 	mov	r11,r21
   22c68:	2089883a 	add	r4,r4,r2
   22c6c:	88bff404 	addi	r2,r17,-48
   22c70:	30bff92e 	bgeu	r6,r2,22c58 <__alt_data_end+0xfffe2c58>
   22c74:	2005c916 	blt	r4,zero,2439c <___vfprintf_internal_r+0x1bd8>
   22c78:	d9002915 	stw	r4,164(sp)
   22c7c:	003f3306 	br	2294c <__alt_data_end+0xfffe294c>
   22c80:	94802014 	ori	r18,r18,128
   22c84:	ac400007 	ldb	r17,0(r21)
   22c88:	003f2f06 	br	22948 <__alt_data_end+0xfffe2948>
   22c8c:	a809883a 	mov	r4,r21
   22c90:	d8003115 	stw	zero,196(sp)
   22c94:	88bff404 	addi	r2,r17,-48
   22c98:	0017883a 	mov	r11,zero
   22c9c:	24400007 	ldb	r17,0(r4)
   22ca0:	5ac002a4 	muli	r11,r11,10
   22ca4:	ad400044 	addi	r21,r21,1
   22ca8:	a809883a 	mov	r4,r21
   22cac:	12d7883a 	add	r11,r2,r11
   22cb0:	88bff404 	addi	r2,r17,-48
   22cb4:	30bff92e 	bgeu	r6,r2,22c9c <__alt_data_end+0xfffe2c9c>
   22cb8:	dac03115 	stw	r11,196(sp)
   22cbc:	003f2306 	br	2294c <__alt_data_end+0xfffe294c>
   22cc0:	18c03fcc 	andi	r3,r3,255
   22cc4:	18072b1e 	bne	r3,zero,24974 <___vfprintf_internal_r+0x21b0>
   22cc8:	94800414 	ori	r18,r18,16
   22ccc:	9080080c 	andi	r2,r18,32
   22cd0:	10037b26 	beq	r2,zero,23ac0 <___vfprintf_internal_r+0x12fc>
   22cd4:	d9402d17 	ldw	r5,180(sp)
   22cd8:	28800117 	ldw	r2,4(r5)
   22cdc:	2cc00017 	ldw	r19,0(r5)
   22ce0:	29400204 	addi	r5,r5,8
   22ce4:	d9402d15 	stw	r5,180(sp)
   22ce8:	102d883a 	mov	r22,r2
   22cec:	10044b16 	blt	r2,zero,23e1c <___vfprintf_internal_r+0x1658>
   22cf0:	d9402917 	ldw	r5,164(sp)
   22cf4:	df002783 	ldbu	fp,158(sp)
   22cf8:	2803bc16 	blt	r5,zero,23bec <___vfprintf_internal_r+0x1428>
   22cfc:	00ffdfc4 	movi	r3,-129
   22d00:	9d84b03a 	or	r2,r19,r22
   22d04:	90e4703a 	and	r18,r18,r3
   22d08:	10017726 	beq	r2,zero,232e8 <___vfprintf_internal_r+0xb24>
   22d0c:	b0038326 	beq	r22,zero,23b1c <___vfprintf_internal_r+0x1358>
   22d10:	dc402a15 	stw	r17,168(sp)
   22d14:	dc001e04 	addi	r16,sp,120
   22d18:	b023883a 	mov	r17,r22
   22d1c:	402d883a 	mov	r22,r8
   22d20:	9809883a 	mov	r4,r19
   22d24:	880b883a 	mov	r5,r17
   22d28:	01800284 	movi	r6,10
   22d2c:	000f883a 	mov	r7,zero
   22d30:	002a8800 	call	2a880 <__umoddi3>
   22d34:	10800c04 	addi	r2,r2,48
   22d38:	843fffc4 	addi	r16,r16,-1
   22d3c:	9809883a 	mov	r4,r19
   22d40:	880b883a 	mov	r5,r17
   22d44:	80800005 	stb	r2,0(r16)
   22d48:	01800284 	movi	r6,10
   22d4c:	000f883a 	mov	r7,zero
   22d50:	002a3080 	call	2a308 <__udivdi3>
   22d54:	1027883a 	mov	r19,r2
   22d58:	10c4b03a 	or	r2,r2,r3
   22d5c:	1823883a 	mov	r17,r3
   22d60:	103fef1e 	bne	r2,zero,22d20 <__alt_data_end+0xfffe2d20>
   22d64:	d8c02817 	ldw	r3,160(sp)
   22d68:	dc402a17 	ldw	r17,168(sp)
   22d6c:	b011883a 	mov	r8,r22
   22d70:	1c07c83a 	sub	r3,r3,r16
   22d74:	d8c02e15 	stw	r3,184(sp)
   22d78:	00005906 	br	22ee0 <___vfprintf_internal_r+0x71c>
   22d7c:	18c03fcc 	andi	r3,r3,255
   22d80:	1806fa1e 	bne	r3,zero,2496c <___vfprintf_internal_r+0x21a8>
   22d84:	9080020c 	andi	r2,r18,8
   22d88:	10048a26 	beq	r2,zero,23fb4 <___vfprintf_internal_r+0x17f0>
   22d8c:	d8c02d17 	ldw	r3,180(sp)
   22d90:	d9002d17 	ldw	r4,180(sp)
   22d94:	d9402d17 	ldw	r5,180(sp)
   22d98:	18c00017 	ldw	r3,0(r3)
   22d9c:	21000117 	ldw	r4,4(r4)
   22da0:	29400204 	addi	r5,r5,8
   22da4:	d8c03615 	stw	r3,216(sp)
   22da8:	d9003815 	stw	r4,224(sp)
   22dac:	d9402d15 	stw	r5,180(sp)
   22db0:	d9003617 	ldw	r4,216(sp)
   22db4:	d9403817 	ldw	r5,224(sp)
   22db8:	da003d15 	stw	r8,244(sp)
   22dbc:	04000044 	movi	r16,1
   22dc0:	00285640 	call	28564 <__fpclassifyd>
   22dc4:	da003d17 	ldw	r8,244(sp)
   22dc8:	14041f1e 	bne	r2,r16,23e48 <___vfprintf_internal_r+0x1684>
   22dcc:	d9003617 	ldw	r4,216(sp)
   22dd0:	d9403817 	ldw	r5,224(sp)
   22dd4:	000d883a 	mov	r6,zero
   22dd8:	000f883a 	mov	r7,zero
   22ddc:	002c2640 	call	2c264 <__ledf2>
   22de0:	da003d17 	ldw	r8,244(sp)
   22de4:	1005be16 	blt	r2,zero,244e0 <___vfprintf_internal_r+0x1d1c>
   22de8:	df002783 	ldbu	fp,158(sp)
   22dec:	008011c4 	movi	r2,71
   22df0:	1445330e 	bge	r2,r17,242c0 <___vfprintf_internal_r+0x1afc>
   22df4:	040000f4 	movhi	r16,3
   22df8:	84002104 	addi	r16,r16,132
   22dfc:	00c000c4 	movi	r3,3
   22e00:	00bfdfc4 	movi	r2,-129
   22e04:	d8c02a15 	stw	r3,168(sp)
   22e08:	90a4703a 	and	r18,r18,r2
   22e0c:	d8c02e15 	stw	r3,184(sp)
   22e10:	d8002915 	stw	zero,164(sp)
   22e14:	d8003215 	stw	zero,200(sp)
   22e18:	00003706 	br	22ef8 <___vfprintf_internal_r+0x734>
   22e1c:	94800214 	ori	r18,r18,8
   22e20:	ac400007 	ldb	r17,0(r21)
   22e24:	003ec806 	br	22948 <__alt_data_end+0xfffe2948>
   22e28:	18c03fcc 	andi	r3,r3,255
   22e2c:	1806db1e 	bne	r3,zero,2499c <___vfprintf_internal_r+0x21d8>
   22e30:	94800414 	ori	r18,r18,16
   22e34:	9080080c 	andi	r2,r18,32
   22e38:	1002d826 	beq	r2,zero,2399c <___vfprintf_internal_r+0x11d8>
   22e3c:	d9402d17 	ldw	r5,180(sp)
   22e40:	d8c02917 	ldw	r3,164(sp)
   22e44:	d8002785 	stb	zero,158(sp)
   22e48:	28800204 	addi	r2,r5,8
   22e4c:	2cc00017 	ldw	r19,0(r5)
   22e50:	2d800117 	ldw	r22,4(r5)
   22e54:	18048f16 	blt	r3,zero,24094 <___vfprintf_internal_r+0x18d0>
   22e58:	013fdfc4 	movi	r4,-129
   22e5c:	9d86b03a 	or	r3,r19,r22
   22e60:	d8802d15 	stw	r2,180(sp)
   22e64:	9124703a 	and	r18,r18,r4
   22e68:	1802d91e 	bne	r3,zero,239d0 <___vfprintf_internal_r+0x120c>
   22e6c:	d8c02917 	ldw	r3,164(sp)
   22e70:	0039883a 	mov	fp,zero
   22e74:	1805c326 	beq	r3,zero,24584 <___vfprintf_internal_r+0x1dc0>
   22e78:	0027883a 	mov	r19,zero
   22e7c:	002d883a 	mov	r22,zero
   22e80:	dc001e04 	addi	r16,sp,120
   22e84:	9806d0fa 	srli	r3,r19,3
   22e88:	b008977a 	slli	r4,r22,29
   22e8c:	b02cd0fa 	srli	r22,r22,3
   22e90:	9cc001cc 	andi	r19,r19,7
   22e94:	98800c04 	addi	r2,r19,48
   22e98:	843fffc4 	addi	r16,r16,-1
   22e9c:	20e6b03a 	or	r19,r4,r3
   22ea0:	80800005 	stb	r2,0(r16)
   22ea4:	9d86b03a 	or	r3,r19,r22
   22ea8:	183ff61e 	bne	r3,zero,22e84 <__alt_data_end+0xfffe2e84>
   22eac:	90c0004c 	andi	r3,r18,1
   22eb0:	18013b26 	beq	r3,zero,233a0 <___vfprintf_internal_r+0xbdc>
   22eb4:	10803fcc 	andi	r2,r2,255
   22eb8:	1080201c 	xori	r2,r2,128
   22ebc:	10bfe004 	addi	r2,r2,-128
   22ec0:	00c00c04 	movi	r3,48
   22ec4:	10c13626 	beq	r2,r3,233a0 <___vfprintf_internal_r+0xbdc>
   22ec8:	80ffffc5 	stb	r3,-1(r16)
   22ecc:	d8c02817 	ldw	r3,160(sp)
   22ed0:	80bfffc4 	addi	r2,r16,-1
   22ed4:	1021883a 	mov	r16,r2
   22ed8:	1887c83a 	sub	r3,r3,r2
   22edc:	d8c02e15 	stw	r3,184(sp)
   22ee0:	d8802e17 	ldw	r2,184(sp)
   22ee4:	d9002917 	ldw	r4,164(sp)
   22ee8:	1100010e 	bge	r2,r4,22ef0 <___vfprintf_internal_r+0x72c>
   22eec:	2005883a 	mov	r2,r4
   22ef0:	d8802a15 	stw	r2,168(sp)
   22ef4:	d8003215 	stw	zero,200(sp)
   22ef8:	e7003fcc 	andi	fp,fp,255
   22efc:	e700201c 	xori	fp,fp,128
   22f00:	e73fe004 	addi	fp,fp,-128
   22f04:	e0000326 	beq	fp,zero,22f14 <___vfprintf_internal_r+0x750>
   22f08:	d8c02a17 	ldw	r3,168(sp)
   22f0c:	18c00044 	addi	r3,r3,1
   22f10:	d8c02a15 	stw	r3,168(sp)
   22f14:	90c0008c 	andi	r3,r18,2
   22f18:	d8c02b15 	stw	r3,172(sp)
   22f1c:	18000326 	beq	r3,zero,22f2c <___vfprintf_internal_r+0x768>
   22f20:	d8c02a17 	ldw	r3,168(sp)
   22f24:	18c00084 	addi	r3,r3,2
   22f28:	d8c02a15 	stw	r3,168(sp)
   22f2c:	90c0210c 	andi	r3,r18,132
   22f30:	d8c03015 	stw	r3,192(sp)
   22f34:	1801a31e 	bne	r3,zero,235c4 <___vfprintf_internal_r+0xe00>
   22f38:	d9003117 	ldw	r4,196(sp)
   22f3c:	d8c02a17 	ldw	r3,168(sp)
   22f40:	20e7c83a 	sub	r19,r4,r3
   22f44:	04c19f0e 	bge	zero,r19,235c4 <___vfprintf_internal_r+0xe00>
   22f48:	02400404 	movi	r9,16
   22f4c:	d8c02017 	ldw	r3,128(sp)
   22f50:	d8801f17 	ldw	r2,124(sp)
   22f54:	4cc50d0e 	bge	r9,r19,2438c <___vfprintf_internal_r+0x1bc8>
   22f58:	014000f4 	movhi	r5,3
   22f5c:	29403484 	addi	r5,r5,210
   22f60:	dc403b15 	stw	r17,236(sp)
   22f64:	d9403515 	stw	r5,212(sp)
   22f68:	9823883a 	mov	r17,r19
   22f6c:	482d883a 	mov	r22,r9
   22f70:	9027883a 	mov	r19,r18
   22f74:	070001c4 	movi	fp,7
   22f78:	8025883a 	mov	r18,r16
   22f7c:	dc002c17 	ldw	r16,176(sp)
   22f80:	00000306 	br	22f90 <___vfprintf_internal_r+0x7cc>
   22f84:	8c7ffc04 	addi	r17,r17,-16
   22f88:	42000204 	addi	r8,r8,8
   22f8c:	b440130e 	bge	r22,r17,22fdc <___vfprintf_internal_r+0x818>
   22f90:	010000f4 	movhi	r4,3
   22f94:	18c00404 	addi	r3,r3,16
   22f98:	10800044 	addi	r2,r2,1
   22f9c:	21003484 	addi	r4,r4,210
   22fa0:	41000015 	stw	r4,0(r8)
   22fa4:	45800115 	stw	r22,4(r8)
   22fa8:	d8c02015 	stw	r3,128(sp)
   22fac:	d8801f15 	stw	r2,124(sp)
   22fb0:	e0bff40e 	bge	fp,r2,22f84 <__alt_data_end+0xfffe2f84>
   22fb4:	d9801e04 	addi	r6,sp,120
   22fb8:	b80b883a 	mov	r5,r23
   22fbc:	8009883a 	mov	r4,r16
   22fc0:	00287b00 	call	287b0 <__sprint_r>
   22fc4:	103f011e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   22fc8:	8c7ffc04 	addi	r17,r17,-16
   22fcc:	d8c02017 	ldw	r3,128(sp)
   22fd0:	d8801f17 	ldw	r2,124(sp)
   22fd4:	da000404 	addi	r8,sp,16
   22fd8:	b47fed16 	blt	r22,r17,22f90 <__alt_data_end+0xfffe2f90>
   22fdc:	9021883a 	mov	r16,r18
   22fe0:	9825883a 	mov	r18,r19
   22fe4:	8827883a 	mov	r19,r17
   22fe8:	dc403b17 	ldw	r17,236(sp)
   22fec:	d9403517 	ldw	r5,212(sp)
   22ff0:	98c7883a 	add	r3,r19,r3
   22ff4:	10800044 	addi	r2,r2,1
   22ff8:	41400015 	stw	r5,0(r8)
   22ffc:	44c00115 	stw	r19,4(r8)
   23000:	d8c02015 	stw	r3,128(sp)
   23004:	d8801f15 	stw	r2,124(sp)
   23008:	010001c4 	movi	r4,7
   2300c:	2082a316 	blt	r4,r2,23a9c <___vfprintf_internal_r+0x12d8>
   23010:	df002787 	ldb	fp,158(sp)
   23014:	42000204 	addi	r8,r8,8
   23018:	e0000c26 	beq	fp,zero,2304c <___vfprintf_internal_r+0x888>
   2301c:	d8801f17 	ldw	r2,124(sp)
   23020:	d9002784 	addi	r4,sp,158
   23024:	18c00044 	addi	r3,r3,1
   23028:	10800044 	addi	r2,r2,1
   2302c:	41000015 	stw	r4,0(r8)
   23030:	01000044 	movi	r4,1
   23034:	41000115 	stw	r4,4(r8)
   23038:	d8c02015 	stw	r3,128(sp)
   2303c:	d8801f15 	stw	r2,124(sp)
   23040:	010001c4 	movi	r4,7
   23044:	20823c16 	blt	r4,r2,23938 <___vfprintf_internal_r+0x1174>
   23048:	42000204 	addi	r8,r8,8
   2304c:	d8802b17 	ldw	r2,172(sp)
   23050:	10000c26 	beq	r2,zero,23084 <___vfprintf_internal_r+0x8c0>
   23054:	d8801f17 	ldw	r2,124(sp)
   23058:	d9002704 	addi	r4,sp,156
   2305c:	18c00084 	addi	r3,r3,2
   23060:	10800044 	addi	r2,r2,1
   23064:	41000015 	stw	r4,0(r8)
   23068:	01000084 	movi	r4,2
   2306c:	41000115 	stw	r4,4(r8)
   23070:	d8c02015 	stw	r3,128(sp)
   23074:	d8801f15 	stw	r2,124(sp)
   23078:	010001c4 	movi	r4,7
   2307c:	20823616 	blt	r4,r2,23958 <___vfprintf_internal_r+0x1194>
   23080:	42000204 	addi	r8,r8,8
   23084:	d9003017 	ldw	r4,192(sp)
   23088:	00802004 	movi	r2,128
   2308c:	20819926 	beq	r4,r2,236f4 <___vfprintf_internal_r+0xf30>
   23090:	d9402917 	ldw	r5,164(sp)
   23094:	d8802e17 	ldw	r2,184(sp)
   23098:	28adc83a 	sub	r22,r5,r2
   2309c:	0580310e 	bge	zero,r22,23164 <___vfprintf_internal_r+0x9a0>
   230a0:	07000404 	movi	fp,16
   230a4:	d8801f17 	ldw	r2,124(sp)
   230a8:	e584140e 	bge	fp,r22,240fc <___vfprintf_internal_r+0x1938>
   230ac:	014000f4 	movhi	r5,3
   230b0:	29403084 	addi	r5,r5,194
   230b4:	dc402915 	stw	r17,164(sp)
   230b8:	d9402b15 	stw	r5,172(sp)
   230bc:	b023883a 	mov	r17,r22
   230c0:	04c001c4 	movi	r19,7
   230c4:	a82d883a 	mov	r22,r21
   230c8:	902b883a 	mov	r21,r18
   230cc:	8025883a 	mov	r18,r16
   230d0:	dc002c17 	ldw	r16,176(sp)
   230d4:	00000306 	br	230e4 <___vfprintf_internal_r+0x920>
   230d8:	8c7ffc04 	addi	r17,r17,-16
   230dc:	42000204 	addi	r8,r8,8
   230e0:	e440110e 	bge	fp,r17,23128 <___vfprintf_internal_r+0x964>
   230e4:	18c00404 	addi	r3,r3,16
   230e8:	10800044 	addi	r2,r2,1
   230ec:	45000015 	stw	r20,0(r8)
   230f0:	47000115 	stw	fp,4(r8)
   230f4:	d8c02015 	stw	r3,128(sp)
   230f8:	d8801f15 	stw	r2,124(sp)
   230fc:	98bff60e 	bge	r19,r2,230d8 <__alt_data_end+0xfffe30d8>
   23100:	d9801e04 	addi	r6,sp,120
   23104:	b80b883a 	mov	r5,r23
   23108:	8009883a 	mov	r4,r16
   2310c:	00287b00 	call	287b0 <__sprint_r>
   23110:	103eae1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23114:	8c7ffc04 	addi	r17,r17,-16
   23118:	d8c02017 	ldw	r3,128(sp)
   2311c:	d8801f17 	ldw	r2,124(sp)
   23120:	da000404 	addi	r8,sp,16
   23124:	e47fef16 	blt	fp,r17,230e4 <__alt_data_end+0xfffe30e4>
   23128:	9021883a 	mov	r16,r18
   2312c:	a825883a 	mov	r18,r21
   23130:	b02b883a 	mov	r21,r22
   23134:	882d883a 	mov	r22,r17
   23138:	dc402917 	ldw	r17,164(sp)
   2313c:	d9002b17 	ldw	r4,172(sp)
   23140:	1d87883a 	add	r3,r3,r22
   23144:	10800044 	addi	r2,r2,1
   23148:	41000015 	stw	r4,0(r8)
   2314c:	45800115 	stw	r22,4(r8)
   23150:	d8c02015 	stw	r3,128(sp)
   23154:	d8801f15 	stw	r2,124(sp)
   23158:	010001c4 	movi	r4,7
   2315c:	2081ee16 	blt	r4,r2,23918 <___vfprintf_internal_r+0x1154>
   23160:	42000204 	addi	r8,r8,8
   23164:	9080400c 	andi	r2,r18,256
   23168:	1001181e 	bne	r2,zero,235cc <___vfprintf_internal_r+0xe08>
   2316c:	d9402e17 	ldw	r5,184(sp)
   23170:	d8801f17 	ldw	r2,124(sp)
   23174:	44000015 	stw	r16,0(r8)
   23178:	1947883a 	add	r3,r3,r5
   2317c:	10800044 	addi	r2,r2,1
   23180:	41400115 	stw	r5,4(r8)
   23184:	d8c02015 	stw	r3,128(sp)
   23188:	d8801f15 	stw	r2,124(sp)
   2318c:	010001c4 	movi	r4,7
   23190:	2081d316 	blt	r4,r2,238e0 <___vfprintf_internal_r+0x111c>
   23194:	42000204 	addi	r8,r8,8
   23198:	9480010c 	andi	r18,r18,4
   2319c:	90003226 	beq	r18,zero,23268 <___vfprintf_internal_r+0xaa4>
   231a0:	d9403117 	ldw	r5,196(sp)
   231a4:	d8802a17 	ldw	r2,168(sp)
   231a8:	28a1c83a 	sub	r16,r5,r2
   231ac:	04002e0e 	bge	zero,r16,23268 <___vfprintf_internal_r+0xaa4>
   231b0:	04400404 	movi	r17,16
   231b4:	d8801f17 	ldw	r2,124(sp)
   231b8:	8c04a20e 	bge	r17,r16,24444 <___vfprintf_internal_r+0x1c80>
   231bc:	014000f4 	movhi	r5,3
   231c0:	29403484 	addi	r5,r5,210
   231c4:	d9403515 	stw	r5,212(sp)
   231c8:	048001c4 	movi	r18,7
   231cc:	dcc02c17 	ldw	r19,176(sp)
   231d0:	00000306 	br	231e0 <___vfprintf_internal_r+0xa1c>
   231d4:	843ffc04 	addi	r16,r16,-16
   231d8:	42000204 	addi	r8,r8,8
   231dc:	8c00130e 	bge	r17,r16,2322c <___vfprintf_internal_r+0xa68>
   231e0:	010000f4 	movhi	r4,3
   231e4:	18c00404 	addi	r3,r3,16
   231e8:	10800044 	addi	r2,r2,1
   231ec:	21003484 	addi	r4,r4,210
   231f0:	41000015 	stw	r4,0(r8)
   231f4:	44400115 	stw	r17,4(r8)
   231f8:	d8c02015 	stw	r3,128(sp)
   231fc:	d8801f15 	stw	r2,124(sp)
   23200:	90bff40e 	bge	r18,r2,231d4 <__alt_data_end+0xfffe31d4>
   23204:	d9801e04 	addi	r6,sp,120
   23208:	b80b883a 	mov	r5,r23
   2320c:	9809883a 	mov	r4,r19
   23210:	00287b00 	call	287b0 <__sprint_r>
   23214:	103e6d1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23218:	843ffc04 	addi	r16,r16,-16
   2321c:	d8c02017 	ldw	r3,128(sp)
   23220:	d8801f17 	ldw	r2,124(sp)
   23224:	da000404 	addi	r8,sp,16
   23228:	8c3fed16 	blt	r17,r16,231e0 <__alt_data_end+0xfffe31e0>
   2322c:	d9403517 	ldw	r5,212(sp)
   23230:	1c07883a 	add	r3,r3,r16
   23234:	10800044 	addi	r2,r2,1
   23238:	41400015 	stw	r5,0(r8)
   2323c:	44000115 	stw	r16,4(r8)
   23240:	d8c02015 	stw	r3,128(sp)
   23244:	d8801f15 	stw	r2,124(sp)
   23248:	010001c4 	movi	r4,7
   2324c:	2080060e 	bge	r4,r2,23268 <___vfprintf_internal_r+0xaa4>
   23250:	d9002c17 	ldw	r4,176(sp)
   23254:	d9801e04 	addi	r6,sp,120
   23258:	b80b883a 	mov	r5,r23
   2325c:	00287b00 	call	287b0 <__sprint_r>
   23260:	103e5a1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23264:	d8c02017 	ldw	r3,128(sp)
   23268:	d8803117 	ldw	r2,196(sp)
   2326c:	d9002a17 	ldw	r4,168(sp)
   23270:	1100010e 	bge	r2,r4,23278 <___vfprintf_internal_r+0xab4>
   23274:	2005883a 	mov	r2,r4
   23278:	d9402f17 	ldw	r5,188(sp)
   2327c:	288b883a 	add	r5,r5,r2
   23280:	d9402f15 	stw	r5,188(sp)
   23284:	18019e1e 	bne	r3,zero,23900 <___vfprintf_internal_r+0x113c>
   23288:	a8800007 	ldb	r2,0(r21)
   2328c:	d8001f15 	stw	zero,124(sp)
   23290:	da000404 	addi	r8,sp,16
   23294:	103d851e 	bne	r2,zero,228ac <__alt_data_end+0xfffe28ac>
   23298:	a821883a 	mov	r16,r21
   2329c:	003d9b06 	br	2290c <__alt_data_end+0xfffe290c>
   232a0:	18c03fcc 	andi	r3,r3,255
   232a4:	1805c11e 	bne	r3,zero,249ac <___vfprintf_internal_r+0x21e8>
   232a8:	94800414 	ori	r18,r18,16
   232ac:	9080080c 	andi	r2,r18,32
   232b0:	10020c26 	beq	r2,zero,23ae4 <___vfprintf_internal_r+0x1320>
   232b4:	d8802d17 	ldw	r2,180(sp)
   232b8:	d9002917 	ldw	r4,164(sp)
   232bc:	d8002785 	stb	zero,158(sp)
   232c0:	10c00204 	addi	r3,r2,8
   232c4:	14c00017 	ldw	r19,0(r2)
   232c8:	15800117 	ldw	r22,4(r2)
   232cc:	20040f16 	blt	r4,zero,2430c <___vfprintf_internal_r+0x1b48>
   232d0:	013fdfc4 	movi	r4,-129
   232d4:	9d84b03a 	or	r2,r19,r22
   232d8:	d8c02d15 	stw	r3,180(sp)
   232dc:	9124703a 	and	r18,r18,r4
   232e0:	0039883a 	mov	fp,zero
   232e4:	103e891e 	bne	r2,zero,22d0c <__alt_data_end+0xfffe2d0c>
   232e8:	d9002917 	ldw	r4,164(sp)
   232ec:	2002c11e 	bne	r4,zero,23df4 <___vfprintf_internal_r+0x1630>
   232f0:	d8002915 	stw	zero,164(sp)
   232f4:	d8002e15 	stw	zero,184(sp)
   232f8:	dc001e04 	addi	r16,sp,120
   232fc:	003ef806 	br	22ee0 <__alt_data_end+0xfffe2ee0>
   23300:	18c03fcc 	andi	r3,r3,255
   23304:	18059d1e 	bne	r3,zero,2497c <___vfprintf_internal_r+0x21b8>
   23308:	014000f4 	movhi	r5,3
   2330c:	29402404 	addi	r5,r5,144
   23310:	d9403915 	stw	r5,228(sp)
   23314:	9080080c 	andi	r2,r18,32
   23318:	10005226 	beq	r2,zero,23464 <___vfprintf_internal_r+0xca0>
   2331c:	d8802d17 	ldw	r2,180(sp)
   23320:	14c00017 	ldw	r19,0(r2)
   23324:	15800117 	ldw	r22,4(r2)
   23328:	10800204 	addi	r2,r2,8
   2332c:	d8802d15 	stw	r2,180(sp)
   23330:	9080004c 	andi	r2,r18,1
   23334:	10019026 	beq	r2,zero,23978 <___vfprintf_internal_r+0x11b4>
   23338:	9d84b03a 	or	r2,r19,r22
   2333c:	10036926 	beq	r2,zero,240e4 <___vfprintf_internal_r+0x1920>
   23340:	d8c02917 	ldw	r3,164(sp)
   23344:	00800c04 	movi	r2,48
   23348:	d8802705 	stb	r2,156(sp)
   2334c:	dc402745 	stb	r17,157(sp)
   23350:	d8002785 	stb	zero,158(sp)
   23354:	90800094 	ori	r2,r18,2
   23358:	18045d16 	blt	r3,zero,244d0 <___vfprintf_internal_r+0x1d0c>
   2335c:	00bfdfc4 	movi	r2,-129
   23360:	90a4703a 	and	r18,r18,r2
   23364:	94800094 	ori	r18,r18,2
   23368:	0039883a 	mov	fp,zero
   2336c:	d9003917 	ldw	r4,228(sp)
   23370:	dc001e04 	addi	r16,sp,120
   23374:	988003cc 	andi	r2,r19,15
   23378:	b006973a 	slli	r3,r22,28
   2337c:	2085883a 	add	r2,r4,r2
   23380:	9826d13a 	srli	r19,r19,4
   23384:	10800003 	ldbu	r2,0(r2)
   23388:	b02cd13a 	srli	r22,r22,4
   2338c:	843fffc4 	addi	r16,r16,-1
   23390:	1ce6b03a 	or	r19,r3,r19
   23394:	80800005 	stb	r2,0(r16)
   23398:	9d84b03a 	or	r2,r19,r22
   2339c:	103ff51e 	bne	r2,zero,23374 <__alt_data_end+0xfffe3374>
   233a0:	d8c02817 	ldw	r3,160(sp)
   233a4:	1c07c83a 	sub	r3,r3,r16
   233a8:	d8c02e15 	stw	r3,184(sp)
   233ac:	003ecc06 	br	22ee0 <__alt_data_end+0xfffe2ee0>
   233b0:	18c03fcc 	andi	r3,r3,255
   233b4:	183e9f26 	beq	r3,zero,22e34 <__alt_data_end+0xfffe2e34>
   233b8:	d9c02785 	stb	r7,158(sp)
   233bc:	003e9d06 	br	22e34 <__alt_data_end+0xfffe2e34>
   233c0:	00c00044 	movi	r3,1
   233c4:	01c00ac4 	movi	r7,43
   233c8:	ac400007 	ldb	r17,0(r21)
   233cc:	003d5e06 	br	22948 <__alt_data_end+0xfffe2948>
   233d0:	94800814 	ori	r18,r18,32
   233d4:	ac400007 	ldb	r17,0(r21)
   233d8:	003d5b06 	br	22948 <__alt_data_end+0xfffe2948>
   233dc:	d8c02d17 	ldw	r3,180(sp)
   233e0:	d8002785 	stb	zero,158(sp)
   233e4:	1c000017 	ldw	r16,0(r3)
   233e8:	1cc00104 	addi	r19,r3,4
   233ec:	80041926 	beq	r16,zero,24454 <___vfprintf_internal_r+0x1c90>
   233f0:	d9002917 	ldw	r4,164(sp)
   233f4:	2003d016 	blt	r4,zero,24338 <___vfprintf_internal_r+0x1b74>
   233f8:	200d883a 	mov	r6,r4
   233fc:	000b883a 	mov	r5,zero
   23400:	8009883a 	mov	r4,r16
   23404:	da003d15 	stw	r8,244(sp)
   23408:	0026c1c0 	call	26c1c <memchr>
   2340c:	da003d17 	ldw	r8,244(sp)
   23410:	10045426 	beq	r2,zero,24564 <___vfprintf_internal_r+0x1da0>
   23414:	1405c83a 	sub	r2,r2,r16
   23418:	d8802e15 	stw	r2,184(sp)
   2341c:	1003cc16 	blt	r2,zero,24350 <___vfprintf_internal_r+0x1b8c>
   23420:	df002783 	ldbu	fp,158(sp)
   23424:	d8802a15 	stw	r2,168(sp)
   23428:	dcc02d15 	stw	r19,180(sp)
   2342c:	d8002915 	stw	zero,164(sp)
   23430:	d8003215 	stw	zero,200(sp)
   23434:	003eb006 	br	22ef8 <__alt_data_end+0xfffe2ef8>
   23438:	18c03fcc 	andi	r3,r3,255
   2343c:	183f9b26 	beq	r3,zero,232ac <__alt_data_end+0xfffe32ac>
   23440:	d9c02785 	stb	r7,158(sp)
   23444:	003f9906 	br	232ac <__alt_data_end+0xfffe32ac>
   23448:	18c03fcc 	andi	r3,r3,255
   2344c:	1805551e 	bne	r3,zero,249a4 <___vfprintf_internal_r+0x21e0>
   23450:	014000f4 	movhi	r5,3
   23454:	29402904 	addi	r5,r5,164
   23458:	d9403915 	stw	r5,228(sp)
   2345c:	9080080c 	andi	r2,r18,32
   23460:	103fae1e 	bne	r2,zero,2331c <__alt_data_end+0xfffe331c>
   23464:	9080040c 	andi	r2,r18,16
   23468:	1002de26 	beq	r2,zero,23fe4 <___vfprintf_internal_r+0x1820>
   2346c:	d8c02d17 	ldw	r3,180(sp)
   23470:	002d883a 	mov	r22,zero
   23474:	1cc00017 	ldw	r19,0(r3)
   23478:	18c00104 	addi	r3,r3,4
   2347c:	d8c02d15 	stw	r3,180(sp)
   23480:	003fab06 	br	23330 <__alt_data_end+0xfffe3330>
   23484:	38803fcc 	andi	r2,r7,255
   23488:	1080201c 	xori	r2,r2,128
   2348c:	10bfe004 	addi	r2,r2,-128
   23490:	1002d21e 	bne	r2,zero,23fdc <___vfprintf_internal_r+0x1818>
   23494:	00c00044 	movi	r3,1
   23498:	01c00804 	movi	r7,32
   2349c:	ac400007 	ldb	r17,0(r21)
   234a0:	003d2906 	br	22948 <__alt_data_end+0xfffe2948>
   234a4:	94800054 	ori	r18,r18,1
   234a8:	ac400007 	ldb	r17,0(r21)
   234ac:	003d2606 	br	22948 <__alt_data_end+0xfffe2948>
   234b0:	18c03fcc 	andi	r3,r3,255
   234b4:	183e0526 	beq	r3,zero,22ccc <__alt_data_end+0xfffe2ccc>
   234b8:	d9c02785 	stb	r7,158(sp)
   234bc:	003e0306 	br	22ccc <__alt_data_end+0xfffe2ccc>
   234c0:	94801014 	ori	r18,r18,64
   234c4:	ac400007 	ldb	r17,0(r21)
   234c8:	003d1f06 	br	22948 <__alt_data_end+0xfffe2948>
   234cc:	ac400007 	ldb	r17,0(r21)
   234d0:	8a438726 	beq	r17,r9,242f0 <___vfprintf_internal_r+0x1b2c>
   234d4:	94800414 	ori	r18,r18,16
   234d8:	003d1b06 	br	22948 <__alt_data_end+0xfffe2948>
   234dc:	18c03fcc 	andi	r3,r3,255
   234e0:	1805341e 	bne	r3,zero,249b4 <___vfprintf_internal_r+0x21f0>
   234e4:	9080080c 	andi	r2,r18,32
   234e8:	1002cd26 	beq	r2,zero,24020 <___vfprintf_internal_r+0x185c>
   234ec:	d9402d17 	ldw	r5,180(sp)
   234f0:	d9002f17 	ldw	r4,188(sp)
   234f4:	28800017 	ldw	r2,0(r5)
   234f8:	2007d7fa 	srai	r3,r4,31
   234fc:	29400104 	addi	r5,r5,4
   23500:	d9402d15 	stw	r5,180(sp)
   23504:	11000015 	stw	r4,0(r2)
   23508:	10c00115 	stw	r3,4(r2)
   2350c:	003ce506 	br	228a4 <__alt_data_end+0xfffe28a4>
   23510:	d8c02d17 	ldw	r3,180(sp)
   23514:	d9002d17 	ldw	r4,180(sp)
   23518:	d8002785 	stb	zero,158(sp)
   2351c:	18800017 	ldw	r2,0(r3)
   23520:	21000104 	addi	r4,r4,4
   23524:	00c00044 	movi	r3,1
   23528:	d8c02a15 	stw	r3,168(sp)
   2352c:	d8801405 	stb	r2,80(sp)
   23530:	d9002d15 	stw	r4,180(sp)
   23534:	d8c02e15 	stw	r3,184(sp)
   23538:	d8002915 	stw	zero,164(sp)
   2353c:	d8003215 	stw	zero,200(sp)
   23540:	dc001404 	addi	r16,sp,80
   23544:	0039883a 	mov	fp,zero
   23548:	003e7206 	br	22f14 <__alt_data_end+0xfffe2f14>
   2354c:	010000f4 	movhi	r4,3
   23550:	21002904 	addi	r4,r4,164
   23554:	0039883a 	mov	fp,zero
   23558:	d9003915 	stw	r4,228(sp)
   2355c:	04401e04 	movi	r17,120
   23560:	003f8206 	br	2336c <__alt_data_end+0xfffe336c>
   23564:	18c03fcc 	andi	r3,r3,255
   23568:	1805061e 	bne	r3,zero,24984 <___vfprintf_internal_r+0x21c0>
   2356c:	883d9126 	beq	r17,zero,22bb4 <__alt_data_end+0xfffe2bb4>
   23570:	00c00044 	movi	r3,1
   23574:	d8c02a15 	stw	r3,168(sp)
   23578:	dc401405 	stb	r17,80(sp)
   2357c:	d8002785 	stb	zero,158(sp)
   23580:	003fec06 	br	23534 <__alt_data_end+0xfffe3534>
   23584:	014000f4 	movhi	r5,3
   23588:	29402904 	addi	r5,r5,164
   2358c:	d9403915 	stw	r5,228(sp)
   23590:	d8c02d15 	stw	r3,180(sp)
   23594:	1025883a 	mov	r18,r2
   23598:	04401e04 	movi	r17,120
   2359c:	9d84b03a 	or	r2,r19,r22
   235a0:	1000fc1e 	bne	r2,zero,23994 <___vfprintf_internal_r+0x11d0>
   235a4:	0039883a 	mov	fp,zero
   235a8:	00800084 	movi	r2,2
   235ac:	10803fcc 	andi	r2,r2,255
   235b0:	00c00044 	movi	r3,1
   235b4:	10c20f26 	beq	r2,r3,23df4 <___vfprintf_internal_r+0x1630>
   235b8:	00c00084 	movi	r3,2
   235bc:	10fd6326 	beq	r2,r3,22b4c <__alt_data_end+0xfffe2b4c>
   235c0:	003e2d06 	br	22e78 <__alt_data_end+0xfffe2e78>
   235c4:	d8c02017 	ldw	r3,128(sp)
   235c8:	003e9306 	br	23018 <__alt_data_end+0xfffe3018>
   235cc:	00801944 	movi	r2,101
   235d0:	14407e0e 	bge	r2,r17,237cc <___vfprintf_internal_r+0x1008>
   235d4:	d9003617 	ldw	r4,216(sp)
   235d8:	d9403817 	ldw	r5,224(sp)
   235dc:	000d883a 	mov	r6,zero
   235e0:	000f883a 	mov	r7,zero
   235e4:	d8c03c15 	stw	r3,240(sp)
   235e8:	da003d15 	stw	r8,244(sp)
   235ec:	002c1000 	call	2c100 <__eqdf2>
   235f0:	d8c03c17 	ldw	r3,240(sp)
   235f4:	da003d17 	ldw	r8,244(sp)
   235f8:	1000f71e 	bne	r2,zero,239d8 <___vfprintf_internal_r+0x1214>
   235fc:	d8801f17 	ldw	r2,124(sp)
   23600:	010000f4 	movhi	r4,3
   23604:	21003004 	addi	r4,r4,192
   23608:	18c00044 	addi	r3,r3,1
   2360c:	10800044 	addi	r2,r2,1
   23610:	41000015 	stw	r4,0(r8)
   23614:	01000044 	movi	r4,1
   23618:	41000115 	stw	r4,4(r8)
   2361c:	d8c02015 	stw	r3,128(sp)
   23620:	d8801f15 	stw	r2,124(sp)
   23624:	010001c4 	movi	r4,7
   23628:	2082b816 	blt	r4,r2,2410c <___vfprintf_internal_r+0x1948>
   2362c:	42000204 	addi	r8,r8,8
   23630:	d8802617 	ldw	r2,152(sp)
   23634:	d9403317 	ldw	r5,204(sp)
   23638:	11400216 	blt	r2,r5,23644 <___vfprintf_internal_r+0xe80>
   2363c:	9080004c 	andi	r2,r18,1
   23640:	103ed526 	beq	r2,zero,23198 <__alt_data_end+0xfffe3198>
   23644:	d8803717 	ldw	r2,220(sp)
   23648:	d9003417 	ldw	r4,208(sp)
   2364c:	d9403717 	ldw	r5,220(sp)
   23650:	1887883a 	add	r3,r3,r2
   23654:	d8801f17 	ldw	r2,124(sp)
   23658:	41000015 	stw	r4,0(r8)
   2365c:	41400115 	stw	r5,4(r8)
   23660:	10800044 	addi	r2,r2,1
   23664:	d8c02015 	stw	r3,128(sp)
   23668:	d8801f15 	stw	r2,124(sp)
   2366c:	010001c4 	movi	r4,7
   23670:	20832916 	blt	r4,r2,24318 <___vfprintf_internal_r+0x1b54>
   23674:	42000204 	addi	r8,r8,8
   23678:	d8803317 	ldw	r2,204(sp)
   2367c:	143fffc4 	addi	r16,r2,-1
   23680:	043ec50e 	bge	zero,r16,23198 <__alt_data_end+0xfffe3198>
   23684:	04400404 	movi	r17,16
   23688:	d8801f17 	ldw	r2,124(sp)
   2368c:	8c00880e 	bge	r17,r16,238b0 <___vfprintf_internal_r+0x10ec>
   23690:	014000f4 	movhi	r5,3
   23694:	29403084 	addi	r5,r5,194
   23698:	d9402b15 	stw	r5,172(sp)
   2369c:	058001c4 	movi	r22,7
   236a0:	dcc02c17 	ldw	r19,176(sp)
   236a4:	00000306 	br	236b4 <___vfprintf_internal_r+0xef0>
   236a8:	42000204 	addi	r8,r8,8
   236ac:	843ffc04 	addi	r16,r16,-16
   236b0:	8c00820e 	bge	r17,r16,238bc <___vfprintf_internal_r+0x10f8>
   236b4:	18c00404 	addi	r3,r3,16
   236b8:	10800044 	addi	r2,r2,1
   236bc:	45000015 	stw	r20,0(r8)
   236c0:	44400115 	stw	r17,4(r8)
   236c4:	d8c02015 	stw	r3,128(sp)
   236c8:	d8801f15 	stw	r2,124(sp)
   236cc:	b0bff60e 	bge	r22,r2,236a8 <__alt_data_end+0xfffe36a8>
   236d0:	d9801e04 	addi	r6,sp,120
   236d4:	b80b883a 	mov	r5,r23
   236d8:	9809883a 	mov	r4,r19
   236dc:	00287b00 	call	287b0 <__sprint_r>
   236e0:	103d3a1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   236e4:	d8c02017 	ldw	r3,128(sp)
   236e8:	d8801f17 	ldw	r2,124(sp)
   236ec:	da000404 	addi	r8,sp,16
   236f0:	003fee06 	br	236ac <__alt_data_end+0xfffe36ac>
   236f4:	d9403117 	ldw	r5,196(sp)
   236f8:	d8802a17 	ldw	r2,168(sp)
   236fc:	28adc83a 	sub	r22,r5,r2
   23700:	05be630e 	bge	zero,r22,23090 <__alt_data_end+0xfffe3090>
   23704:	07000404 	movi	fp,16
   23708:	d8801f17 	ldw	r2,124(sp)
   2370c:	e5838f0e 	bge	fp,r22,2454c <___vfprintf_internal_r+0x1d88>
   23710:	014000f4 	movhi	r5,3
   23714:	29403084 	addi	r5,r5,194
   23718:	dc403015 	stw	r17,192(sp)
   2371c:	d9402b15 	stw	r5,172(sp)
   23720:	b023883a 	mov	r17,r22
   23724:	04c001c4 	movi	r19,7
   23728:	a82d883a 	mov	r22,r21
   2372c:	902b883a 	mov	r21,r18
   23730:	8025883a 	mov	r18,r16
   23734:	dc002c17 	ldw	r16,176(sp)
   23738:	00000306 	br	23748 <___vfprintf_internal_r+0xf84>
   2373c:	8c7ffc04 	addi	r17,r17,-16
   23740:	42000204 	addi	r8,r8,8
   23744:	e440110e 	bge	fp,r17,2378c <___vfprintf_internal_r+0xfc8>
   23748:	18c00404 	addi	r3,r3,16
   2374c:	10800044 	addi	r2,r2,1
   23750:	45000015 	stw	r20,0(r8)
   23754:	47000115 	stw	fp,4(r8)
   23758:	d8c02015 	stw	r3,128(sp)
   2375c:	d8801f15 	stw	r2,124(sp)
   23760:	98bff60e 	bge	r19,r2,2373c <__alt_data_end+0xfffe373c>
   23764:	d9801e04 	addi	r6,sp,120
   23768:	b80b883a 	mov	r5,r23
   2376c:	8009883a 	mov	r4,r16
   23770:	00287b00 	call	287b0 <__sprint_r>
   23774:	103d151e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23778:	8c7ffc04 	addi	r17,r17,-16
   2377c:	d8c02017 	ldw	r3,128(sp)
   23780:	d8801f17 	ldw	r2,124(sp)
   23784:	da000404 	addi	r8,sp,16
   23788:	e47fef16 	blt	fp,r17,23748 <__alt_data_end+0xfffe3748>
   2378c:	9021883a 	mov	r16,r18
   23790:	a825883a 	mov	r18,r21
   23794:	b02b883a 	mov	r21,r22
   23798:	882d883a 	mov	r22,r17
   2379c:	dc403017 	ldw	r17,192(sp)
   237a0:	d9002b17 	ldw	r4,172(sp)
   237a4:	1d87883a 	add	r3,r3,r22
   237a8:	10800044 	addi	r2,r2,1
   237ac:	41000015 	stw	r4,0(r8)
   237b0:	45800115 	stw	r22,4(r8)
   237b4:	d8c02015 	stw	r3,128(sp)
   237b8:	d8801f15 	stw	r2,124(sp)
   237bc:	010001c4 	movi	r4,7
   237c0:	20818e16 	blt	r4,r2,23dfc <___vfprintf_internal_r+0x1638>
   237c4:	42000204 	addi	r8,r8,8
   237c8:	003e3106 	br	23090 <__alt_data_end+0xfffe3090>
   237cc:	d9403317 	ldw	r5,204(sp)
   237d0:	00800044 	movi	r2,1
   237d4:	18c00044 	addi	r3,r3,1
   237d8:	1141530e 	bge	r2,r5,23d28 <___vfprintf_internal_r+0x1564>
   237dc:	dc401f17 	ldw	r17,124(sp)
   237e0:	00800044 	movi	r2,1
   237e4:	40800115 	stw	r2,4(r8)
   237e8:	8c400044 	addi	r17,r17,1
   237ec:	44000015 	stw	r16,0(r8)
   237f0:	d8c02015 	stw	r3,128(sp)
   237f4:	dc401f15 	stw	r17,124(sp)
   237f8:	008001c4 	movi	r2,7
   237fc:	14416b16 	blt	r2,r17,23dac <___vfprintf_internal_r+0x15e8>
   23800:	42000204 	addi	r8,r8,8
   23804:	d8803717 	ldw	r2,220(sp)
   23808:	d9003417 	ldw	r4,208(sp)
   2380c:	8c400044 	addi	r17,r17,1
   23810:	10c7883a 	add	r3,r2,r3
   23814:	40800115 	stw	r2,4(r8)
   23818:	41000015 	stw	r4,0(r8)
   2381c:	d8c02015 	stw	r3,128(sp)
   23820:	dc401f15 	stw	r17,124(sp)
   23824:	008001c4 	movi	r2,7
   23828:	14416916 	blt	r2,r17,23dd0 <___vfprintf_internal_r+0x160c>
   2382c:	45800204 	addi	r22,r8,8
   23830:	d9003617 	ldw	r4,216(sp)
   23834:	d9403817 	ldw	r5,224(sp)
   23838:	000d883a 	mov	r6,zero
   2383c:	000f883a 	mov	r7,zero
   23840:	d8c03c15 	stw	r3,240(sp)
   23844:	002c1000 	call	2c100 <__eqdf2>
   23848:	d8c03c17 	ldw	r3,240(sp)
   2384c:	1000bc26 	beq	r2,zero,23b40 <___vfprintf_internal_r+0x137c>
   23850:	d9403317 	ldw	r5,204(sp)
   23854:	84000044 	addi	r16,r16,1
   23858:	8c400044 	addi	r17,r17,1
   2385c:	28bfffc4 	addi	r2,r5,-1
   23860:	1887883a 	add	r3,r3,r2
   23864:	b0800115 	stw	r2,4(r22)
   23868:	b4000015 	stw	r16,0(r22)
   2386c:	d8c02015 	stw	r3,128(sp)
   23870:	dc401f15 	stw	r17,124(sp)
   23874:	008001c4 	movi	r2,7
   23878:	14414316 	blt	r2,r17,23d88 <___vfprintf_internal_r+0x15c4>
   2387c:	b5800204 	addi	r22,r22,8
   23880:	d9003a17 	ldw	r4,232(sp)
   23884:	df0022c4 	addi	fp,sp,139
   23888:	8c400044 	addi	r17,r17,1
   2388c:	20c7883a 	add	r3,r4,r3
   23890:	b7000015 	stw	fp,0(r22)
   23894:	b1000115 	stw	r4,4(r22)
   23898:	d8c02015 	stw	r3,128(sp)
   2389c:	dc401f15 	stw	r17,124(sp)
   238a0:	008001c4 	movi	r2,7
   238a4:	14400e16 	blt	r2,r17,238e0 <___vfprintf_internal_r+0x111c>
   238a8:	b2000204 	addi	r8,r22,8
   238ac:	003e3a06 	br	23198 <__alt_data_end+0xfffe3198>
   238b0:	010000f4 	movhi	r4,3
   238b4:	21003084 	addi	r4,r4,194
   238b8:	d9002b15 	stw	r4,172(sp)
   238bc:	d9002b17 	ldw	r4,172(sp)
   238c0:	1c07883a 	add	r3,r3,r16
   238c4:	44000115 	stw	r16,4(r8)
   238c8:	41000015 	stw	r4,0(r8)
   238cc:	10800044 	addi	r2,r2,1
   238d0:	d8c02015 	stw	r3,128(sp)
   238d4:	d8801f15 	stw	r2,124(sp)
   238d8:	010001c4 	movi	r4,7
   238dc:	20be2d0e 	bge	r4,r2,23194 <__alt_data_end+0xfffe3194>
   238e0:	d9002c17 	ldw	r4,176(sp)
   238e4:	d9801e04 	addi	r6,sp,120
   238e8:	b80b883a 	mov	r5,r23
   238ec:	00287b00 	call	287b0 <__sprint_r>
   238f0:	103cb61e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   238f4:	d8c02017 	ldw	r3,128(sp)
   238f8:	da000404 	addi	r8,sp,16
   238fc:	003e2606 	br	23198 <__alt_data_end+0xfffe3198>
   23900:	d9002c17 	ldw	r4,176(sp)
   23904:	d9801e04 	addi	r6,sp,120
   23908:	b80b883a 	mov	r5,r23
   2390c:	00287b00 	call	287b0 <__sprint_r>
   23910:	103e5d26 	beq	r2,zero,23288 <__alt_data_end+0xfffe3288>
   23914:	003cad06 	br	22bcc <__alt_data_end+0xfffe2bcc>
   23918:	d9002c17 	ldw	r4,176(sp)
   2391c:	d9801e04 	addi	r6,sp,120
   23920:	b80b883a 	mov	r5,r23
   23924:	00287b00 	call	287b0 <__sprint_r>
   23928:	103ca81e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   2392c:	d8c02017 	ldw	r3,128(sp)
   23930:	da000404 	addi	r8,sp,16
   23934:	003e0b06 	br	23164 <__alt_data_end+0xfffe3164>
   23938:	d9002c17 	ldw	r4,176(sp)
   2393c:	d9801e04 	addi	r6,sp,120
   23940:	b80b883a 	mov	r5,r23
   23944:	00287b00 	call	287b0 <__sprint_r>
   23948:	103ca01e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   2394c:	d8c02017 	ldw	r3,128(sp)
   23950:	da000404 	addi	r8,sp,16
   23954:	003dbd06 	br	2304c <__alt_data_end+0xfffe304c>
   23958:	d9002c17 	ldw	r4,176(sp)
   2395c:	d9801e04 	addi	r6,sp,120
   23960:	b80b883a 	mov	r5,r23
   23964:	00287b00 	call	287b0 <__sprint_r>
   23968:	103c981e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   2396c:	d8c02017 	ldw	r3,128(sp)
   23970:	da000404 	addi	r8,sp,16
   23974:	003dc306 	br	23084 <__alt_data_end+0xfffe3084>
   23978:	d8802917 	ldw	r2,164(sp)
   2397c:	d8002785 	stb	zero,158(sp)
   23980:	103f0616 	blt	r2,zero,2359c <__alt_data_end+0xfffe359c>
   23984:	00ffdfc4 	movi	r3,-129
   23988:	9d84b03a 	or	r2,r19,r22
   2398c:	90e4703a 	and	r18,r18,r3
   23990:	103c6b26 	beq	r2,zero,22b40 <__alt_data_end+0xfffe2b40>
   23994:	0039883a 	mov	fp,zero
   23998:	003e7406 	br	2336c <__alt_data_end+0xfffe336c>
   2399c:	9080040c 	andi	r2,r18,16
   239a0:	1001b326 	beq	r2,zero,24070 <___vfprintf_internal_r+0x18ac>
   239a4:	d9002d17 	ldw	r4,180(sp)
   239a8:	d9402917 	ldw	r5,164(sp)
   239ac:	d8002785 	stb	zero,158(sp)
   239b0:	20800104 	addi	r2,r4,4
   239b4:	24c00017 	ldw	r19,0(r4)
   239b8:	002d883a 	mov	r22,zero
   239bc:	2801b516 	blt	r5,zero,24094 <___vfprintf_internal_r+0x18d0>
   239c0:	00ffdfc4 	movi	r3,-129
   239c4:	d8802d15 	stw	r2,180(sp)
   239c8:	90e4703a 	and	r18,r18,r3
   239cc:	983d2726 	beq	r19,zero,22e6c <__alt_data_end+0xfffe2e6c>
   239d0:	0039883a 	mov	fp,zero
   239d4:	003d2a06 	br	22e80 <__alt_data_end+0xfffe2e80>
   239d8:	dc402617 	ldw	r17,152(sp)
   239dc:	0441d30e 	bge	zero,r17,2412c <___vfprintf_internal_r+0x1968>
   239e0:	dc403217 	ldw	r17,200(sp)
   239e4:	d8803317 	ldw	r2,204(sp)
   239e8:	1440010e 	bge	r2,r17,239f0 <___vfprintf_internal_r+0x122c>
   239ec:	1023883a 	mov	r17,r2
   239f0:	04400a0e 	bge	zero,r17,23a1c <___vfprintf_internal_r+0x1258>
   239f4:	d8801f17 	ldw	r2,124(sp)
   239f8:	1c47883a 	add	r3,r3,r17
   239fc:	44000015 	stw	r16,0(r8)
   23a00:	10800044 	addi	r2,r2,1
   23a04:	44400115 	stw	r17,4(r8)
   23a08:	d8c02015 	stw	r3,128(sp)
   23a0c:	d8801f15 	stw	r2,124(sp)
   23a10:	010001c4 	movi	r4,7
   23a14:	20826516 	blt	r4,r2,243ac <___vfprintf_internal_r+0x1be8>
   23a18:	42000204 	addi	r8,r8,8
   23a1c:	88026116 	blt	r17,zero,243a4 <___vfprintf_internal_r+0x1be0>
   23a20:	d9003217 	ldw	r4,200(sp)
   23a24:	2463c83a 	sub	r17,r4,r17
   23a28:	04407b0e 	bge	zero,r17,23c18 <___vfprintf_internal_r+0x1454>
   23a2c:	05800404 	movi	r22,16
   23a30:	d8801f17 	ldw	r2,124(sp)
   23a34:	b4419d0e 	bge	r22,r17,240ac <___vfprintf_internal_r+0x18e8>
   23a38:	010000f4 	movhi	r4,3
   23a3c:	21003084 	addi	r4,r4,194
   23a40:	d9002b15 	stw	r4,172(sp)
   23a44:	070001c4 	movi	fp,7
   23a48:	dcc02c17 	ldw	r19,176(sp)
   23a4c:	00000306 	br	23a5c <___vfprintf_internal_r+0x1298>
   23a50:	42000204 	addi	r8,r8,8
   23a54:	8c7ffc04 	addi	r17,r17,-16
   23a58:	b441970e 	bge	r22,r17,240b8 <___vfprintf_internal_r+0x18f4>
   23a5c:	18c00404 	addi	r3,r3,16
   23a60:	10800044 	addi	r2,r2,1
   23a64:	45000015 	stw	r20,0(r8)
   23a68:	45800115 	stw	r22,4(r8)
   23a6c:	d8c02015 	stw	r3,128(sp)
   23a70:	d8801f15 	stw	r2,124(sp)
   23a74:	e0bff60e 	bge	fp,r2,23a50 <__alt_data_end+0xfffe3a50>
   23a78:	d9801e04 	addi	r6,sp,120
   23a7c:	b80b883a 	mov	r5,r23
   23a80:	9809883a 	mov	r4,r19
   23a84:	00287b00 	call	287b0 <__sprint_r>
   23a88:	103c501e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23a8c:	d8c02017 	ldw	r3,128(sp)
   23a90:	d8801f17 	ldw	r2,124(sp)
   23a94:	da000404 	addi	r8,sp,16
   23a98:	003fee06 	br	23a54 <__alt_data_end+0xfffe3a54>
   23a9c:	d9002c17 	ldw	r4,176(sp)
   23aa0:	d9801e04 	addi	r6,sp,120
   23aa4:	b80b883a 	mov	r5,r23
   23aa8:	00287b00 	call	287b0 <__sprint_r>
   23aac:	103c471e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23ab0:	d8c02017 	ldw	r3,128(sp)
   23ab4:	df002787 	ldb	fp,158(sp)
   23ab8:	da000404 	addi	r8,sp,16
   23abc:	003d5606 	br	23018 <__alt_data_end+0xfffe3018>
   23ac0:	9080040c 	andi	r2,r18,16
   23ac4:	10016126 	beq	r2,zero,2404c <___vfprintf_internal_r+0x1888>
   23ac8:	d8802d17 	ldw	r2,180(sp)
   23acc:	14c00017 	ldw	r19,0(r2)
   23ad0:	10800104 	addi	r2,r2,4
   23ad4:	d8802d15 	stw	r2,180(sp)
   23ad8:	982dd7fa 	srai	r22,r19,31
   23adc:	b005883a 	mov	r2,r22
   23ae0:	003c8206 	br	22cec <__alt_data_end+0xfffe2cec>
   23ae4:	9080040c 	andi	r2,r18,16
   23ae8:	10003526 	beq	r2,zero,23bc0 <___vfprintf_internal_r+0x13fc>
   23aec:	d9402d17 	ldw	r5,180(sp)
   23af0:	d8c02917 	ldw	r3,164(sp)
   23af4:	d8002785 	stb	zero,158(sp)
   23af8:	28800104 	addi	r2,r5,4
   23afc:	2cc00017 	ldw	r19,0(r5)
   23b00:	002d883a 	mov	r22,zero
   23b04:	18003716 	blt	r3,zero,23be4 <___vfprintf_internal_r+0x1420>
   23b08:	00ffdfc4 	movi	r3,-129
   23b0c:	d8802d15 	stw	r2,180(sp)
   23b10:	90e4703a 	and	r18,r18,r3
   23b14:	0039883a 	mov	fp,zero
   23b18:	983df326 	beq	r19,zero,232e8 <__alt_data_end+0xfffe32e8>
   23b1c:	00800244 	movi	r2,9
   23b20:	14fc7b36 	bltu	r2,r19,22d10 <__alt_data_end+0xfffe2d10>
   23b24:	d8c02817 	ldw	r3,160(sp)
   23b28:	dc001dc4 	addi	r16,sp,119
   23b2c:	9cc00c04 	addi	r19,r19,48
   23b30:	1c07c83a 	sub	r3,r3,r16
   23b34:	dcc01dc5 	stb	r19,119(sp)
   23b38:	d8c02e15 	stw	r3,184(sp)
   23b3c:	003ce806 	br	22ee0 <__alt_data_end+0xfffe2ee0>
   23b40:	d8803317 	ldw	r2,204(sp)
   23b44:	143fffc4 	addi	r16,r2,-1
   23b48:	043f4d0e 	bge	zero,r16,23880 <__alt_data_end+0xfffe3880>
   23b4c:	07000404 	movi	fp,16
   23b50:	e400810e 	bge	fp,r16,23d58 <___vfprintf_internal_r+0x1594>
   23b54:	014000f4 	movhi	r5,3
   23b58:	29403084 	addi	r5,r5,194
   23b5c:	d9402b15 	stw	r5,172(sp)
   23b60:	01c001c4 	movi	r7,7
   23b64:	dcc02c17 	ldw	r19,176(sp)
   23b68:	00000306 	br	23b78 <___vfprintf_internal_r+0x13b4>
   23b6c:	b5800204 	addi	r22,r22,8
   23b70:	843ffc04 	addi	r16,r16,-16
   23b74:	e4007b0e 	bge	fp,r16,23d64 <___vfprintf_internal_r+0x15a0>
   23b78:	18c00404 	addi	r3,r3,16
   23b7c:	8c400044 	addi	r17,r17,1
   23b80:	b5000015 	stw	r20,0(r22)
   23b84:	b7000115 	stw	fp,4(r22)
   23b88:	d8c02015 	stw	r3,128(sp)
   23b8c:	dc401f15 	stw	r17,124(sp)
   23b90:	3c7ff60e 	bge	r7,r17,23b6c <__alt_data_end+0xfffe3b6c>
   23b94:	d9801e04 	addi	r6,sp,120
   23b98:	b80b883a 	mov	r5,r23
   23b9c:	9809883a 	mov	r4,r19
   23ba0:	d9c03c15 	stw	r7,240(sp)
   23ba4:	00287b00 	call	287b0 <__sprint_r>
   23ba8:	d9c03c17 	ldw	r7,240(sp)
   23bac:	103c071e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23bb0:	d8c02017 	ldw	r3,128(sp)
   23bb4:	dc401f17 	ldw	r17,124(sp)
   23bb8:	dd800404 	addi	r22,sp,16
   23bbc:	003fec06 	br	23b70 <__alt_data_end+0xfffe3b70>
   23bc0:	9080100c 	andi	r2,r18,64
   23bc4:	d8002785 	stb	zero,158(sp)
   23bc8:	10010e26 	beq	r2,zero,24004 <___vfprintf_internal_r+0x1840>
   23bcc:	d9002d17 	ldw	r4,180(sp)
   23bd0:	d9402917 	ldw	r5,164(sp)
   23bd4:	002d883a 	mov	r22,zero
   23bd8:	20800104 	addi	r2,r4,4
   23bdc:	24c0000b 	ldhu	r19,0(r4)
   23be0:	283fc90e 	bge	r5,zero,23b08 <__alt_data_end+0xfffe3b08>
   23be4:	d8802d15 	stw	r2,180(sp)
   23be8:	0039883a 	mov	fp,zero
   23bec:	9d84b03a 	or	r2,r19,r22
   23bf0:	103c461e 	bne	r2,zero,22d0c <__alt_data_end+0xfffe2d0c>
   23bf4:	00800044 	movi	r2,1
   23bf8:	003e6c06 	br	235ac <__alt_data_end+0xfffe35ac>
   23bfc:	d9002c17 	ldw	r4,176(sp)
   23c00:	d9801e04 	addi	r6,sp,120
   23c04:	b80b883a 	mov	r5,r23
   23c08:	00287b00 	call	287b0 <__sprint_r>
   23c0c:	103bef1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23c10:	d8c02017 	ldw	r3,128(sp)
   23c14:	da000404 	addi	r8,sp,16
   23c18:	d9003217 	ldw	r4,200(sp)
   23c1c:	d8802617 	ldw	r2,152(sp)
   23c20:	d9403317 	ldw	r5,204(sp)
   23c24:	8123883a 	add	r17,r16,r4
   23c28:	11400216 	blt	r2,r5,23c34 <___vfprintf_internal_r+0x1470>
   23c2c:	9100004c 	andi	r4,r18,1
   23c30:	20000d26 	beq	r4,zero,23c68 <___vfprintf_internal_r+0x14a4>
   23c34:	d9003717 	ldw	r4,220(sp)
   23c38:	d9403417 	ldw	r5,208(sp)
   23c3c:	1907883a 	add	r3,r3,r4
   23c40:	d9001f17 	ldw	r4,124(sp)
   23c44:	41400015 	stw	r5,0(r8)
   23c48:	d9403717 	ldw	r5,220(sp)
   23c4c:	21000044 	addi	r4,r4,1
   23c50:	d8c02015 	stw	r3,128(sp)
   23c54:	41400115 	stw	r5,4(r8)
   23c58:	d9001f15 	stw	r4,124(sp)
   23c5c:	014001c4 	movi	r5,7
   23c60:	2901e816 	blt	r5,r4,24404 <___vfprintf_internal_r+0x1c40>
   23c64:	42000204 	addi	r8,r8,8
   23c68:	d9003317 	ldw	r4,204(sp)
   23c6c:	8121883a 	add	r16,r16,r4
   23c70:	2085c83a 	sub	r2,r4,r2
   23c74:	8461c83a 	sub	r16,r16,r17
   23c78:	1400010e 	bge	r2,r16,23c80 <___vfprintf_internal_r+0x14bc>
   23c7c:	1021883a 	mov	r16,r2
   23c80:	04000a0e 	bge	zero,r16,23cac <___vfprintf_internal_r+0x14e8>
   23c84:	d9001f17 	ldw	r4,124(sp)
   23c88:	1c07883a 	add	r3,r3,r16
   23c8c:	44400015 	stw	r17,0(r8)
   23c90:	21000044 	addi	r4,r4,1
   23c94:	44000115 	stw	r16,4(r8)
   23c98:	d8c02015 	stw	r3,128(sp)
   23c9c:	d9001f15 	stw	r4,124(sp)
   23ca0:	014001c4 	movi	r5,7
   23ca4:	2901fb16 	blt	r5,r4,24494 <___vfprintf_internal_r+0x1cd0>
   23ca8:	42000204 	addi	r8,r8,8
   23cac:	8001f716 	blt	r16,zero,2448c <___vfprintf_internal_r+0x1cc8>
   23cb0:	1421c83a 	sub	r16,r2,r16
   23cb4:	043d380e 	bge	zero,r16,23198 <__alt_data_end+0xfffe3198>
   23cb8:	04400404 	movi	r17,16
   23cbc:	d8801f17 	ldw	r2,124(sp)
   23cc0:	8c3efb0e 	bge	r17,r16,238b0 <__alt_data_end+0xfffe38b0>
   23cc4:	014000f4 	movhi	r5,3
   23cc8:	29403084 	addi	r5,r5,194
   23ccc:	d9402b15 	stw	r5,172(sp)
   23cd0:	058001c4 	movi	r22,7
   23cd4:	dcc02c17 	ldw	r19,176(sp)
   23cd8:	00000306 	br	23ce8 <___vfprintf_internal_r+0x1524>
   23cdc:	42000204 	addi	r8,r8,8
   23ce0:	843ffc04 	addi	r16,r16,-16
   23ce4:	8c3ef50e 	bge	r17,r16,238bc <__alt_data_end+0xfffe38bc>
   23ce8:	18c00404 	addi	r3,r3,16
   23cec:	10800044 	addi	r2,r2,1
   23cf0:	45000015 	stw	r20,0(r8)
   23cf4:	44400115 	stw	r17,4(r8)
   23cf8:	d8c02015 	stw	r3,128(sp)
   23cfc:	d8801f15 	stw	r2,124(sp)
   23d00:	b0bff60e 	bge	r22,r2,23cdc <__alt_data_end+0xfffe3cdc>
   23d04:	d9801e04 	addi	r6,sp,120
   23d08:	b80b883a 	mov	r5,r23
   23d0c:	9809883a 	mov	r4,r19
   23d10:	00287b00 	call	287b0 <__sprint_r>
   23d14:	103bad1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23d18:	d8c02017 	ldw	r3,128(sp)
   23d1c:	d8801f17 	ldw	r2,124(sp)
   23d20:	da000404 	addi	r8,sp,16
   23d24:	003fee06 	br	23ce0 <__alt_data_end+0xfffe3ce0>
   23d28:	9088703a 	and	r4,r18,r2
   23d2c:	203eab1e 	bne	r4,zero,237dc <__alt_data_end+0xfffe37dc>
   23d30:	dc401f17 	ldw	r17,124(sp)
   23d34:	40800115 	stw	r2,4(r8)
   23d38:	44000015 	stw	r16,0(r8)
   23d3c:	8c400044 	addi	r17,r17,1
   23d40:	d8c02015 	stw	r3,128(sp)
   23d44:	dc401f15 	stw	r17,124(sp)
   23d48:	008001c4 	movi	r2,7
   23d4c:	14400e16 	blt	r2,r17,23d88 <___vfprintf_internal_r+0x15c4>
   23d50:	45800204 	addi	r22,r8,8
   23d54:	003eca06 	br	23880 <__alt_data_end+0xfffe3880>
   23d58:	010000f4 	movhi	r4,3
   23d5c:	21003084 	addi	r4,r4,194
   23d60:	d9002b15 	stw	r4,172(sp)
   23d64:	d8802b17 	ldw	r2,172(sp)
   23d68:	1c07883a 	add	r3,r3,r16
   23d6c:	8c400044 	addi	r17,r17,1
   23d70:	b0800015 	stw	r2,0(r22)
   23d74:	b4000115 	stw	r16,4(r22)
   23d78:	d8c02015 	stw	r3,128(sp)
   23d7c:	dc401f15 	stw	r17,124(sp)
   23d80:	008001c4 	movi	r2,7
   23d84:	147ebd0e 	bge	r2,r17,2387c <__alt_data_end+0xfffe387c>
   23d88:	d9002c17 	ldw	r4,176(sp)
   23d8c:	d9801e04 	addi	r6,sp,120
   23d90:	b80b883a 	mov	r5,r23
   23d94:	00287b00 	call	287b0 <__sprint_r>
   23d98:	103b8c1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23d9c:	d8c02017 	ldw	r3,128(sp)
   23da0:	dc401f17 	ldw	r17,124(sp)
   23da4:	dd800404 	addi	r22,sp,16
   23da8:	003eb506 	br	23880 <__alt_data_end+0xfffe3880>
   23dac:	d9002c17 	ldw	r4,176(sp)
   23db0:	d9801e04 	addi	r6,sp,120
   23db4:	b80b883a 	mov	r5,r23
   23db8:	00287b00 	call	287b0 <__sprint_r>
   23dbc:	103b831e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23dc0:	d8c02017 	ldw	r3,128(sp)
   23dc4:	dc401f17 	ldw	r17,124(sp)
   23dc8:	da000404 	addi	r8,sp,16
   23dcc:	003e8d06 	br	23804 <__alt_data_end+0xfffe3804>
   23dd0:	d9002c17 	ldw	r4,176(sp)
   23dd4:	d9801e04 	addi	r6,sp,120
   23dd8:	b80b883a 	mov	r5,r23
   23ddc:	00287b00 	call	287b0 <__sprint_r>
   23de0:	103b7a1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23de4:	d8c02017 	ldw	r3,128(sp)
   23de8:	dc401f17 	ldw	r17,124(sp)
   23dec:	dd800404 	addi	r22,sp,16
   23df0:	003e8f06 	br	23830 <__alt_data_end+0xfffe3830>
   23df4:	0027883a 	mov	r19,zero
   23df8:	003f4a06 	br	23b24 <__alt_data_end+0xfffe3b24>
   23dfc:	d9002c17 	ldw	r4,176(sp)
   23e00:	d9801e04 	addi	r6,sp,120
   23e04:	b80b883a 	mov	r5,r23
   23e08:	00287b00 	call	287b0 <__sprint_r>
   23e0c:	103b6f1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   23e10:	d8c02017 	ldw	r3,128(sp)
   23e14:	da000404 	addi	r8,sp,16
   23e18:	003c9d06 	br	23090 <__alt_data_end+0xfffe3090>
   23e1c:	04e7c83a 	sub	r19,zero,r19
   23e20:	9804c03a 	cmpne	r2,r19,zero
   23e24:	05adc83a 	sub	r22,zero,r22
   23e28:	b0adc83a 	sub	r22,r22,r2
   23e2c:	d8802917 	ldw	r2,164(sp)
   23e30:	07000b44 	movi	fp,45
   23e34:	df002785 	stb	fp,158(sp)
   23e38:	10017b16 	blt	r2,zero,24428 <___vfprintf_internal_r+0x1c64>
   23e3c:	00bfdfc4 	movi	r2,-129
   23e40:	90a4703a 	and	r18,r18,r2
   23e44:	003bb106 	br	22d0c <__alt_data_end+0xfffe2d0c>
   23e48:	d9003617 	ldw	r4,216(sp)
   23e4c:	d9403817 	ldw	r5,224(sp)
   23e50:	da003d15 	stw	r8,244(sp)
   23e54:	00285640 	call	28564 <__fpclassifyd>
   23e58:	da003d17 	ldw	r8,244(sp)
   23e5c:	1000f026 	beq	r2,zero,24220 <___vfprintf_internal_r+0x1a5c>
   23e60:	d9002917 	ldw	r4,164(sp)
   23e64:	05bff7c4 	movi	r22,-33
   23e68:	00bfffc4 	movi	r2,-1
   23e6c:	8dac703a 	and	r22,r17,r22
   23e70:	20820026 	beq	r4,r2,24674 <___vfprintf_internal_r+0x1eb0>
   23e74:	008011c4 	movi	r2,71
   23e78:	b081f726 	beq	r22,r2,24658 <___vfprintf_internal_r+0x1e94>
   23e7c:	d9003817 	ldw	r4,224(sp)
   23e80:	90c04014 	ori	r3,r18,256
   23e84:	d8c02b15 	stw	r3,172(sp)
   23e88:	20021516 	blt	r4,zero,246e0 <___vfprintf_internal_r+0x1f1c>
   23e8c:	dcc03817 	ldw	r19,224(sp)
   23e90:	d8002a05 	stb	zero,168(sp)
   23e94:	00801984 	movi	r2,102
   23e98:	8881f926 	beq	r17,r2,24680 <___vfprintf_internal_r+0x1ebc>
   23e9c:	00801184 	movi	r2,70
   23ea0:	88821c26 	beq	r17,r2,24714 <___vfprintf_internal_r+0x1f50>
   23ea4:	00801144 	movi	r2,69
   23ea8:	b081ef26 	beq	r22,r2,24668 <___vfprintf_internal_r+0x1ea4>
   23eac:	d8c02917 	ldw	r3,164(sp)
   23eb0:	d8802104 	addi	r2,sp,132
   23eb4:	d8800315 	stw	r2,12(sp)
   23eb8:	d9403617 	ldw	r5,216(sp)
   23ebc:	d8802504 	addi	r2,sp,148
   23ec0:	d9002c17 	ldw	r4,176(sp)
   23ec4:	d8800215 	stw	r2,8(sp)
   23ec8:	d8802604 	addi	r2,sp,152
   23ecc:	d8c00015 	stw	r3,0(sp)
   23ed0:	d8800115 	stw	r2,4(sp)
   23ed4:	01c00084 	movi	r7,2
   23ed8:	980d883a 	mov	r6,r19
   23edc:	d8c03c15 	stw	r3,240(sp)
   23ee0:	da003d15 	stw	r8,244(sp)
   23ee4:	0024e9c0 	call	24e9c <_dtoa_r>
   23ee8:	1021883a 	mov	r16,r2
   23eec:	008019c4 	movi	r2,103
   23ef0:	d8c03c17 	ldw	r3,240(sp)
   23ef4:	da003d17 	ldw	r8,244(sp)
   23ef8:	88817126 	beq	r17,r2,244c0 <___vfprintf_internal_r+0x1cfc>
   23efc:	008011c4 	movi	r2,71
   23f00:	88829226 	beq	r17,r2,2494c <___vfprintf_internal_r+0x2188>
   23f04:	80f9883a 	add	fp,r16,r3
   23f08:	d9003617 	ldw	r4,216(sp)
   23f0c:	000d883a 	mov	r6,zero
   23f10:	000f883a 	mov	r7,zero
   23f14:	980b883a 	mov	r5,r19
   23f18:	da003d15 	stw	r8,244(sp)
   23f1c:	002c1000 	call	2c100 <__eqdf2>
   23f20:	da003d17 	ldw	r8,244(sp)
   23f24:	10018d26 	beq	r2,zero,2455c <___vfprintf_internal_r+0x1d98>
   23f28:	d8802117 	ldw	r2,132(sp)
   23f2c:	1700062e 	bgeu	r2,fp,23f48 <___vfprintf_internal_r+0x1784>
   23f30:	01000c04 	movi	r4,48
   23f34:	10c00044 	addi	r3,r2,1
   23f38:	d8c02115 	stw	r3,132(sp)
   23f3c:	11000005 	stb	r4,0(r2)
   23f40:	d8802117 	ldw	r2,132(sp)
   23f44:	173ffb36 	bltu	r2,fp,23f34 <__alt_data_end+0xfffe3f34>
   23f48:	1405c83a 	sub	r2,r2,r16
   23f4c:	d8803315 	stw	r2,204(sp)
   23f50:	008011c4 	movi	r2,71
   23f54:	b0817626 	beq	r22,r2,24530 <___vfprintf_internal_r+0x1d6c>
   23f58:	00801944 	movi	r2,101
   23f5c:	1442810e 	bge	r2,r17,24964 <___vfprintf_internal_r+0x21a0>
   23f60:	d8c02617 	ldw	r3,152(sp)
   23f64:	00801984 	movi	r2,102
   23f68:	d8c03215 	stw	r3,200(sp)
   23f6c:	8881fe26 	beq	r17,r2,24768 <___vfprintf_internal_r+0x1fa4>
   23f70:	d8c03217 	ldw	r3,200(sp)
   23f74:	d9003317 	ldw	r4,204(sp)
   23f78:	1901dd16 	blt	r3,r4,246f0 <___vfprintf_internal_r+0x1f2c>
   23f7c:	9480004c 	andi	r18,r18,1
   23f80:	90022b1e 	bne	r18,zero,24830 <___vfprintf_internal_r+0x206c>
   23f84:	1805883a 	mov	r2,r3
   23f88:	18028016 	blt	r3,zero,2498c <___vfprintf_internal_r+0x21c8>
   23f8c:	d8c03217 	ldw	r3,200(sp)
   23f90:	044019c4 	movi	r17,103
   23f94:	d8c02e15 	stw	r3,184(sp)
   23f98:	df002a07 	ldb	fp,168(sp)
   23f9c:	e001531e 	bne	fp,zero,244ec <___vfprintf_internal_r+0x1d28>
   23fa0:	df002783 	ldbu	fp,158(sp)
   23fa4:	d8802a15 	stw	r2,168(sp)
   23fa8:	dc802b17 	ldw	r18,172(sp)
   23fac:	d8002915 	stw	zero,164(sp)
   23fb0:	003bd106 	br	22ef8 <__alt_data_end+0xfffe2ef8>
   23fb4:	d8802d17 	ldw	r2,180(sp)
   23fb8:	d8c02d17 	ldw	r3,180(sp)
   23fbc:	d9002d17 	ldw	r4,180(sp)
   23fc0:	10800017 	ldw	r2,0(r2)
   23fc4:	18c00117 	ldw	r3,4(r3)
   23fc8:	21000204 	addi	r4,r4,8
   23fcc:	d8803615 	stw	r2,216(sp)
   23fd0:	d8c03815 	stw	r3,224(sp)
   23fd4:	d9002d15 	stw	r4,180(sp)
   23fd8:	003b7506 	br	22db0 <__alt_data_end+0xfffe2db0>
   23fdc:	ac400007 	ldb	r17,0(r21)
   23fe0:	003a5906 	br	22948 <__alt_data_end+0xfffe2948>
   23fe4:	9080100c 	andi	r2,r18,64
   23fe8:	1000a826 	beq	r2,zero,2428c <___vfprintf_internal_r+0x1ac8>
   23fec:	d9002d17 	ldw	r4,180(sp)
   23ff0:	002d883a 	mov	r22,zero
   23ff4:	24c0000b 	ldhu	r19,0(r4)
   23ff8:	21000104 	addi	r4,r4,4
   23ffc:	d9002d15 	stw	r4,180(sp)
   24000:	003ccb06 	br	23330 <__alt_data_end+0xfffe3330>
   24004:	d8c02d17 	ldw	r3,180(sp)
   24008:	d9002917 	ldw	r4,164(sp)
   2400c:	002d883a 	mov	r22,zero
   24010:	18800104 	addi	r2,r3,4
   24014:	1cc00017 	ldw	r19,0(r3)
   24018:	203ebb0e 	bge	r4,zero,23b08 <__alt_data_end+0xfffe3b08>
   2401c:	003ef106 	br	23be4 <__alt_data_end+0xfffe3be4>
   24020:	9080040c 	andi	r2,r18,16
   24024:	1000921e 	bne	r2,zero,24270 <___vfprintf_internal_r+0x1aac>
   24028:	9480100c 	andi	r18,r18,64
   2402c:	90013926 	beq	r18,zero,24514 <___vfprintf_internal_r+0x1d50>
   24030:	d9002d17 	ldw	r4,180(sp)
   24034:	d9402f17 	ldw	r5,188(sp)
   24038:	20800017 	ldw	r2,0(r4)
   2403c:	21000104 	addi	r4,r4,4
   24040:	d9002d15 	stw	r4,180(sp)
   24044:	1140000d 	sth	r5,0(r2)
   24048:	003a1606 	br	228a4 <__alt_data_end+0xfffe28a4>
   2404c:	9080100c 	andi	r2,r18,64
   24050:	10008026 	beq	r2,zero,24254 <___vfprintf_internal_r+0x1a90>
   24054:	d8c02d17 	ldw	r3,180(sp)
   24058:	1cc0000f 	ldh	r19,0(r3)
   2405c:	18c00104 	addi	r3,r3,4
   24060:	d8c02d15 	stw	r3,180(sp)
   24064:	982dd7fa 	srai	r22,r19,31
   24068:	b005883a 	mov	r2,r22
   2406c:	003b1f06 	br	22cec <__alt_data_end+0xfffe2cec>
   24070:	9080100c 	andi	r2,r18,64
   24074:	d8002785 	stb	zero,158(sp)
   24078:	10008a1e 	bne	r2,zero,242a4 <___vfprintf_internal_r+0x1ae0>
   2407c:	d9402d17 	ldw	r5,180(sp)
   24080:	d8c02917 	ldw	r3,164(sp)
   24084:	002d883a 	mov	r22,zero
   24088:	28800104 	addi	r2,r5,4
   2408c:	2cc00017 	ldw	r19,0(r5)
   24090:	183e4b0e 	bge	r3,zero,239c0 <__alt_data_end+0xfffe39c0>
   24094:	9d86b03a 	or	r3,r19,r22
   24098:	d8802d15 	stw	r2,180(sp)
   2409c:	183e4c1e 	bne	r3,zero,239d0 <__alt_data_end+0xfffe39d0>
   240a0:	0039883a 	mov	fp,zero
   240a4:	0005883a 	mov	r2,zero
   240a8:	003d4006 	br	235ac <__alt_data_end+0xfffe35ac>
   240ac:	014000f4 	movhi	r5,3
   240b0:	29403084 	addi	r5,r5,194
   240b4:	d9402b15 	stw	r5,172(sp)
   240b8:	d9402b17 	ldw	r5,172(sp)
   240bc:	1c47883a 	add	r3,r3,r17
   240c0:	10800044 	addi	r2,r2,1
   240c4:	41400015 	stw	r5,0(r8)
   240c8:	44400115 	stw	r17,4(r8)
   240cc:	d8c02015 	stw	r3,128(sp)
   240d0:	d8801f15 	stw	r2,124(sp)
   240d4:	010001c4 	movi	r4,7
   240d8:	20bec816 	blt	r4,r2,23bfc <__alt_data_end+0xfffe3bfc>
   240dc:	42000204 	addi	r8,r8,8
   240e0:	003ecd06 	br	23c18 <__alt_data_end+0xfffe3c18>
   240e4:	d9002917 	ldw	r4,164(sp)
   240e8:	d8002785 	stb	zero,158(sp)
   240ec:	203d2d16 	blt	r4,zero,235a4 <__alt_data_end+0xfffe35a4>
   240f0:	00bfdfc4 	movi	r2,-129
   240f4:	90a4703a 	and	r18,r18,r2
   240f8:	003a9106 	br	22b40 <__alt_data_end+0xfffe2b40>
   240fc:	010000f4 	movhi	r4,3
   24100:	21003084 	addi	r4,r4,194
   24104:	d9002b15 	stw	r4,172(sp)
   24108:	003c0c06 	br	2313c <__alt_data_end+0xfffe313c>
   2410c:	d9002c17 	ldw	r4,176(sp)
   24110:	d9801e04 	addi	r6,sp,120
   24114:	b80b883a 	mov	r5,r23
   24118:	00287b00 	call	287b0 <__sprint_r>
   2411c:	103aab1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   24120:	d8c02017 	ldw	r3,128(sp)
   24124:	da000404 	addi	r8,sp,16
   24128:	003d4106 	br	23630 <__alt_data_end+0xfffe3630>
   2412c:	d8801f17 	ldw	r2,124(sp)
   24130:	014000f4 	movhi	r5,3
   24134:	01000044 	movi	r4,1
   24138:	18c00044 	addi	r3,r3,1
   2413c:	10800044 	addi	r2,r2,1
   24140:	29403004 	addi	r5,r5,192
   24144:	41000115 	stw	r4,4(r8)
   24148:	41400015 	stw	r5,0(r8)
   2414c:	d8c02015 	stw	r3,128(sp)
   24150:	d8801f15 	stw	r2,124(sp)
   24154:	010001c4 	movi	r4,7
   24158:	20805c16 	blt	r4,r2,242cc <___vfprintf_internal_r+0x1b08>
   2415c:	42000204 	addi	r8,r8,8
   24160:	8800041e 	bne	r17,zero,24174 <___vfprintf_internal_r+0x19b0>
   24164:	d8803317 	ldw	r2,204(sp)
   24168:	1000021e 	bne	r2,zero,24174 <___vfprintf_internal_r+0x19b0>
   2416c:	9080004c 	andi	r2,r18,1
   24170:	103c0926 	beq	r2,zero,23198 <__alt_data_end+0xfffe3198>
   24174:	d9003717 	ldw	r4,220(sp)
   24178:	d8801f17 	ldw	r2,124(sp)
   2417c:	d9403417 	ldw	r5,208(sp)
   24180:	20c7883a 	add	r3,r4,r3
   24184:	10800044 	addi	r2,r2,1
   24188:	41000115 	stw	r4,4(r8)
   2418c:	41400015 	stw	r5,0(r8)
   24190:	d8c02015 	stw	r3,128(sp)
   24194:	d8801f15 	stw	r2,124(sp)
   24198:	010001c4 	movi	r4,7
   2419c:	20812116 	blt	r4,r2,24624 <___vfprintf_internal_r+0x1e60>
   241a0:	42000204 	addi	r8,r8,8
   241a4:	0463c83a 	sub	r17,zero,r17
   241a8:	0440730e 	bge	zero,r17,24378 <___vfprintf_internal_r+0x1bb4>
   241ac:	05800404 	movi	r22,16
   241b0:	b440860e 	bge	r22,r17,243cc <___vfprintf_internal_r+0x1c08>
   241b4:	014000f4 	movhi	r5,3
   241b8:	29403084 	addi	r5,r5,194
   241bc:	d9402b15 	stw	r5,172(sp)
   241c0:	070001c4 	movi	fp,7
   241c4:	dcc02c17 	ldw	r19,176(sp)
   241c8:	00000306 	br	241d8 <___vfprintf_internal_r+0x1a14>
   241cc:	42000204 	addi	r8,r8,8
   241d0:	8c7ffc04 	addi	r17,r17,-16
   241d4:	b440800e 	bge	r22,r17,243d8 <___vfprintf_internal_r+0x1c14>
   241d8:	18c00404 	addi	r3,r3,16
   241dc:	10800044 	addi	r2,r2,1
   241e0:	45000015 	stw	r20,0(r8)
   241e4:	45800115 	stw	r22,4(r8)
   241e8:	d8c02015 	stw	r3,128(sp)
   241ec:	d8801f15 	stw	r2,124(sp)
   241f0:	e0bff60e 	bge	fp,r2,241cc <__alt_data_end+0xfffe41cc>
   241f4:	d9801e04 	addi	r6,sp,120
   241f8:	b80b883a 	mov	r5,r23
   241fc:	9809883a 	mov	r4,r19
   24200:	00287b00 	call	287b0 <__sprint_r>
   24204:	103a711e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   24208:	d8c02017 	ldw	r3,128(sp)
   2420c:	d8801f17 	ldw	r2,124(sp)
   24210:	da000404 	addi	r8,sp,16
   24214:	003fee06 	br	241d0 <__alt_data_end+0xfffe41d0>
   24218:	00bfffc4 	movi	r2,-1
   2421c:	003a6f06 	br	22bdc <__alt_data_end+0xfffe2bdc>
   24220:	008011c4 	movi	r2,71
   24224:	1440b816 	blt	r2,r17,24508 <___vfprintf_internal_r+0x1d44>
   24228:	040000f4 	movhi	r16,3
   2422c:	84002204 	addi	r16,r16,136
   24230:	00c000c4 	movi	r3,3
   24234:	00bfdfc4 	movi	r2,-129
   24238:	d8c02a15 	stw	r3,168(sp)
   2423c:	90a4703a 	and	r18,r18,r2
   24240:	df002783 	ldbu	fp,158(sp)
   24244:	d8c02e15 	stw	r3,184(sp)
   24248:	d8002915 	stw	zero,164(sp)
   2424c:	d8003215 	stw	zero,200(sp)
   24250:	003b2906 	br	22ef8 <__alt_data_end+0xfffe2ef8>
   24254:	d9002d17 	ldw	r4,180(sp)
   24258:	24c00017 	ldw	r19,0(r4)
   2425c:	21000104 	addi	r4,r4,4
   24260:	d9002d15 	stw	r4,180(sp)
   24264:	982dd7fa 	srai	r22,r19,31
   24268:	b005883a 	mov	r2,r22
   2426c:	003a9f06 	br	22cec <__alt_data_end+0xfffe2cec>
   24270:	d9402d17 	ldw	r5,180(sp)
   24274:	d8c02f17 	ldw	r3,188(sp)
   24278:	28800017 	ldw	r2,0(r5)
   2427c:	29400104 	addi	r5,r5,4
   24280:	d9402d15 	stw	r5,180(sp)
   24284:	10c00015 	stw	r3,0(r2)
   24288:	00398606 	br	228a4 <__alt_data_end+0xfffe28a4>
   2428c:	d9402d17 	ldw	r5,180(sp)
   24290:	002d883a 	mov	r22,zero
   24294:	2cc00017 	ldw	r19,0(r5)
   24298:	29400104 	addi	r5,r5,4
   2429c:	d9402d15 	stw	r5,180(sp)
   242a0:	003c2306 	br	23330 <__alt_data_end+0xfffe3330>
   242a4:	d8c02d17 	ldw	r3,180(sp)
   242a8:	d9002917 	ldw	r4,164(sp)
   242ac:	002d883a 	mov	r22,zero
   242b0:	18800104 	addi	r2,r3,4
   242b4:	1cc0000b 	ldhu	r19,0(r3)
   242b8:	203dc10e 	bge	r4,zero,239c0 <__alt_data_end+0xfffe39c0>
   242bc:	003f7506 	br	24094 <__alt_data_end+0xfffe4094>
   242c0:	040000f4 	movhi	r16,3
   242c4:	84002004 	addi	r16,r16,128
   242c8:	003acc06 	br	22dfc <__alt_data_end+0xfffe2dfc>
   242cc:	d9002c17 	ldw	r4,176(sp)
   242d0:	d9801e04 	addi	r6,sp,120
   242d4:	b80b883a 	mov	r5,r23
   242d8:	00287b00 	call	287b0 <__sprint_r>
   242dc:	103a3b1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   242e0:	dc402617 	ldw	r17,152(sp)
   242e4:	d8c02017 	ldw	r3,128(sp)
   242e8:	da000404 	addi	r8,sp,16
   242ec:	003f9c06 	br	24160 <__alt_data_end+0xfffe4160>
   242f0:	ac400043 	ldbu	r17,1(r21)
   242f4:	94800814 	ori	r18,r18,32
   242f8:	ad400044 	addi	r21,r21,1
   242fc:	8c403fcc 	andi	r17,r17,255
   24300:	8c40201c 	xori	r17,r17,128
   24304:	8c7fe004 	addi	r17,r17,-128
   24308:	00398f06 	br	22948 <__alt_data_end+0xfffe2948>
   2430c:	d8c02d15 	stw	r3,180(sp)
   24310:	0039883a 	mov	fp,zero
   24314:	003e3506 	br	23bec <__alt_data_end+0xfffe3bec>
   24318:	d9002c17 	ldw	r4,176(sp)
   2431c:	d9801e04 	addi	r6,sp,120
   24320:	b80b883a 	mov	r5,r23
   24324:	00287b00 	call	287b0 <__sprint_r>
   24328:	103a281e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   2432c:	d8c02017 	ldw	r3,128(sp)
   24330:	da000404 	addi	r8,sp,16
   24334:	003cd006 	br	23678 <__alt_data_end+0xfffe3678>
   24338:	8009883a 	mov	r4,r16
   2433c:	da003d15 	stw	r8,244(sp)
   24340:	002272c0 	call	2272c <strlen>
   24344:	d8802e15 	stw	r2,184(sp)
   24348:	da003d17 	ldw	r8,244(sp)
   2434c:	103c340e 	bge	r2,zero,23420 <__alt_data_end+0xfffe3420>
   24350:	0005883a 	mov	r2,zero
   24354:	003c3206 	br	23420 <__alt_data_end+0xfffe3420>
   24358:	d9002c17 	ldw	r4,176(sp)
   2435c:	d9801e04 	addi	r6,sp,120
   24360:	b80b883a 	mov	r5,r23
   24364:	00287b00 	call	287b0 <__sprint_r>
   24368:	103a181e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   2436c:	d8c02017 	ldw	r3,128(sp)
   24370:	d8801f17 	ldw	r2,124(sp)
   24374:	da000404 	addi	r8,sp,16
   24378:	d9403317 	ldw	r5,204(sp)
   2437c:	10800044 	addi	r2,r2,1
   24380:	44000015 	stw	r16,0(r8)
   24384:	28c7883a 	add	r3,r5,r3
   24388:	003b7d06 	br	23180 <__alt_data_end+0xfffe3180>
   2438c:	010000f4 	movhi	r4,3
   24390:	21003484 	addi	r4,r4,210
   24394:	d9003515 	stw	r4,212(sp)
   24398:	003b1406 	br	22fec <__alt_data_end+0xfffe2fec>
   2439c:	013fffc4 	movi	r4,-1
   243a0:	003a3506 	br	22c78 <__alt_data_end+0xfffe2c78>
   243a4:	0023883a 	mov	r17,zero
   243a8:	003d9d06 	br	23a20 <__alt_data_end+0xfffe3a20>
   243ac:	d9002c17 	ldw	r4,176(sp)
   243b0:	d9801e04 	addi	r6,sp,120
   243b4:	b80b883a 	mov	r5,r23
   243b8:	00287b00 	call	287b0 <__sprint_r>
   243bc:	103a031e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   243c0:	d8c02017 	ldw	r3,128(sp)
   243c4:	da000404 	addi	r8,sp,16
   243c8:	003d9406 	br	23a1c <__alt_data_end+0xfffe3a1c>
   243cc:	010000f4 	movhi	r4,3
   243d0:	21003084 	addi	r4,r4,194
   243d4:	d9002b15 	stw	r4,172(sp)
   243d8:	d9002b17 	ldw	r4,172(sp)
   243dc:	1c47883a 	add	r3,r3,r17
   243e0:	10800044 	addi	r2,r2,1
   243e4:	41000015 	stw	r4,0(r8)
   243e8:	44400115 	stw	r17,4(r8)
   243ec:	d8c02015 	stw	r3,128(sp)
   243f0:	d8801f15 	stw	r2,124(sp)
   243f4:	010001c4 	movi	r4,7
   243f8:	20bfd716 	blt	r4,r2,24358 <__alt_data_end+0xfffe4358>
   243fc:	42000204 	addi	r8,r8,8
   24400:	003fdd06 	br	24378 <__alt_data_end+0xfffe4378>
   24404:	d9002c17 	ldw	r4,176(sp)
   24408:	d9801e04 	addi	r6,sp,120
   2440c:	b80b883a 	mov	r5,r23
   24410:	00287b00 	call	287b0 <__sprint_r>
   24414:	1039ed1e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   24418:	d8802617 	ldw	r2,152(sp)
   2441c:	d8c02017 	ldw	r3,128(sp)
   24420:	da000404 	addi	r8,sp,16
   24424:	003e1006 	br	23c68 <__alt_data_end+0xfffe3c68>
   24428:	00800044 	movi	r2,1
   2442c:	10803fcc 	andi	r2,r2,255
   24430:	00c00044 	movi	r3,1
   24434:	10fa3526 	beq	r2,r3,22d0c <__alt_data_end+0xfffe2d0c>
   24438:	00c00084 	movi	r3,2
   2443c:	10fbcb26 	beq	r2,r3,2336c <__alt_data_end+0xfffe336c>
   24440:	003a8f06 	br	22e80 <__alt_data_end+0xfffe2e80>
   24444:	010000f4 	movhi	r4,3
   24448:	21003484 	addi	r4,r4,210
   2444c:	d9003515 	stw	r4,212(sp)
   24450:	003b7606 	br	2322c <__alt_data_end+0xfffe322c>
   24454:	d8802917 	ldw	r2,164(sp)
   24458:	00c00184 	movi	r3,6
   2445c:	1880012e 	bgeu	r3,r2,24464 <___vfprintf_internal_r+0x1ca0>
   24460:	1805883a 	mov	r2,r3
   24464:	d8802e15 	stw	r2,184(sp)
   24468:	1000ef16 	blt	r2,zero,24828 <___vfprintf_internal_r+0x2064>
   2446c:	040000f4 	movhi	r16,3
   24470:	d8802a15 	stw	r2,168(sp)
   24474:	dcc02d15 	stw	r19,180(sp)
   24478:	d8002915 	stw	zero,164(sp)
   2447c:	d8003215 	stw	zero,200(sp)
   24480:	84002e04 	addi	r16,r16,184
   24484:	0039883a 	mov	fp,zero
   24488:	003aa206 	br	22f14 <__alt_data_end+0xfffe2f14>
   2448c:	0021883a 	mov	r16,zero
   24490:	003e0706 	br	23cb0 <__alt_data_end+0xfffe3cb0>
   24494:	d9002c17 	ldw	r4,176(sp)
   24498:	d9801e04 	addi	r6,sp,120
   2449c:	b80b883a 	mov	r5,r23
   244a0:	00287b00 	call	287b0 <__sprint_r>
   244a4:	1039c91e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   244a8:	d8802617 	ldw	r2,152(sp)
   244ac:	d9403317 	ldw	r5,204(sp)
   244b0:	d8c02017 	ldw	r3,128(sp)
   244b4:	da000404 	addi	r8,sp,16
   244b8:	2885c83a 	sub	r2,r5,r2
   244bc:	003dfb06 	br	23cac <__alt_data_end+0xfffe3cac>
   244c0:	9080004c 	andi	r2,r18,1
   244c4:	103e8f1e 	bne	r2,zero,23f04 <__alt_data_end+0xfffe3f04>
   244c8:	d8802117 	ldw	r2,132(sp)
   244cc:	003e9e06 	br	23f48 <__alt_data_end+0xfffe3f48>
   244d0:	1025883a 	mov	r18,r2
   244d4:	0039883a 	mov	fp,zero
   244d8:	00800084 	movi	r2,2
   244dc:	003fd306 	br	2442c <__alt_data_end+0xfffe442c>
   244e0:	07000b44 	movi	fp,45
   244e4:	df002785 	stb	fp,158(sp)
   244e8:	003a4006 	br	22dec <__alt_data_end+0xfffe2dec>
   244ec:	00c00b44 	movi	r3,45
   244f0:	d8c02785 	stb	r3,158(sp)
   244f4:	d8802a15 	stw	r2,168(sp)
   244f8:	dc802b17 	ldw	r18,172(sp)
   244fc:	d8002915 	stw	zero,164(sp)
   24500:	07000b44 	movi	fp,45
   24504:	003a8006 	br	22f08 <__alt_data_end+0xfffe2f08>
   24508:	040000f4 	movhi	r16,3
   2450c:	84002304 	addi	r16,r16,140
   24510:	003f4706 	br	24230 <__alt_data_end+0xfffe4230>
   24514:	d8c02d17 	ldw	r3,180(sp)
   24518:	d9002f17 	ldw	r4,188(sp)
   2451c:	18800017 	ldw	r2,0(r3)
   24520:	18c00104 	addi	r3,r3,4
   24524:	d8c02d15 	stw	r3,180(sp)
   24528:	11000015 	stw	r4,0(r2)
   2452c:	0038dd06 	br	228a4 <__alt_data_end+0xfffe28a4>
   24530:	dd802617 	ldw	r22,152(sp)
   24534:	00bfff44 	movi	r2,-3
   24538:	b0801c16 	blt	r22,r2,245ac <___vfprintf_internal_r+0x1de8>
   2453c:	d9402917 	ldw	r5,164(sp)
   24540:	2d801a16 	blt	r5,r22,245ac <___vfprintf_internal_r+0x1de8>
   24544:	dd803215 	stw	r22,200(sp)
   24548:	003e8906 	br	23f70 <__alt_data_end+0xfffe3f70>
   2454c:	010000f4 	movhi	r4,3
   24550:	21003084 	addi	r4,r4,194
   24554:	d9002b15 	stw	r4,172(sp)
   24558:	003c9106 	br	237a0 <__alt_data_end+0xfffe37a0>
   2455c:	e005883a 	mov	r2,fp
   24560:	003e7906 	br	23f48 <__alt_data_end+0xfffe3f48>
   24564:	d9402917 	ldw	r5,164(sp)
   24568:	df002783 	ldbu	fp,158(sp)
   2456c:	dcc02d15 	stw	r19,180(sp)
   24570:	d9402a15 	stw	r5,168(sp)
   24574:	d9402e15 	stw	r5,184(sp)
   24578:	d8002915 	stw	zero,164(sp)
   2457c:	d8003215 	stw	zero,200(sp)
   24580:	003a5d06 	br	22ef8 <__alt_data_end+0xfffe2ef8>
   24584:	9080004c 	andi	r2,r18,1
   24588:	0039883a 	mov	fp,zero
   2458c:	10000426 	beq	r2,zero,245a0 <___vfprintf_internal_r+0x1ddc>
   24590:	00800c04 	movi	r2,48
   24594:	dc001dc4 	addi	r16,sp,119
   24598:	d8801dc5 	stb	r2,119(sp)
   2459c:	003b8006 	br	233a0 <__alt_data_end+0xfffe33a0>
   245a0:	d8002e15 	stw	zero,184(sp)
   245a4:	dc001e04 	addi	r16,sp,120
   245a8:	003a4d06 	br	22ee0 <__alt_data_end+0xfffe2ee0>
   245ac:	8c7fff84 	addi	r17,r17,-2
   245b0:	b5bfffc4 	addi	r22,r22,-1
   245b4:	dd802615 	stw	r22,152(sp)
   245b8:	dc4022c5 	stb	r17,139(sp)
   245bc:	b000bf16 	blt	r22,zero,248bc <___vfprintf_internal_r+0x20f8>
   245c0:	00800ac4 	movi	r2,43
   245c4:	d8802305 	stb	r2,140(sp)
   245c8:	00800244 	movi	r2,9
   245cc:	15807016 	blt	r2,r22,24790 <___vfprintf_internal_r+0x1fcc>
   245d0:	00800c04 	movi	r2,48
   245d4:	b5800c04 	addi	r22,r22,48
   245d8:	d8802345 	stb	r2,141(sp)
   245dc:	dd802385 	stb	r22,142(sp)
   245e0:	d88023c4 	addi	r2,sp,143
   245e4:	df0022c4 	addi	fp,sp,139
   245e8:	d8c03317 	ldw	r3,204(sp)
   245ec:	1739c83a 	sub	fp,r2,fp
   245f0:	d9003317 	ldw	r4,204(sp)
   245f4:	e0c7883a 	add	r3,fp,r3
   245f8:	df003a15 	stw	fp,232(sp)
   245fc:	d8c02e15 	stw	r3,184(sp)
   24600:	00800044 	movi	r2,1
   24604:	1100b30e 	bge	r2,r4,248d4 <___vfprintf_internal_r+0x2110>
   24608:	d8c02e17 	ldw	r3,184(sp)
   2460c:	18c00044 	addi	r3,r3,1
   24610:	d8c02e15 	stw	r3,184(sp)
   24614:	1805883a 	mov	r2,r3
   24618:	1800ac16 	blt	r3,zero,248cc <___vfprintf_internal_r+0x2108>
   2461c:	d8003215 	stw	zero,200(sp)
   24620:	003e5d06 	br	23f98 <__alt_data_end+0xfffe3f98>
   24624:	d9002c17 	ldw	r4,176(sp)
   24628:	d9801e04 	addi	r6,sp,120
   2462c:	b80b883a 	mov	r5,r23
   24630:	00287b00 	call	287b0 <__sprint_r>
   24634:	1039651e 	bne	r2,zero,22bcc <__alt_data_end+0xfffe2bcc>
   24638:	dc402617 	ldw	r17,152(sp)
   2463c:	d8c02017 	ldw	r3,128(sp)
   24640:	d8801f17 	ldw	r2,124(sp)
   24644:	da000404 	addi	r8,sp,16
   24648:	003ed606 	br	241a4 <__alt_data_end+0xfffe41a4>
   2464c:	582b883a 	mov	r21,r11
   24650:	d8002915 	stw	zero,164(sp)
   24654:	0038bd06 	br	2294c <__alt_data_end+0xfffe294c>
   24658:	d8802917 	ldw	r2,164(sp)
   2465c:	103e071e 	bne	r2,zero,23e7c <__alt_data_end+0xfffe3e7c>
   24660:	dc002915 	stw	r16,164(sp)
   24664:	003e0506 	br	23e7c <__alt_data_end+0xfffe3e7c>
   24668:	d9002917 	ldw	r4,164(sp)
   2466c:	20c00044 	addi	r3,r4,1
   24670:	003e0f06 	br	23eb0 <__alt_data_end+0xfffe3eb0>
   24674:	01400184 	movi	r5,6
   24678:	d9402915 	stw	r5,164(sp)
   2467c:	003dff06 	br	23e7c <__alt_data_end+0xfffe3e7c>
   24680:	d8802104 	addi	r2,sp,132
   24684:	d8800315 	stw	r2,12(sp)
   24688:	d8802504 	addi	r2,sp,148
   2468c:	d8800215 	stw	r2,8(sp)
   24690:	d8802604 	addi	r2,sp,152
   24694:	d8800115 	stw	r2,4(sp)
   24698:	d8802917 	ldw	r2,164(sp)
   2469c:	d9403617 	ldw	r5,216(sp)
   246a0:	d9002c17 	ldw	r4,176(sp)
   246a4:	d8800015 	stw	r2,0(sp)
   246a8:	01c000c4 	movi	r7,3
   246ac:	980d883a 	mov	r6,r19
   246b0:	da003d15 	stw	r8,244(sp)
   246b4:	0024e9c0 	call	24e9c <_dtoa_r>
   246b8:	d8c02917 	ldw	r3,164(sp)
   246bc:	da003d17 	ldw	r8,244(sp)
   246c0:	1021883a 	mov	r16,r2
   246c4:	10f9883a 	add	fp,r2,r3
   246c8:	81000007 	ldb	r4,0(r16)
   246cc:	00800c04 	movi	r2,48
   246d0:	20805e26 	beq	r4,r2,2484c <___vfprintf_internal_r+0x2088>
   246d4:	d8c02617 	ldw	r3,152(sp)
   246d8:	e0f9883a 	add	fp,fp,r3
   246dc:	003e0a06 	br	23f08 <__alt_data_end+0xfffe3f08>
   246e0:	00c00b44 	movi	r3,45
   246e4:	24e0003c 	xorhi	r19,r4,32768
   246e8:	d8c02a05 	stb	r3,168(sp)
   246ec:	003de906 	br	23e94 <__alt_data_end+0xfffe3e94>
   246f0:	d8c03217 	ldw	r3,200(sp)
   246f4:	00c07a0e 	bge	zero,r3,248e0 <___vfprintf_internal_r+0x211c>
   246f8:	00800044 	movi	r2,1
   246fc:	d9003317 	ldw	r4,204(sp)
   24700:	1105883a 	add	r2,r2,r4
   24704:	d8802e15 	stw	r2,184(sp)
   24708:	10004e16 	blt	r2,zero,24844 <___vfprintf_internal_r+0x2080>
   2470c:	044019c4 	movi	r17,103
   24710:	003e2106 	br	23f98 <__alt_data_end+0xfffe3f98>
   24714:	d9002917 	ldw	r4,164(sp)
   24718:	d8802104 	addi	r2,sp,132
   2471c:	d8800315 	stw	r2,12(sp)
   24720:	d9000015 	stw	r4,0(sp)
   24724:	d8802504 	addi	r2,sp,148
   24728:	d9403617 	ldw	r5,216(sp)
   2472c:	d9002c17 	ldw	r4,176(sp)
   24730:	d8800215 	stw	r2,8(sp)
   24734:	d8802604 	addi	r2,sp,152
   24738:	d8800115 	stw	r2,4(sp)
   2473c:	01c000c4 	movi	r7,3
   24740:	980d883a 	mov	r6,r19
   24744:	da003d15 	stw	r8,244(sp)
   24748:	0024e9c0 	call	24e9c <_dtoa_r>
   2474c:	d8c02917 	ldw	r3,164(sp)
   24750:	da003d17 	ldw	r8,244(sp)
   24754:	1021883a 	mov	r16,r2
   24758:	00801184 	movi	r2,70
   2475c:	80f9883a 	add	fp,r16,r3
   24760:	88bfd926 	beq	r17,r2,246c8 <__alt_data_end+0xfffe46c8>
   24764:	003de806 	br	23f08 <__alt_data_end+0xfffe3f08>
   24768:	d9002917 	ldw	r4,164(sp)
   2476c:	00c04d0e 	bge	zero,r3,248a4 <___vfprintf_internal_r+0x20e0>
   24770:	2000441e 	bne	r4,zero,24884 <___vfprintf_internal_r+0x20c0>
   24774:	9480004c 	andi	r18,r18,1
   24778:	9000421e 	bne	r18,zero,24884 <___vfprintf_internal_r+0x20c0>
   2477c:	1805883a 	mov	r2,r3
   24780:	18007016 	blt	r3,zero,24944 <___vfprintf_internal_r+0x2180>
   24784:	d8c03217 	ldw	r3,200(sp)
   24788:	d8c02e15 	stw	r3,184(sp)
   2478c:	003e0206 	br	23f98 <__alt_data_end+0xfffe3f98>
   24790:	df0022c4 	addi	fp,sp,139
   24794:	dc002915 	stw	r16,164(sp)
   24798:	4027883a 	mov	r19,r8
   2479c:	e021883a 	mov	r16,fp
   247a0:	b009883a 	mov	r4,r22
   247a4:	01400284 	movi	r5,10
   247a8:	002ae3c0 	call	2ae3c <__modsi3>
   247ac:	10800c04 	addi	r2,r2,48
   247b0:	843fffc4 	addi	r16,r16,-1
   247b4:	b009883a 	mov	r4,r22
   247b8:	01400284 	movi	r5,10
   247bc:	80800005 	stb	r2,0(r16)
   247c0:	002adb80 	call	2adb8 <__divsi3>
   247c4:	102d883a 	mov	r22,r2
   247c8:	00800244 	movi	r2,9
   247cc:	15bff416 	blt	r2,r22,247a0 <__alt_data_end+0xfffe47a0>
   247d0:	9811883a 	mov	r8,r19
   247d4:	b0800c04 	addi	r2,r22,48
   247d8:	8027883a 	mov	r19,r16
   247dc:	997fffc4 	addi	r5,r19,-1
   247e0:	98bfffc5 	stb	r2,-1(r19)
   247e4:	dc002917 	ldw	r16,164(sp)
   247e8:	2f006a2e 	bgeu	r5,fp,24994 <___vfprintf_internal_r+0x21d0>
   247ec:	d9c02384 	addi	r7,sp,142
   247f0:	3ccfc83a 	sub	r7,r7,r19
   247f4:	d9002344 	addi	r4,sp,141
   247f8:	e1cf883a 	add	r7,fp,r7
   247fc:	00000106 	br	24804 <___vfprintf_internal_r+0x2040>
   24800:	28800003 	ldbu	r2,0(r5)
   24804:	20800005 	stb	r2,0(r4)
   24808:	21000044 	addi	r4,r4,1
   2480c:	29400044 	addi	r5,r5,1
   24810:	393ffb1e 	bne	r7,r4,24800 <__alt_data_end+0xfffe4800>
   24814:	d8802304 	addi	r2,sp,140
   24818:	14c5c83a 	sub	r2,r2,r19
   2481c:	d8c02344 	addi	r3,sp,141
   24820:	1885883a 	add	r2,r3,r2
   24824:	003f7006 	br	245e8 <__alt_data_end+0xfffe45e8>
   24828:	0005883a 	mov	r2,zero
   2482c:	003f0f06 	br	2446c <__alt_data_end+0xfffe446c>
   24830:	d8c03217 	ldw	r3,200(sp)
   24834:	18c00044 	addi	r3,r3,1
   24838:	d8c02e15 	stw	r3,184(sp)
   2483c:	1805883a 	mov	r2,r3
   24840:	183fb20e 	bge	r3,zero,2470c <__alt_data_end+0xfffe470c>
   24844:	0005883a 	mov	r2,zero
   24848:	003fb006 	br	2470c <__alt_data_end+0xfffe470c>
   2484c:	d9003617 	ldw	r4,216(sp)
   24850:	000d883a 	mov	r6,zero
   24854:	000f883a 	mov	r7,zero
   24858:	980b883a 	mov	r5,r19
   2485c:	d8c03c15 	stw	r3,240(sp)
   24860:	da003d15 	stw	r8,244(sp)
   24864:	002c1000 	call	2c100 <__eqdf2>
   24868:	d8c03c17 	ldw	r3,240(sp)
   2486c:	da003d17 	ldw	r8,244(sp)
   24870:	103f9826 	beq	r2,zero,246d4 <__alt_data_end+0xfffe46d4>
   24874:	00800044 	movi	r2,1
   24878:	10c7c83a 	sub	r3,r2,r3
   2487c:	d8c02615 	stw	r3,152(sp)
   24880:	003f9506 	br	246d8 <__alt_data_end+0xfffe46d8>
   24884:	d9002917 	ldw	r4,164(sp)
   24888:	d8c03217 	ldw	r3,200(sp)
   2488c:	20800044 	addi	r2,r4,1
   24890:	1885883a 	add	r2,r3,r2
   24894:	d8802e15 	stw	r2,184(sp)
   24898:	103dbf0e 	bge	r2,zero,23f98 <__alt_data_end+0xfffe3f98>
   2489c:	0005883a 	mov	r2,zero
   248a0:	003dbd06 	br	23f98 <__alt_data_end+0xfffe3f98>
   248a4:	2000211e 	bne	r4,zero,2492c <___vfprintf_internal_r+0x2168>
   248a8:	9480004c 	andi	r18,r18,1
   248ac:	90001f1e 	bne	r18,zero,2492c <___vfprintf_internal_r+0x2168>
   248b0:	00800044 	movi	r2,1
   248b4:	d8802e15 	stw	r2,184(sp)
   248b8:	003db706 	br	23f98 <__alt_data_end+0xfffe3f98>
   248bc:	00800b44 	movi	r2,45
   248c0:	05adc83a 	sub	r22,zero,r22
   248c4:	d8802305 	stb	r2,140(sp)
   248c8:	003f3f06 	br	245c8 <__alt_data_end+0xfffe45c8>
   248cc:	0005883a 	mov	r2,zero
   248d0:	003f5206 	br	2461c <__alt_data_end+0xfffe461c>
   248d4:	90a4703a 	and	r18,r18,r2
   248d8:	903f4e26 	beq	r18,zero,24614 <__alt_data_end+0xfffe4614>
   248dc:	003f4a06 	br	24608 <__alt_data_end+0xfffe4608>
   248e0:	00800084 	movi	r2,2
   248e4:	10c5c83a 	sub	r2,r2,r3
   248e8:	003f8406 	br	246fc <__alt_data_end+0xfffe46fc>
   248ec:	d8802d17 	ldw	r2,180(sp)
   248f0:	d9002d17 	ldw	r4,180(sp)
   248f4:	ac400043 	ldbu	r17,1(r21)
   248f8:	10800017 	ldw	r2,0(r2)
   248fc:	582b883a 	mov	r21,r11
   24900:	d8802915 	stw	r2,164(sp)
   24904:	20800104 	addi	r2,r4,4
   24908:	d9002917 	ldw	r4,164(sp)
   2490c:	d8802d15 	stw	r2,180(sp)
   24910:	203e7a0e 	bge	r4,zero,242fc <__alt_data_end+0xfffe42fc>
   24914:	8c403fcc 	andi	r17,r17,255
   24918:	00bfffc4 	movi	r2,-1
   2491c:	8c40201c 	xori	r17,r17,128
   24920:	d8802915 	stw	r2,164(sp)
   24924:	8c7fe004 	addi	r17,r17,-128
   24928:	00380706 	br	22948 <__alt_data_end+0xfffe2948>
   2492c:	d8c02917 	ldw	r3,164(sp)
   24930:	18c00084 	addi	r3,r3,2
   24934:	d8c02e15 	stw	r3,184(sp)
   24938:	1805883a 	mov	r2,r3
   2493c:	183d960e 	bge	r3,zero,23f98 <__alt_data_end+0xfffe3f98>
   24940:	003fd606 	br	2489c <__alt_data_end+0xfffe489c>
   24944:	0005883a 	mov	r2,zero
   24948:	003f8e06 	br	24784 <__alt_data_end+0xfffe4784>
   2494c:	9080004c 	andi	r2,r18,1
   24950:	103f811e 	bne	r2,zero,24758 <__alt_data_end+0xfffe4758>
   24954:	d8802117 	ldw	r2,132(sp)
   24958:	1405c83a 	sub	r2,r2,r16
   2495c:	d8803315 	stw	r2,204(sp)
   24960:	b47ef326 	beq	r22,r17,24530 <__alt_data_end+0xfffe4530>
   24964:	dd802617 	ldw	r22,152(sp)
   24968:	003f1106 	br	245b0 <__alt_data_end+0xfffe45b0>
   2496c:	d9c02785 	stb	r7,158(sp)
   24970:	00390406 	br	22d84 <__alt_data_end+0xfffe2d84>
   24974:	d9c02785 	stb	r7,158(sp)
   24978:	0038d306 	br	22cc8 <__alt_data_end+0xfffe2cc8>
   2497c:	d9c02785 	stb	r7,158(sp)
   24980:	003a6106 	br	23308 <__alt_data_end+0xfffe3308>
   24984:	d9c02785 	stb	r7,158(sp)
   24988:	003af806 	br	2356c <__alt_data_end+0xfffe356c>
   2498c:	0005883a 	mov	r2,zero
   24990:	003d7e06 	br	23f8c <__alt_data_end+0xfffe3f8c>
   24994:	d8802344 	addi	r2,sp,141
   24998:	003f1306 	br	245e8 <__alt_data_end+0xfffe45e8>
   2499c:	d9c02785 	stb	r7,158(sp)
   249a0:	00392306 	br	22e30 <__alt_data_end+0xfffe2e30>
   249a4:	d9c02785 	stb	r7,158(sp)
   249a8:	003aa906 	br	23450 <__alt_data_end+0xfffe3450>
   249ac:	d9c02785 	stb	r7,158(sp)
   249b0:	003a3d06 	br	232a8 <__alt_data_end+0xfffe32a8>
   249b4:	d9c02785 	stb	r7,158(sp)
   249b8:	003aca06 	br	234e4 <__alt_data_end+0xfffe34e4>

000249bc <__vfprintf_internal>:
   249bc:	008000f4 	movhi	r2,3
   249c0:	10879904 	addi	r2,r2,7780
   249c4:	300f883a 	mov	r7,r6
   249c8:	280d883a 	mov	r6,r5
   249cc:	200b883a 	mov	r5,r4
   249d0:	11000017 	ldw	r4,0(r2)
   249d4:	00227c41 	jmpi	227c4 <___vfprintf_internal_r>

000249d8 <__sbprintf>:
   249d8:	2880030b 	ldhu	r2,12(r5)
   249dc:	2ac01917 	ldw	r11,100(r5)
   249e0:	2a80038b 	ldhu	r10,14(r5)
   249e4:	2a400717 	ldw	r9,28(r5)
   249e8:	2a000917 	ldw	r8,36(r5)
   249ec:	defee204 	addi	sp,sp,-1144
   249f0:	00c10004 	movi	r3,1024
   249f4:	dc011a15 	stw	r16,1128(sp)
   249f8:	10bfff4c 	andi	r2,r2,65533
   249fc:	2821883a 	mov	r16,r5
   24a00:	d8cb883a 	add	r5,sp,r3
   24a04:	dc811c15 	stw	r18,1136(sp)
   24a08:	dc411b15 	stw	r17,1132(sp)
   24a0c:	dfc11d15 	stw	ra,1140(sp)
   24a10:	2025883a 	mov	r18,r4
   24a14:	d881030d 	sth	r2,1036(sp)
   24a18:	dac11915 	stw	r11,1124(sp)
   24a1c:	da81038d 	sth	r10,1038(sp)
   24a20:	da410715 	stw	r9,1052(sp)
   24a24:	da010915 	stw	r8,1060(sp)
   24a28:	dec10015 	stw	sp,1024(sp)
   24a2c:	dec10415 	stw	sp,1040(sp)
   24a30:	d8c10215 	stw	r3,1032(sp)
   24a34:	d8c10515 	stw	r3,1044(sp)
   24a38:	d8010615 	stw	zero,1048(sp)
   24a3c:	00227c40 	call	227c4 <___vfprintf_internal_r>
   24a40:	1023883a 	mov	r17,r2
   24a44:	10000416 	blt	r2,zero,24a58 <__sbprintf+0x80>
   24a48:	d9410004 	addi	r5,sp,1024
   24a4c:	9009883a 	mov	r4,r18
   24a50:	002074c0 	call	2074c <_fflush_r>
   24a54:	10000d1e 	bne	r2,zero,24a8c <__sbprintf+0xb4>
   24a58:	d881030b 	ldhu	r2,1036(sp)
   24a5c:	1080100c 	andi	r2,r2,64
   24a60:	10000326 	beq	r2,zero,24a70 <__sbprintf+0x98>
   24a64:	8080030b 	ldhu	r2,12(r16)
   24a68:	10801014 	ori	r2,r2,64
   24a6c:	8080030d 	sth	r2,12(r16)
   24a70:	8805883a 	mov	r2,r17
   24a74:	dfc11d17 	ldw	ra,1140(sp)
   24a78:	dc811c17 	ldw	r18,1136(sp)
   24a7c:	dc411b17 	ldw	r17,1132(sp)
   24a80:	dc011a17 	ldw	r16,1128(sp)
   24a84:	dec11e04 	addi	sp,sp,1144
   24a88:	f800283a 	ret
   24a8c:	047fffc4 	movi	r17,-1
   24a90:	003ff106 	br	24a58 <__alt_data_end+0xfffe4a58>

00024a94 <_write_r>:
   24a94:	defffd04 	addi	sp,sp,-12
   24a98:	2805883a 	mov	r2,r5
   24a9c:	dc000015 	stw	r16,0(sp)
   24aa0:	040000f4 	movhi	r16,3
   24aa4:	dc400115 	stw	r17,4(sp)
   24aa8:	300b883a 	mov	r5,r6
   24aac:	840e7304 	addi	r16,r16,14796
   24ab0:	2023883a 	mov	r17,r4
   24ab4:	380d883a 	mov	r6,r7
   24ab8:	1009883a 	mov	r4,r2
   24abc:	dfc00215 	stw	ra,8(sp)
   24ac0:	80000015 	stw	zero,0(r16)
   24ac4:	002e0740 	call	2e074 <write>
   24ac8:	00ffffc4 	movi	r3,-1
   24acc:	10c00526 	beq	r2,r3,24ae4 <_write_r+0x50>
   24ad0:	dfc00217 	ldw	ra,8(sp)
   24ad4:	dc400117 	ldw	r17,4(sp)
   24ad8:	dc000017 	ldw	r16,0(sp)
   24adc:	dec00304 	addi	sp,sp,12
   24ae0:	f800283a 	ret
   24ae4:	80c00017 	ldw	r3,0(r16)
   24ae8:	183ff926 	beq	r3,zero,24ad0 <__alt_data_end+0xfffe4ad0>
   24aec:	88c00015 	stw	r3,0(r17)
   24af0:	003ff706 	br	24ad0 <__alt_data_end+0xfffe4ad0>

00024af4 <__swsetup_r>:
   24af4:	008000f4 	movhi	r2,3
   24af8:	defffd04 	addi	sp,sp,-12
   24afc:	10879904 	addi	r2,r2,7780
   24b00:	dc400115 	stw	r17,4(sp)
   24b04:	2023883a 	mov	r17,r4
   24b08:	11000017 	ldw	r4,0(r2)
   24b0c:	dc000015 	stw	r16,0(sp)
   24b10:	dfc00215 	stw	ra,8(sp)
   24b14:	2821883a 	mov	r16,r5
   24b18:	20000226 	beq	r4,zero,24b24 <__swsetup_r+0x30>
   24b1c:	20800e17 	ldw	r2,56(r4)
   24b20:	10003126 	beq	r2,zero,24be8 <__swsetup_r+0xf4>
   24b24:	8080030b 	ldhu	r2,12(r16)
   24b28:	10c0020c 	andi	r3,r2,8
   24b2c:	1009883a 	mov	r4,r2
   24b30:	18000f26 	beq	r3,zero,24b70 <__swsetup_r+0x7c>
   24b34:	80c00417 	ldw	r3,16(r16)
   24b38:	18001526 	beq	r3,zero,24b90 <__swsetup_r+0x9c>
   24b3c:	1100004c 	andi	r4,r2,1
   24b40:	20001c1e 	bne	r4,zero,24bb4 <__swsetup_r+0xc0>
   24b44:	1080008c 	andi	r2,r2,2
   24b48:	1000291e 	bne	r2,zero,24bf0 <__swsetup_r+0xfc>
   24b4c:	80800517 	ldw	r2,20(r16)
   24b50:	80800215 	stw	r2,8(r16)
   24b54:	18001c26 	beq	r3,zero,24bc8 <__swsetup_r+0xd4>
   24b58:	0005883a 	mov	r2,zero
   24b5c:	dfc00217 	ldw	ra,8(sp)
   24b60:	dc400117 	ldw	r17,4(sp)
   24b64:	dc000017 	ldw	r16,0(sp)
   24b68:	dec00304 	addi	sp,sp,12
   24b6c:	f800283a 	ret
   24b70:	2080040c 	andi	r2,r4,16
   24b74:	10002e26 	beq	r2,zero,24c30 <__swsetup_r+0x13c>
   24b78:	2080010c 	andi	r2,r4,4
   24b7c:	10001e1e 	bne	r2,zero,24bf8 <__swsetup_r+0x104>
   24b80:	80c00417 	ldw	r3,16(r16)
   24b84:	20800214 	ori	r2,r4,8
   24b88:	8080030d 	sth	r2,12(r16)
   24b8c:	183feb1e 	bne	r3,zero,24b3c <__alt_data_end+0xfffe4b3c>
   24b90:	1100a00c 	andi	r4,r2,640
   24b94:	01408004 	movi	r5,512
   24b98:	217fe826 	beq	r4,r5,24b3c <__alt_data_end+0xfffe4b3c>
   24b9c:	800b883a 	mov	r5,r16
   24ba0:	8809883a 	mov	r4,r17
   24ba4:	002171c0 	call	2171c <__smakebuf_r>
   24ba8:	8080030b 	ldhu	r2,12(r16)
   24bac:	80c00417 	ldw	r3,16(r16)
   24bb0:	003fe206 	br	24b3c <__alt_data_end+0xfffe4b3c>
   24bb4:	80800517 	ldw	r2,20(r16)
   24bb8:	80000215 	stw	zero,8(r16)
   24bbc:	0085c83a 	sub	r2,zero,r2
   24bc0:	80800615 	stw	r2,24(r16)
   24bc4:	183fe41e 	bne	r3,zero,24b58 <__alt_data_end+0xfffe4b58>
   24bc8:	80c0030b 	ldhu	r3,12(r16)
   24bcc:	0005883a 	mov	r2,zero
   24bd0:	1900200c 	andi	r4,r3,128
   24bd4:	203fe126 	beq	r4,zero,24b5c <__alt_data_end+0xfffe4b5c>
   24bd8:	18c01014 	ori	r3,r3,64
   24bdc:	80c0030d 	sth	r3,12(r16)
   24be0:	00bfffc4 	movi	r2,-1
   24be4:	003fdd06 	br	24b5c <__alt_data_end+0xfffe4b5c>
   24be8:	0020b280 	call	20b28 <__sinit>
   24bec:	003fcd06 	br	24b24 <__alt_data_end+0xfffe4b24>
   24bf0:	0005883a 	mov	r2,zero
   24bf4:	003fd606 	br	24b50 <__alt_data_end+0xfffe4b50>
   24bf8:	81400c17 	ldw	r5,48(r16)
   24bfc:	28000626 	beq	r5,zero,24c18 <__swsetup_r+0x124>
   24c00:	80801004 	addi	r2,r16,64
   24c04:	28800326 	beq	r5,r2,24c14 <__swsetup_r+0x120>
   24c08:	8809883a 	mov	r4,r17
   24c0c:	0020da80 	call	20da8 <_free_r>
   24c10:	8100030b 	ldhu	r4,12(r16)
   24c14:	80000c15 	stw	zero,48(r16)
   24c18:	80c00417 	ldw	r3,16(r16)
   24c1c:	00bff6c4 	movi	r2,-37
   24c20:	1108703a 	and	r4,r2,r4
   24c24:	80000115 	stw	zero,4(r16)
   24c28:	80c00015 	stw	r3,0(r16)
   24c2c:	003fd506 	br	24b84 <__alt_data_end+0xfffe4b84>
   24c30:	00800244 	movi	r2,9
   24c34:	88800015 	stw	r2,0(r17)
   24c38:	20801014 	ori	r2,r4,64
   24c3c:	8080030d 	sth	r2,12(r16)
   24c40:	00bfffc4 	movi	r2,-1
   24c44:	003fc506 	br	24b5c <__alt_data_end+0xfffe4b5c>

00024c48 <_close_r>:
   24c48:	defffd04 	addi	sp,sp,-12
   24c4c:	dc000015 	stw	r16,0(sp)
   24c50:	040000f4 	movhi	r16,3
   24c54:	dc400115 	stw	r17,4(sp)
   24c58:	840e7304 	addi	r16,r16,14796
   24c5c:	2023883a 	mov	r17,r4
   24c60:	2809883a 	mov	r4,r5
   24c64:	dfc00215 	stw	ra,8(sp)
   24c68:	80000015 	stw	zero,0(r16)
   24c6c:	002d6100 	call	2d610 <close>
   24c70:	00ffffc4 	movi	r3,-1
   24c74:	10c00526 	beq	r2,r3,24c8c <_close_r+0x44>
   24c78:	dfc00217 	ldw	ra,8(sp)
   24c7c:	dc400117 	ldw	r17,4(sp)
   24c80:	dc000017 	ldw	r16,0(sp)
   24c84:	dec00304 	addi	sp,sp,12
   24c88:	f800283a 	ret
   24c8c:	80c00017 	ldw	r3,0(r16)
   24c90:	183ff926 	beq	r3,zero,24c78 <__alt_data_end+0xfffe4c78>
   24c94:	88c00015 	stw	r3,0(r17)
   24c98:	003ff706 	br	24c78 <__alt_data_end+0xfffe4c78>

00024c9c <quorem>:
   24c9c:	defff704 	addi	sp,sp,-36
   24ca0:	dc800215 	stw	r18,8(sp)
   24ca4:	20800417 	ldw	r2,16(r4)
   24ca8:	2c800417 	ldw	r18,16(r5)
   24cac:	dfc00815 	stw	ra,32(sp)
   24cb0:	ddc00715 	stw	r23,28(sp)
   24cb4:	dd800615 	stw	r22,24(sp)
   24cb8:	dd400515 	stw	r21,20(sp)
   24cbc:	dd000415 	stw	r20,16(sp)
   24cc0:	dcc00315 	stw	r19,12(sp)
   24cc4:	dc400115 	stw	r17,4(sp)
   24cc8:	dc000015 	stw	r16,0(sp)
   24ccc:	14807116 	blt	r2,r18,24e94 <quorem+0x1f8>
   24cd0:	94bfffc4 	addi	r18,r18,-1
   24cd4:	94ad883a 	add	r22,r18,r18
   24cd8:	b5ad883a 	add	r22,r22,r22
   24cdc:	2c400504 	addi	r17,r5,20
   24ce0:	8da9883a 	add	r20,r17,r22
   24ce4:	25400504 	addi	r21,r4,20
   24ce8:	282f883a 	mov	r23,r5
   24cec:	adad883a 	add	r22,r21,r22
   24cf0:	a1400017 	ldw	r5,0(r20)
   24cf4:	2021883a 	mov	r16,r4
   24cf8:	b1000017 	ldw	r4,0(r22)
   24cfc:	29400044 	addi	r5,r5,1
   24d00:	002aeb00 	call	2aeb0 <__udivsi3>
   24d04:	1027883a 	mov	r19,r2
   24d08:	10002c26 	beq	r2,zero,24dbc <quorem+0x120>
   24d0c:	a813883a 	mov	r9,r21
   24d10:	880b883a 	mov	r5,r17
   24d14:	0009883a 	mov	r4,zero
   24d18:	000d883a 	mov	r6,zero
   24d1c:	2a000017 	ldw	r8,0(r5)
   24d20:	49c00017 	ldw	r7,0(r9)
   24d24:	29400104 	addi	r5,r5,4
   24d28:	40bfffcc 	andi	r2,r8,65535
   24d2c:	14c5383a 	mul	r2,r2,r19
   24d30:	4010d43a 	srli	r8,r8,16
   24d34:	38ffffcc 	andi	r3,r7,65535
   24d38:	1105883a 	add	r2,r2,r4
   24d3c:	1008d43a 	srli	r4,r2,16
   24d40:	44d1383a 	mul	r8,r8,r19
   24d44:	198d883a 	add	r6,r3,r6
   24d48:	10ffffcc 	andi	r3,r2,65535
   24d4c:	30c7c83a 	sub	r3,r6,r3
   24d50:	380ed43a 	srli	r7,r7,16
   24d54:	4105883a 	add	r2,r8,r4
   24d58:	180dd43a 	srai	r6,r3,16
   24d5c:	113fffcc 	andi	r4,r2,65535
   24d60:	390fc83a 	sub	r7,r7,r4
   24d64:	398d883a 	add	r6,r7,r6
   24d68:	300e943a 	slli	r7,r6,16
   24d6c:	18ffffcc 	andi	r3,r3,65535
   24d70:	1008d43a 	srli	r4,r2,16
   24d74:	38ceb03a 	or	r7,r7,r3
   24d78:	49c00015 	stw	r7,0(r9)
   24d7c:	300dd43a 	srai	r6,r6,16
   24d80:	4a400104 	addi	r9,r9,4
   24d84:	a17fe52e 	bgeu	r20,r5,24d1c <__alt_data_end+0xfffe4d1c>
   24d88:	b0800017 	ldw	r2,0(r22)
   24d8c:	10000b1e 	bne	r2,zero,24dbc <quorem+0x120>
   24d90:	b0bfff04 	addi	r2,r22,-4
   24d94:	a880082e 	bgeu	r21,r2,24db8 <quorem+0x11c>
   24d98:	b0ffff17 	ldw	r3,-4(r22)
   24d9c:	18000326 	beq	r3,zero,24dac <quorem+0x110>
   24da0:	00000506 	br	24db8 <quorem+0x11c>
   24da4:	10c00017 	ldw	r3,0(r2)
   24da8:	1800031e 	bne	r3,zero,24db8 <quorem+0x11c>
   24dac:	10bfff04 	addi	r2,r2,-4
   24db0:	94bfffc4 	addi	r18,r18,-1
   24db4:	a8bffb36 	bltu	r21,r2,24da4 <__alt_data_end+0xfffe4da4>
   24db8:	84800415 	stw	r18,16(r16)
   24dbc:	b80b883a 	mov	r5,r23
   24dc0:	8009883a 	mov	r4,r16
   24dc4:	002786c0 	call	2786c <__mcmp>
   24dc8:	10002616 	blt	r2,zero,24e64 <quorem+0x1c8>
   24dcc:	9cc00044 	addi	r19,r19,1
   24dd0:	a805883a 	mov	r2,r21
   24dd4:	000b883a 	mov	r5,zero
   24dd8:	11000017 	ldw	r4,0(r2)
   24ddc:	89800017 	ldw	r6,0(r17)
   24de0:	10800104 	addi	r2,r2,4
   24de4:	20ffffcc 	andi	r3,r4,65535
   24de8:	194b883a 	add	r5,r3,r5
   24dec:	30ffffcc 	andi	r3,r6,65535
   24df0:	28c7c83a 	sub	r3,r5,r3
   24df4:	300cd43a 	srli	r6,r6,16
   24df8:	2008d43a 	srli	r4,r4,16
   24dfc:	180bd43a 	srai	r5,r3,16
   24e00:	18ffffcc 	andi	r3,r3,65535
   24e04:	2189c83a 	sub	r4,r4,r6
   24e08:	2149883a 	add	r4,r4,r5
   24e0c:	200c943a 	slli	r6,r4,16
   24e10:	8c400104 	addi	r17,r17,4
   24e14:	200bd43a 	srai	r5,r4,16
   24e18:	30c6b03a 	or	r3,r6,r3
   24e1c:	10ffff15 	stw	r3,-4(r2)
   24e20:	a47fed2e 	bgeu	r20,r17,24dd8 <__alt_data_end+0xfffe4dd8>
   24e24:	9485883a 	add	r2,r18,r18
   24e28:	1085883a 	add	r2,r2,r2
   24e2c:	a887883a 	add	r3,r21,r2
   24e30:	18800017 	ldw	r2,0(r3)
   24e34:	10000b1e 	bne	r2,zero,24e64 <quorem+0x1c8>
   24e38:	18bfff04 	addi	r2,r3,-4
   24e3c:	a880082e 	bgeu	r21,r2,24e60 <quorem+0x1c4>
   24e40:	18ffff17 	ldw	r3,-4(r3)
   24e44:	18000326 	beq	r3,zero,24e54 <quorem+0x1b8>
   24e48:	00000506 	br	24e60 <quorem+0x1c4>
   24e4c:	10c00017 	ldw	r3,0(r2)
   24e50:	1800031e 	bne	r3,zero,24e60 <quorem+0x1c4>
   24e54:	10bfff04 	addi	r2,r2,-4
   24e58:	94bfffc4 	addi	r18,r18,-1
   24e5c:	a8bffb36 	bltu	r21,r2,24e4c <__alt_data_end+0xfffe4e4c>
   24e60:	84800415 	stw	r18,16(r16)
   24e64:	9805883a 	mov	r2,r19
   24e68:	dfc00817 	ldw	ra,32(sp)
   24e6c:	ddc00717 	ldw	r23,28(sp)
   24e70:	dd800617 	ldw	r22,24(sp)
   24e74:	dd400517 	ldw	r21,20(sp)
   24e78:	dd000417 	ldw	r20,16(sp)
   24e7c:	dcc00317 	ldw	r19,12(sp)
   24e80:	dc800217 	ldw	r18,8(sp)
   24e84:	dc400117 	ldw	r17,4(sp)
   24e88:	dc000017 	ldw	r16,0(sp)
   24e8c:	dec00904 	addi	sp,sp,36
   24e90:	f800283a 	ret
   24e94:	0005883a 	mov	r2,zero
   24e98:	003ff306 	br	24e68 <__alt_data_end+0xfffe4e68>

00024e9c <_dtoa_r>:
   24e9c:	20801017 	ldw	r2,64(r4)
   24ea0:	deffde04 	addi	sp,sp,-136
   24ea4:	df002015 	stw	fp,128(sp)
   24ea8:	dcc01b15 	stw	r19,108(sp)
   24eac:	dc801a15 	stw	r18,104(sp)
   24eb0:	dc401915 	stw	r17,100(sp)
   24eb4:	dc001815 	stw	r16,96(sp)
   24eb8:	dfc02115 	stw	ra,132(sp)
   24ebc:	ddc01f15 	stw	r23,124(sp)
   24ec0:	dd801e15 	stw	r22,120(sp)
   24ec4:	dd401d15 	stw	r21,116(sp)
   24ec8:	dd001c15 	stw	r20,112(sp)
   24ecc:	d9c00315 	stw	r7,12(sp)
   24ed0:	2039883a 	mov	fp,r4
   24ed4:	3023883a 	mov	r17,r6
   24ed8:	2825883a 	mov	r18,r5
   24edc:	dc002417 	ldw	r16,144(sp)
   24ee0:	3027883a 	mov	r19,r6
   24ee4:	10000826 	beq	r2,zero,24f08 <_dtoa_r+0x6c>
   24ee8:	21801117 	ldw	r6,68(r4)
   24eec:	00c00044 	movi	r3,1
   24ef0:	100b883a 	mov	r5,r2
   24ef4:	1986983a 	sll	r3,r3,r6
   24ef8:	11800115 	stw	r6,4(r2)
   24efc:	10c00215 	stw	r3,8(r2)
   24f00:	002704c0 	call	2704c <_Bfree>
   24f04:	e0001015 	stw	zero,64(fp)
   24f08:	88002e16 	blt	r17,zero,24fc4 <_dtoa_r+0x128>
   24f0c:	80000015 	stw	zero,0(r16)
   24f10:	889ffc2c 	andhi	r2,r17,32752
   24f14:	00dffc34 	movhi	r3,32752
   24f18:	10c01c26 	beq	r2,r3,24f8c <_dtoa_r+0xf0>
   24f1c:	000d883a 	mov	r6,zero
   24f20:	000f883a 	mov	r7,zero
   24f24:	9009883a 	mov	r4,r18
   24f28:	980b883a 	mov	r5,r19
   24f2c:	002c1000 	call	2c100 <__eqdf2>
   24f30:	10002b1e 	bne	r2,zero,24fe0 <_dtoa_r+0x144>
   24f34:	d9c02317 	ldw	r7,140(sp)
   24f38:	00800044 	movi	r2,1
   24f3c:	38800015 	stw	r2,0(r7)
   24f40:	d8802517 	ldw	r2,148(sp)
   24f44:	10019e26 	beq	r2,zero,255c0 <_dtoa_r+0x724>
   24f48:	d8c02517 	ldw	r3,148(sp)
   24f4c:	008000f4 	movhi	r2,3
   24f50:	10803044 	addi	r2,r2,193
   24f54:	18800015 	stw	r2,0(r3)
   24f58:	10bfffc4 	addi	r2,r2,-1
   24f5c:	dfc02117 	ldw	ra,132(sp)
   24f60:	df002017 	ldw	fp,128(sp)
   24f64:	ddc01f17 	ldw	r23,124(sp)
   24f68:	dd801e17 	ldw	r22,120(sp)
   24f6c:	dd401d17 	ldw	r21,116(sp)
   24f70:	dd001c17 	ldw	r20,112(sp)
   24f74:	dcc01b17 	ldw	r19,108(sp)
   24f78:	dc801a17 	ldw	r18,104(sp)
   24f7c:	dc401917 	ldw	r17,100(sp)
   24f80:	dc001817 	ldw	r16,96(sp)
   24f84:	dec02204 	addi	sp,sp,136
   24f88:	f800283a 	ret
   24f8c:	d8c02317 	ldw	r3,140(sp)
   24f90:	0089c3c4 	movi	r2,9999
   24f94:	18800015 	stw	r2,0(r3)
   24f98:	90017726 	beq	r18,zero,25578 <_dtoa_r+0x6dc>
   24f9c:	008000f4 	movhi	r2,3
   24fa0:	10803c04 	addi	r2,r2,240
   24fa4:	d9002517 	ldw	r4,148(sp)
   24fa8:	203fec26 	beq	r4,zero,24f5c <__alt_data_end+0xfffe4f5c>
   24fac:	10c000c7 	ldb	r3,3(r2)
   24fb0:	1801781e 	bne	r3,zero,25594 <_dtoa_r+0x6f8>
   24fb4:	10c000c4 	addi	r3,r2,3
   24fb8:	d9802517 	ldw	r6,148(sp)
   24fbc:	30c00015 	stw	r3,0(r6)
   24fc0:	003fe606 	br	24f5c <__alt_data_end+0xfffe4f5c>
   24fc4:	04e00034 	movhi	r19,32768
   24fc8:	9cffffc4 	addi	r19,r19,-1
   24fcc:	00800044 	movi	r2,1
   24fd0:	8ce6703a 	and	r19,r17,r19
   24fd4:	80800015 	stw	r2,0(r16)
   24fd8:	9823883a 	mov	r17,r19
   24fdc:	003fcc06 	br	24f10 <__alt_data_end+0xfffe4f10>
   24fe0:	d8800204 	addi	r2,sp,8
   24fe4:	d8800015 	stw	r2,0(sp)
   24fe8:	d9c00104 	addi	r7,sp,4
   24fec:	900b883a 	mov	r5,r18
   24ff0:	980d883a 	mov	r6,r19
   24ff4:	e009883a 	mov	r4,fp
   24ff8:	8820d53a 	srli	r16,r17,20
   24ffc:	0027c380 	call	27c38 <__d2b>
   25000:	d8800915 	stw	r2,36(sp)
   25004:	8001651e 	bne	r16,zero,2559c <_dtoa_r+0x700>
   25008:	dd800217 	ldw	r22,8(sp)
   2500c:	dc000117 	ldw	r16,4(sp)
   25010:	00800804 	movi	r2,32
   25014:	b421883a 	add	r16,r22,r16
   25018:	80c10c84 	addi	r3,r16,1074
   2501c:	10c2d10e 	bge	r2,r3,25b64 <_dtoa_r+0xcc8>
   25020:	00801004 	movi	r2,64
   25024:	81010484 	addi	r4,r16,1042
   25028:	10c7c83a 	sub	r3,r2,r3
   2502c:	9108d83a 	srl	r4,r18,r4
   25030:	88e2983a 	sll	r17,r17,r3
   25034:	2448b03a 	or	r4,r4,r17
   25038:	002d4c80 	call	2d4c8 <__floatunsidf>
   2503c:	017f8434 	movhi	r5,65040
   25040:	01800044 	movi	r6,1
   25044:	1009883a 	mov	r4,r2
   25048:	194b883a 	add	r5,r3,r5
   2504c:	843fffc4 	addi	r16,r16,-1
   25050:	d9801115 	stw	r6,68(sp)
   25054:	000d883a 	mov	r6,zero
   25058:	01cffe34 	movhi	r7,16376
   2505c:	002ca700 	call	2ca70 <__subdf3>
   25060:	0198dbf4 	movhi	r6,25455
   25064:	01cff4f4 	movhi	r7,16339
   25068:	3190d844 	addi	r6,r6,17249
   2506c:	39e1e9c4 	addi	r7,r7,-30809
   25070:	1009883a 	mov	r4,r2
   25074:	180b883a 	mov	r5,r3
   25078:	002c3580 	call	2c358 <__muldf3>
   2507c:	01a2d874 	movhi	r6,35681
   25080:	01cff1f4 	movhi	r7,16327
   25084:	31b22cc4 	addi	r6,r6,-14157
   25088:	39e28a04 	addi	r7,r7,-30168
   2508c:	180b883a 	mov	r5,r3
   25090:	1009883a 	mov	r4,r2
   25094:	002af6c0 	call	2af6c <__adddf3>
   25098:	8009883a 	mov	r4,r16
   2509c:	1029883a 	mov	r20,r2
   250a0:	1823883a 	mov	r17,r3
   250a4:	002d3ec0 	call	2d3ec <__floatsidf>
   250a8:	019427f4 	movhi	r6,20639
   250ac:	01cff4f4 	movhi	r7,16339
   250b0:	319e7ec4 	addi	r6,r6,31227
   250b4:	39d104c4 	addi	r7,r7,17427
   250b8:	1009883a 	mov	r4,r2
   250bc:	180b883a 	mov	r5,r3
   250c0:	002c3580 	call	2c358 <__muldf3>
   250c4:	100d883a 	mov	r6,r2
   250c8:	180f883a 	mov	r7,r3
   250cc:	a009883a 	mov	r4,r20
   250d0:	880b883a 	mov	r5,r17
   250d4:	002af6c0 	call	2af6c <__adddf3>
   250d8:	1009883a 	mov	r4,r2
   250dc:	180b883a 	mov	r5,r3
   250e0:	1029883a 	mov	r20,r2
   250e4:	1823883a 	mov	r17,r3
   250e8:	002d36c0 	call	2d36c <__fixdfsi>
   250ec:	000d883a 	mov	r6,zero
   250f0:	000f883a 	mov	r7,zero
   250f4:	a009883a 	mov	r4,r20
   250f8:	880b883a 	mov	r5,r17
   250fc:	d8800515 	stw	r2,20(sp)
   25100:	002c2640 	call	2c264 <__ledf2>
   25104:	10028716 	blt	r2,zero,25b24 <_dtoa_r+0xc88>
   25108:	d8c00517 	ldw	r3,20(sp)
   2510c:	00800584 	movi	r2,22
   25110:	10c27536 	bltu	r2,r3,25ae8 <_dtoa_r+0xc4c>
   25114:	180490fa 	slli	r2,r3,3
   25118:	00c000f4 	movhi	r3,3
   2511c:	18c05704 	addi	r3,r3,348
   25120:	1885883a 	add	r2,r3,r2
   25124:	11000017 	ldw	r4,0(r2)
   25128:	11400117 	ldw	r5,4(r2)
   2512c:	900d883a 	mov	r6,r18
   25130:	980f883a 	mov	r7,r19
   25134:	002c1880 	call	2c188 <__gedf2>
   25138:	00828d0e 	bge	zero,r2,25b70 <_dtoa_r+0xcd4>
   2513c:	d9000517 	ldw	r4,20(sp)
   25140:	d8000e15 	stw	zero,56(sp)
   25144:	213fffc4 	addi	r4,r4,-1
   25148:	d9000515 	stw	r4,20(sp)
   2514c:	b42dc83a 	sub	r22,r22,r16
   25150:	b5bfffc4 	addi	r22,r22,-1
   25154:	b0026f16 	blt	r22,zero,25b14 <_dtoa_r+0xc78>
   25158:	d8000815 	stw	zero,32(sp)
   2515c:	d9c00517 	ldw	r7,20(sp)
   25160:	38026416 	blt	r7,zero,25af4 <_dtoa_r+0xc58>
   25164:	b1ed883a 	add	r22,r22,r7
   25168:	d9c00d15 	stw	r7,52(sp)
   2516c:	d8000a15 	stw	zero,40(sp)
   25170:	d9800317 	ldw	r6,12(sp)
   25174:	00800244 	movi	r2,9
   25178:	11811436 	bltu	r2,r6,255cc <_dtoa_r+0x730>
   2517c:	00800144 	movi	r2,5
   25180:	1184e10e 	bge	r2,r6,26508 <_dtoa_r+0x166c>
   25184:	31bfff04 	addi	r6,r6,-4
   25188:	d9800315 	stw	r6,12(sp)
   2518c:	0023883a 	mov	r17,zero
   25190:	d9800317 	ldw	r6,12(sp)
   25194:	008000c4 	movi	r2,3
   25198:	30836726 	beq	r6,r2,25f38 <_dtoa_r+0x109c>
   2519c:	1183410e 	bge	r2,r6,25ea4 <_dtoa_r+0x1008>
   251a0:	d9c00317 	ldw	r7,12(sp)
   251a4:	00800104 	movi	r2,4
   251a8:	38827c26 	beq	r7,r2,25b9c <_dtoa_r+0xd00>
   251ac:	00800144 	movi	r2,5
   251b0:	3884c41e 	bne	r7,r2,264c4 <_dtoa_r+0x1628>
   251b4:	00800044 	movi	r2,1
   251b8:	d8800b15 	stw	r2,44(sp)
   251bc:	d8c00517 	ldw	r3,20(sp)
   251c0:	d9002217 	ldw	r4,136(sp)
   251c4:	1907883a 	add	r3,r3,r4
   251c8:	19800044 	addi	r6,r3,1
   251cc:	d8c00c15 	stw	r3,48(sp)
   251d0:	d9800615 	stw	r6,24(sp)
   251d4:	0183a40e 	bge	zero,r6,26068 <_dtoa_r+0x11cc>
   251d8:	d9800617 	ldw	r6,24(sp)
   251dc:	3021883a 	mov	r16,r6
   251e0:	e0001115 	stw	zero,68(fp)
   251e4:	008005c4 	movi	r2,23
   251e8:	1184c92e 	bgeu	r2,r6,26510 <_dtoa_r+0x1674>
   251ec:	00c00044 	movi	r3,1
   251f0:	00800104 	movi	r2,4
   251f4:	1085883a 	add	r2,r2,r2
   251f8:	11000504 	addi	r4,r2,20
   251fc:	180b883a 	mov	r5,r3
   25200:	18c00044 	addi	r3,r3,1
   25204:	313ffb2e 	bgeu	r6,r4,251f4 <__alt_data_end+0xfffe51f4>
   25208:	e1401115 	stw	r5,68(fp)
   2520c:	e009883a 	mov	r4,fp
   25210:	0026fa40 	call	26fa4 <_Balloc>
   25214:	d8800715 	stw	r2,28(sp)
   25218:	e0801015 	stw	r2,64(fp)
   2521c:	00800384 	movi	r2,14
   25220:	1400f736 	bltu	r2,r16,25600 <_dtoa_r+0x764>
   25224:	8800f626 	beq	r17,zero,25600 <_dtoa_r+0x764>
   25228:	d9c00517 	ldw	r7,20(sp)
   2522c:	01c39a0e 	bge	zero,r7,26098 <_dtoa_r+0x11fc>
   25230:	388003cc 	andi	r2,r7,15
   25234:	100490fa 	slli	r2,r2,3
   25238:	382bd13a 	srai	r21,r7,4
   2523c:	00c000f4 	movhi	r3,3
   25240:	18c05704 	addi	r3,r3,348
   25244:	1885883a 	add	r2,r3,r2
   25248:	a8c0040c 	andi	r3,r21,16
   2524c:	12400017 	ldw	r9,0(r2)
   25250:	12000117 	ldw	r8,4(r2)
   25254:	18037926 	beq	r3,zero,2603c <_dtoa_r+0x11a0>
   25258:	008000f4 	movhi	r2,3
   2525c:	10804d04 	addi	r2,r2,308
   25260:	11800817 	ldw	r6,32(r2)
   25264:	11c00917 	ldw	r7,36(r2)
   25268:	9009883a 	mov	r4,r18
   2526c:	980b883a 	mov	r5,r19
   25270:	da001715 	stw	r8,92(sp)
   25274:	da401615 	stw	r9,88(sp)
   25278:	002b8180 	call	2b818 <__divdf3>
   2527c:	da001717 	ldw	r8,92(sp)
   25280:	da401617 	ldw	r9,88(sp)
   25284:	ad4003cc 	andi	r21,r21,15
   25288:	040000c4 	movi	r16,3
   2528c:	1023883a 	mov	r17,r2
   25290:	1829883a 	mov	r20,r3
   25294:	a8001126 	beq	r21,zero,252dc <_dtoa_r+0x440>
   25298:	05c000f4 	movhi	r23,3
   2529c:	bdc04d04 	addi	r23,r23,308
   252a0:	4805883a 	mov	r2,r9
   252a4:	4007883a 	mov	r3,r8
   252a8:	a980004c 	andi	r6,r21,1
   252ac:	1009883a 	mov	r4,r2
   252b0:	a82bd07a 	srai	r21,r21,1
   252b4:	180b883a 	mov	r5,r3
   252b8:	30000426 	beq	r6,zero,252cc <_dtoa_r+0x430>
   252bc:	b9800017 	ldw	r6,0(r23)
   252c0:	b9c00117 	ldw	r7,4(r23)
   252c4:	84000044 	addi	r16,r16,1
   252c8:	002c3580 	call	2c358 <__muldf3>
   252cc:	bdc00204 	addi	r23,r23,8
   252d0:	a83ff51e 	bne	r21,zero,252a8 <__alt_data_end+0xfffe52a8>
   252d4:	1013883a 	mov	r9,r2
   252d8:	1811883a 	mov	r8,r3
   252dc:	480d883a 	mov	r6,r9
   252e0:	400f883a 	mov	r7,r8
   252e4:	8809883a 	mov	r4,r17
   252e8:	a00b883a 	mov	r5,r20
   252ec:	002b8180 	call	2b818 <__divdf3>
   252f0:	d8800f15 	stw	r2,60(sp)
   252f4:	d8c01015 	stw	r3,64(sp)
   252f8:	d8c00e17 	ldw	r3,56(sp)
   252fc:	18000626 	beq	r3,zero,25318 <_dtoa_r+0x47c>
   25300:	d9000f17 	ldw	r4,60(sp)
   25304:	d9401017 	ldw	r5,64(sp)
   25308:	000d883a 	mov	r6,zero
   2530c:	01cffc34 	movhi	r7,16368
   25310:	002c2640 	call	2c264 <__ledf2>
   25314:	10040b16 	blt	r2,zero,26344 <_dtoa_r+0x14a8>
   25318:	8009883a 	mov	r4,r16
   2531c:	002d3ec0 	call	2d3ec <__floatsidf>
   25320:	d9800f17 	ldw	r6,60(sp)
   25324:	d9c01017 	ldw	r7,64(sp)
   25328:	1009883a 	mov	r4,r2
   2532c:	180b883a 	mov	r5,r3
   25330:	002c3580 	call	2c358 <__muldf3>
   25334:	000d883a 	mov	r6,zero
   25338:	01d00734 	movhi	r7,16412
   2533c:	1009883a 	mov	r4,r2
   25340:	180b883a 	mov	r5,r3
   25344:	002af6c0 	call	2af6c <__adddf3>
   25348:	1021883a 	mov	r16,r2
   2534c:	d8800617 	ldw	r2,24(sp)
   25350:	047f3034 	movhi	r17,64704
   25354:	1c63883a 	add	r17,r3,r17
   25358:	10031826 	beq	r2,zero,25fbc <_dtoa_r+0x1120>
   2535c:	d8c00517 	ldw	r3,20(sp)
   25360:	db000617 	ldw	r12,24(sp)
   25364:	d8c01315 	stw	r3,76(sp)
   25368:	d9000b17 	ldw	r4,44(sp)
   2536c:	20038f26 	beq	r4,zero,261ac <_dtoa_r+0x1310>
   25370:	60bfffc4 	addi	r2,r12,-1
   25374:	100490fa 	slli	r2,r2,3
   25378:	00c000f4 	movhi	r3,3
   2537c:	18c05704 	addi	r3,r3,348
   25380:	1885883a 	add	r2,r3,r2
   25384:	11800017 	ldw	r6,0(r2)
   25388:	11c00117 	ldw	r7,4(r2)
   2538c:	d8800717 	ldw	r2,28(sp)
   25390:	0009883a 	mov	r4,zero
   25394:	014ff834 	movhi	r5,16352
   25398:	db001615 	stw	r12,88(sp)
   2539c:	15c00044 	addi	r23,r2,1
   253a0:	002b8180 	call	2b818 <__divdf3>
   253a4:	800d883a 	mov	r6,r16
   253a8:	880f883a 	mov	r7,r17
   253ac:	1009883a 	mov	r4,r2
   253b0:	180b883a 	mov	r5,r3
   253b4:	002ca700 	call	2ca70 <__subdf3>
   253b8:	d9401017 	ldw	r5,64(sp)
   253bc:	d9000f17 	ldw	r4,60(sp)
   253c0:	102b883a 	mov	r21,r2
   253c4:	d8c01215 	stw	r3,72(sp)
   253c8:	002d36c0 	call	2d36c <__fixdfsi>
   253cc:	1009883a 	mov	r4,r2
   253d0:	1029883a 	mov	r20,r2
   253d4:	002d3ec0 	call	2d3ec <__floatsidf>
   253d8:	d9000f17 	ldw	r4,60(sp)
   253dc:	d9401017 	ldw	r5,64(sp)
   253e0:	100d883a 	mov	r6,r2
   253e4:	180f883a 	mov	r7,r3
   253e8:	002ca700 	call	2ca70 <__subdf3>
   253ec:	1823883a 	mov	r17,r3
   253f0:	d8c00717 	ldw	r3,28(sp)
   253f4:	d9401217 	ldw	r5,72(sp)
   253f8:	a2000c04 	addi	r8,r20,48
   253fc:	1021883a 	mov	r16,r2
   25400:	1a000005 	stb	r8,0(r3)
   25404:	800d883a 	mov	r6,r16
   25408:	880f883a 	mov	r7,r17
   2540c:	a809883a 	mov	r4,r21
   25410:	4029883a 	mov	r20,r8
   25414:	002c1880 	call	2c188 <__gedf2>
   25418:	00841d16 	blt	zero,r2,26490 <_dtoa_r+0x15f4>
   2541c:	800d883a 	mov	r6,r16
   25420:	880f883a 	mov	r7,r17
   25424:	0009883a 	mov	r4,zero
   25428:	014ffc34 	movhi	r5,16368
   2542c:	002ca700 	call	2ca70 <__subdf3>
   25430:	d9401217 	ldw	r5,72(sp)
   25434:	100d883a 	mov	r6,r2
   25438:	180f883a 	mov	r7,r3
   2543c:	a809883a 	mov	r4,r21
   25440:	002c1880 	call	2c188 <__gedf2>
   25444:	db001617 	ldw	r12,88(sp)
   25448:	00840e16 	blt	zero,r2,26484 <_dtoa_r+0x15e8>
   2544c:	00800044 	movi	r2,1
   25450:	13006b0e 	bge	r2,r12,25600 <_dtoa_r+0x764>
   25454:	d9000717 	ldw	r4,28(sp)
   25458:	dd800f15 	stw	r22,60(sp)
   2545c:	dcc01015 	stw	r19,64(sp)
   25460:	2319883a 	add	r12,r4,r12
   25464:	dcc01217 	ldw	r19,72(sp)
   25468:	602d883a 	mov	r22,r12
   2546c:	dc801215 	stw	r18,72(sp)
   25470:	b825883a 	mov	r18,r23
   25474:	00000906 	br	2549c <_dtoa_r+0x600>
   25478:	002ca700 	call	2ca70 <__subdf3>
   2547c:	a80d883a 	mov	r6,r21
   25480:	980f883a 	mov	r7,r19
   25484:	1009883a 	mov	r4,r2
   25488:	180b883a 	mov	r5,r3
   2548c:	002c2640 	call	2c264 <__ledf2>
   25490:	1003e816 	blt	r2,zero,26434 <_dtoa_r+0x1598>
   25494:	b825883a 	mov	r18,r23
   25498:	bd83e926 	beq	r23,r22,26440 <_dtoa_r+0x15a4>
   2549c:	a809883a 	mov	r4,r21
   254a0:	980b883a 	mov	r5,r19
   254a4:	000d883a 	mov	r6,zero
   254a8:	01d00934 	movhi	r7,16420
   254ac:	002c3580 	call	2c358 <__muldf3>
   254b0:	000d883a 	mov	r6,zero
   254b4:	01d00934 	movhi	r7,16420
   254b8:	8009883a 	mov	r4,r16
   254bc:	880b883a 	mov	r5,r17
   254c0:	102b883a 	mov	r21,r2
   254c4:	1827883a 	mov	r19,r3
   254c8:	002c3580 	call	2c358 <__muldf3>
   254cc:	180b883a 	mov	r5,r3
   254d0:	1009883a 	mov	r4,r2
   254d4:	1821883a 	mov	r16,r3
   254d8:	1023883a 	mov	r17,r2
   254dc:	002d36c0 	call	2d36c <__fixdfsi>
   254e0:	1009883a 	mov	r4,r2
   254e4:	1029883a 	mov	r20,r2
   254e8:	002d3ec0 	call	2d3ec <__floatsidf>
   254ec:	8809883a 	mov	r4,r17
   254f0:	800b883a 	mov	r5,r16
   254f4:	100d883a 	mov	r6,r2
   254f8:	180f883a 	mov	r7,r3
   254fc:	002ca700 	call	2ca70 <__subdf3>
   25500:	a5000c04 	addi	r20,r20,48
   25504:	a80d883a 	mov	r6,r21
   25508:	980f883a 	mov	r7,r19
   2550c:	1009883a 	mov	r4,r2
   25510:	180b883a 	mov	r5,r3
   25514:	95000005 	stb	r20,0(r18)
   25518:	1021883a 	mov	r16,r2
   2551c:	1823883a 	mov	r17,r3
   25520:	002c2640 	call	2c264 <__ledf2>
   25524:	bdc00044 	addi	r23,r23,1
   25528:	800d883a 	mov	r6,r16
   2552c:	880f883a 	mov	r7,r17
   25530:	0009883a 	mov	r4,zero
   25534:	014ffc34 	movhi	r5,16368
   25538:	103fcf0e 	bge	r2,zero,25478 <__alt_data_end+0xfffe5478>
   2553c:	d8c01317 	ldw	r3,76(sp)
   25540:	d8c00515 	stw	r3,20(sp)
   25544:	d9400917 	ldw	r5,36(sp)
   25548:	e009883a 	mov	r4,fp
   2554c:	002704c0 	call	2704c <_Bfree>
   25550:	d9000517 	ldw	r4,20(sp)
   25554:	d9802317 	ldw	r6,140(sp)
   25558:	d9c02517 	ldw	r7,148(sp)
   2555c:	b8000005 	stb	zero,0(r23)
   25560:	20800044 	addi	r2,r4,1
   25564:	30800015 	stw	r2,0(r6)
   25568:	3802aa26 	beq	r7,zero,26014 <_dtoa_r+0x1178>
   2556c:	3dc00015 	stw	r23,0(r7)
   25570:	d8800717 	ldw	r2,28(sp)
   25574:	003e7906 	br	24f5c <__alt_data_end+0xfffe4f5c>
   25578:	00800434 	movhi	r2,16
   2557c:	10bfffc4 	addi	r2,r2,-1
   25580:	88a2703a 	and	r17,r17,r2
   25584:	883e851e 	bne	r17,zero,24f9c <__alt_data_end+0xfffe4f9c>
   25588:	008000f4 	movhi	r2,3
   2558c:	10803904 	addi	r2,r2,228
   25590:	003e8406 	br	24fa4 <__alt_data_end+0xfffe4fa4>
   25594:	10c00204 	addi	r3,r2,8
   25598:	003e8706 	br	24fb8 <__alt_data_end+0xfffe4fb8>
   2559c:	01400434 	movhi	r5,16
   255a0:	297fffc4 	addi	r5,r5,-1
   255a4:	994a703a 	and	r5,r19,r5
   255a8:	9009883a 	mov	r4,r18
   255ac:	843f0044 	addi	r16,r16,-1023
   255b0:	294ffc34 	orhi	r5,r5,16368
   255b4:	dd800217 	ldw	r22,8(sp)
   255b8:	d8001115 	stw	zero,68(sp)
   255bc:	003ea506 	br	25054 <__alt_data_end+0xfffe5054>
   255c0:	008000f4 	movhi	r2,3
   255c4:	10803004 	addi	r2,r2,192
   255c8:	003e6406 	br	24f5c <__alt_data_end+0xfffe4f5c>
   255cc:	e0001115 	stw	zero,68(fp)
   255d0:	000b883a 	mov	r5,zero
   255d4:	e009883a 	mov	r4,fp
   255d8:	0026fa40 	call	26fa4 <_Balloc>
   255dc:	01bfffc4 	movi	r6,-1
   255e0:	01c00044 	movi	r7,1
   255e4:	d8800715 	stw	r2,28(sp)
   255e8:	d9800c15 	stw	r6,48(sp)
   255ec:	e0801015 	stw	r2,64(fp)
   255f0:	d8000315 	stw	zero,12(sp)
   255f4:	d9c00b15 	stw	r7,44(sp)
   255f8:	d9800615 	stw	r6,24(sp)
   255fc:	d8002215 	stw	zero,136(sp)
   25600:	d8800117 	ldw	r2,4(sp)
   25604:	10008916 	blt	r2,zero,2582c <_dtoa_r+0x990>
   25608:	d9000517 	ldw	r4,20(sp)
   2560c:	00c00384 	movi	r3,14
   25610:	19008616 	blt	r3,r4,2582c <_dtoa_r+0x990>
   25614:	200490fa 	slli	r2,r4,3
   25618:	00c000f4 	movhi	r3,3
   2561c:	d9802217 	ldw	r6,136(sp)
   25620:	18c05704 	addi	r3,r3,348
   25624:	1885883a 	add	r2,r3,r2
   25628:	14000017 	ldw	r16,0(r2)
   2562c:	14400117 	ldw	r17,4(r2)
   25630:	30016316 	blt	r6,zero,25bc0 <_dtoa_r+0xd24>
   25634:	800d883a 	mov	r6,r16
   25638:	880f883a 	mov	r7,r17
   2563c:	9009883a 	mov	r4,r18
   25640:	980b883a 	mov	r5,r19
   25644:	002b8180 	call	2b818 <__divdf3>
   25648:	180b883a 	mov	r5,r3
   2564c:	1009883a 	mov	r4,r2
   25650:	002d36c0 	call	2d36c <__fixdfsi>
   25654:	1009883a 	mov	r4,r2
   25658:	102b883a 	mov	r21,r2
   2565c:	002d3ec0 	call	2d3ec <__floatsidf>
   25660:	800d883a 	mov	r6,r16
   25664:	880f883a 	mov	r7,r17
   25668:	1009883a 	mov	r4,r2
   2566c:	180b883a 	mov	r5,r3
   25670:	002c3580 	call	2c358 <__muldf3>
   25674:	100d883a 	mov	r6,r2
   25678:	180f883a 	mov	r7,r3
   2567c:	9009883a 	mov	r4,r18
   25680:	980b883a 	mov	r5,r19
   25684:	002ca700 	call	2ca70 <__subdf3>
   25688:	d9c00717 	ldw	r7,28(sp)
   2568c:	1009883a 	mov	r4,r2
   25690:	a8800c04 	addi	r2,r21,48
   25694:	38800005 	stb	r2,0(r7)
   25698:	3dc00044 	addi	r23,r7,1
   2569c:	d9c00617 	ldw	r7,24(sp)
   256a0:	01800044 	movi	r6,1
   256a4:	180b883a 	mov	r5,r3
   256a8:	2005883a 	mov	r2,r4
   256ac:	39803826 	beq	r7,r6,25790 <_dtoa_r+0x8f4>
   256b0:	000d883a 	mov	r6,zero
   256b4:	01d00934 	movhi	r7,16420
   256b8:	002c3580 	call	2c358 <__muldf3>
   256bc:	000d883a 	mov	r6,zero
   256c0:	000f883a 	mov	r7,zero
   256c4:	1009883a 	mov	r4,r2
   256c8:	180b883a 	mov	r5,r3
   256cc:	1025883a 	mov	r18,r2
   256d0:	1827883a 	mov	r19,r3
   256d4:	002c1000 	call	2c100 <__eqdf2>
   256d8:	103f9a26 	beq	r2,zero,25544 <__alt_data_end+0xfffe5544>
   256dc:	d9c00617 	ldw	r7,24(sp)
   256e0:	d8c00717 	ldw	r3,28(sp)
   256e4:	b829883a 	mov	r20,r23
   256e8:	38bfffc4 	addi	r2,r7,-1
   256ec:	18ad883a 	add	r22,r3,r2
   256f0:	00000a06 	br	2571c <_dtoa_r+0x880>
   256f4:	002c3580 	call	2c358 <__muldf3>
   256f8:	000d883a 	mov	r6,zero
   256fc:	000f883a 	mov	r7,zero
   25700:	1009883a 	mov	r4,r2
   25704:	180b883a 	mov	r5,r3
   25708:	1025883a 	mov	r18,r2
   2570c:	1827883a 	mov	r19,r3
   25710:	b829883a 	mov	r20,r23
   25714:	002c1000 	call	2c100 <__eqdf2>
   25718:	103f8a26 	beq	r2,zero,25544 <__alt_data_end+0xfffe5544>
   2571c:	800d883a 	mov	r6,r16
   25720:	880f883a 	mov	r7,r17
   25724:	9009883a 	mov	r4,r18
   25728:	980b883a 	mov	r5,r19
   2572c:	002b8180 	call	2b818 <__divdf3>
   25730:	180b883a 	mov	r5,r3
   25734:	1009883a 	mov	r4,r2
   25738:	002d36c0 	call	2d36c <__fixdfsi>
   2573c:	1009883a 	mov	r4,r2
   25740:	102b883a 	mov	r21,r2
   25744:	002d3ec0 	call	2d3ec <__floatsidf>
   25748:	800d883a 	mov	r6,r16
   2574c:	880f883a 	mov	r7,r17
   25750:	1009883a 	mov	r4,r2
   25754:	180b883a 	mov	r5,r3
   25758:	002c3580 	call	2c358 <__muldf3>
   2575c:	100d883a 	mov	r6,r2
   25760:	180f883a 	mov	r7,r3
   25764:	9009883a 	mov	r4,r18
   25768:	980b883a 	mov	r5,r19
   2576c:	002ca700 	call	2ca70 <__subdf3>
   25770:	aa000c04 	addi	r8,r21,48
   25774:	a2000005 	stb	r8,0(r20)
   25778:	000d883a 	mov	r6,zero
   2577c:	01d00934 	movhi	r7,16420
   25780:	1009883a 	mov	r4,r2
   25784:	180b883a 	mov	r5,r3
   25788:	a5c00044 	addi	r23,r20,1
   2578c:	b53fd91e 	bne	r22,r20,256f4 <__alt_data_end+0xfffe56f4>
   25790:	100d883a 	mov	r6,r2
   25794:	180f883a 	mov	r7,r3
   25798:	1009883a 	mov	r4,r2
   2579c:	180b883a 	mov	r5,r3
   257a0:	002af6c0 	call	2af6c <__adddf3>
   257a4:	100d883a 	mov	r6,r2
   257a8:	180f883a 	mov	r7,r3
   257ac:	8009883a 	mov	r4,r16
   257b0:	880b883a 	mov	r5,r17
   257b4:	1027883a 	mov	r19,r2
   257b8:	1825883a 	mov	r18,r3
   257bc:	002c2640 	call	2c264 <__ledf2>
   257c0:	10000816 	blt	r2,zero,257e4 <_dtoa_r+0x948>
   257c4:	980d883a 	mov	r6,r19
   257c8:	900f883a 	mov	r7,r18
   257cc:	8009883a 	mov	r4,r16
   257d0:	880b883a 	mov	r5,r17
   257d4:	002c1000 	call	2c100 <__eqdf2>
   257d8:	103f5a1e 	bne	r2,zero,25544 <__alt_data_end+0xfffe5544>
   257dc:	ad40004c 	andi	r21,r21,1
   257e0:	a83f5826 	beq	r21,zero,25544 <__alt_data_end+0xfffe5544>
   257e4:	bd3fffc3 	ldbu	r20,-1(r23)
   257e8:	b8bfffc4 	addi	r2,r23,-1
   257ec:	1007883a 	mov	r3,r2
   257f0:	01400e44 	movi	r5,57
   257f4:	d9800717 	ldw	r6,28(sp)
   257f8:	00000506 	br	25810 <_dtoa_r+0x974>
   257fc:	18ffffc4 	addi	r3,r3,-1
   25800:	11824726 	beq	r2,r6,26120 <_dtoa_r+0x1284>
   25804:	1d000003 	ldbu	r20,0(r3)
   25808:	102f883a 	mov	r23,r2
   2580c:	10bfffc4 	addi	r2,r2,-1
   25810:	a1003fcc 	andi	r4,r20,255
   25814:	2100201c 	xori	r4,r4,128
   25818:	213fe004 	addi	r4,r4,-128
   2581c:	217ff726 	beq	r4,r5,257fc <__alt_data_end+0xfffe57fc>
   25820:	a2000044 	addi	r8,r20,1
   25824:	12000005 	stb	r8,0(r2)
   25828:	003f4606 	br	25544 <__alt_data_end+0xfffe5544>
   2582c:	d9000b17 	ldw	r4,44(sp)
   25830:	2000c826 	beq	r4,zero,25b54 <_dtoa_r+0xcb8>
   25834:	d9800317 	ldw	r6,12(sp)
   25838:	00c00044 	movi	r3,1
   2583c:	1980f90e 	bge	r3,r6,25c24 <_dtoa_r+0xd88>
   25840:	d8800617 	ldw	r2,24(sp)
   25844:	d8c00a17 	ldw	r3,40(sp)
   25848:	157fffc4 	addi	r21,r2,-1
   2584c:	1d41f316 	blt	r3,r21,2601c <_dtoa_r+0x1180>
   25850:	1d6bc83a 	sub	r21,r3,r21
   25854:	d9c00617 	ldw	r7,24(sp)
   25858:	3802aa16 	blt	r7,zero,26304 <_dtoa_r+0x1468>
   2585c:	dd000817 	ldw	r20,32(sp)
   25860:	d8800617 	ldw	r2,24(sp)
   25864:	d8c00817 	ldw	r3,32(sp)
   25868:	01400044 	movi	r5,1
   2586c:	e009883a 	mov	r4,fp
   25870:	1887883a 	add	r3,r3,r2
   25874:	d8c00815 	stw	r3,32(sp)
   25878:	b0ad883a 	add	r22,r22,r2
   2587c:	00273b00 	call	273b0 <__i2b>
   25880:	1023883a 	mov	r17,r2
   25884:	a0000826 	beq	r20,zero,258a8 <_dtoa_r+0xa0c>
   25888:	0580070e 	bge	zero,r22,258a8 <_dtoa_r+0xa0c>
   2588c:	a005883a 	mov	r2,r20
   25890:	b500b916 	blt	r22,r20,25b78 <_dtoa_r+0xcdc>
   25894:	d9000817 	ldw	r4,32(sp)
   25898:	a0a9c83a 	sub	r20,r20,r2
   2589c:	b0adc83a 	sub	r22,r22,r2
   258a0:	2089c83a 	sub	r4,r4,r2
   258a4:	d9000815 	stw	r4,32(sp)
   258a8:	d9800a17 	ldw	r6,40(sp)
   258ac:	0181810e 	bge	zero,r6,25eb4 <_dtoa_r+0x1018>
   258b0:	d9c00b17 	ldw	r7,44(sp)
   258b4:	3800b326 	beq	r7,zero,25b84 <_dtoa_r+0xce8>
   258b8:	a800b226 	beq	r21,zero,25b84 <_dtoa_r+0xce8>
   258bc:	880b883a 	mov	r5,r17
   258c0:	a80d883a 	mov	r6,r21
   258c4:	e009883a 	mov	r4,fp
   258c8:	00275e40 	call	275e4 <__pow5mult>
   258cc:	d9800917 	ldw	r6,36(sp)
   258d0:	100b883a 	mov	r5,r2
   258d4:	e009883a 	mov	r4,fp
   258d8:	1023883a 	mov	r17,r2
   258dc:	00273ec0 	call	273ec <__multiply>
   258e0:	1021883a 	mov	r16,r2
   258e4:	d8800a17 	ldw	r2,40(sp)
   258e8:	d9400917 	ldw	r5,36(sp)
   258ec:	e009883a 	mov	r4,fp
   258f0:	1545c83a 	sub	r2,r2,r21
   258f4:	d8800a15 	stw	r2,40(sp)
   258f8:	002704c0 	call	2704c <_Bfree>
   258fc:	d8c00a17 	ldw	r3,40(sp)
   25900:	18009f1e 	bne	r3,zero,25b80 <_dtoa_r+0xce4>
   25904:	05c00044 	movi	r23,1
   25908:	e009883a 	mov	r4,fp
   2590c:	b80b883a 	mov	r5,r23
   25910:	00273b00 	call	273b0 <__i2b>
   25914:	d9000d17 	ldw	r4,52(sp)
   25918:	102b883a 	mov	r21,r2
   2591c:	2000ce26 	beq	r4,zero,25c58 <_dtoa_r+0xdbc>
   25920:	200d883a 	mov	r6,r4
   25924:	100b883a 	mov	r5,r2
   25928:	e009883a 	mov	r4,fp
   2592c:	00275e40 	call	275e4 <__pow5mult>
   25930:	d9800317 	ldw	r6,12(sp)
   25934:	102b883a 	mov	r21,r2
   25938:	b981810e 	bge	r23,r6,25f40 <_dtoa_r+0x10a4>
   2593c:	0027883a 	mov	r19,zero
   25940:	a8800417 	ldw	r2,16(r21)
   25944:	05c00804 	movi	r23,32
   25948:	10800104 	addi	r2,r2,4
   2594c:	1085883a 	add	r2,r2,r2
   25950:	1085883a 	add	r2,r2,r2
   25954:	a885883a 	add	r2,r21,r2
   25958:	11000017 	ldw	r4,0(r2)
   2595c:	00272980 	call	27298 <__hi0bits>
   25960:	b885c83a 	sub	r2,r23,r2
   25964:	1585883a 	add	r2,r2,r22
   25968:	108007cc 	andi	r2,r2,31
   2596c:	1000b326 	beq	r2,zero,25c3c <_dtoa_r+0xda0>
   25970:	00c00804 	movi	r3,32
   25974:	1887c83a 	sub	r3,r3,r2
   25978:	01000104 	movi	r4,4
   2597c:	20c2cd0e 	bge	r4,r3,264b4 <_dtoa_r+0x1618>
   25980:	00c00704 	movi	r3,28
   25984:	1885c83a 	sub	r2,r3,r2
   25988:	d8c00817 	ldw	r3,32(sp)
   2598c:	a0a9883a 	add	r20,r20,r2
   25990:	b0ad883a 	add	r22,r22,r2
   25994:	1887883a 	add	r3,r3,r2
   25998:	d8c00815 	stw	r3,32(sp)
   2599c:	d9800817 	ldw	r6,32(sp)
   259a0:	0180040e 	bge	zero,r6,259b4 <_dtoa_r+0xb18>
   259a4:	800b883a 	mov	r5,r16
   259a8:	e009883a 	mov	r4,fp
   259ac:	00277240 	call	27724 <__lshift>
   259b0:	1021883a 	mov	r16,r2
   259b4:	0580050e 	bge	zero,r22,259cc <_dtoa_r+0xb30>
   259b8:	a80b883a 	mov	r5,r21
   259bc:	b00d883a 	mov	r6,r22
   259c0:	e009883a 	mov	r4,fp
   259c4:	00277240 	call	27724 <__lshift>
   259c8:	102b883a 	mov	r21,r2
   259cc:	d9c00e17 	ldw	r7,56(sp)
   259d0:	3801211e 	bne	r7,zero,25e58 <_dtoa_r+0xfbc>
   259d4:	d9800617 	ldw	r6,24(sp)
   259d8:	0181380e 	bge	zero,r6,25ebc <_dtoa_r+0x1020>
   259dc:	d8c00b17 	ldw	r3,44(sp)
   259e0:	1800ab1e 	bne	r3,zero,25c90 <_dtoa_r+0xdf4>
   259e4:	dc800717 	ldw	r18,28(sp)
   259e8:	dcc00617 	ldw	r19,24(sp)
   259ec:	9029883a 	mov	r20,r18
   259f0:	00000206 	br	259fc <_dtoa_r+0xb60>
   259f4:	00270740 	call	27074 <__multadd>
   259f8:	1021883a 	mov	r16,r2
   259fc:	a80b883a 	mov	r5,r21
   25a00:	8009883a 	mov	r4,r16
   25a04:	0024c9c0 	call	24c9c <quorem>
   25a08:	10800c04 	addi	r2,r2,48
   25a0c:	90800005 	stb	r2,0(r18)
   25a10:	94800044 	addi	r18,r18,1
   25a14:	9507c83a 	sub	r3,r18,r20
   25a18:	000f883a 	mov	r7,zero
   25a1c:	01800284 	movi	r6,10
   25a20:	800b883a 	mov	r5,r16
   25a24:	e009883a 	mov	r4,fp
   25a28:	1cfff216 	blt	r3,r19,259f4 <__alt_data_end+0xfffe59f4>
   25a2c:	1011883a 	mov	r8,r2
   25a30:	d8800617 	ldw	r2,24(sp)
   25a34:	0082370e 	bge	zero,r2,26314 <_dtoa_r+0x1478>
   25a38:	d9000717 	ldw	r4,28(sp)
   25a3c:	0025883a 	mov	r18,zero
   25a40:	20af883a 	add	r23,r4,r2
   25a44:	01800044 	movi	r6,1
   25a48:	800b883a 	mov	r5,r16
   25a4c:	e009883a 	mov	r4,fp
   25a50:	da001715 	stw	r8,92(sp)
   25a54:	00277240 	call	27724 <__lshift>
   25a58:	a80b883a 	mov	r5,r21
   25a5c:	1009883a 	mov	r4,r2
   25a60:	d8800915 	stw	r2,36(sp)
   25a64:	002786c0 	call	2786c <__mcmp>
   25a68:	da001717 	ldw	r8,92(sp)
   25a6c:	0081800e 	bge	zero,r2,26070 <_dtoa_r+0x11d4>
   25a70:	b93fffc3 	ldbu	r4,-1(r23)
   25a74:	b8bfffc4 	addi	r2,r23,-1
   25a78:	1007883a 	mov	r3,r2
   25a7c:	01800e44 	movi	r6,57
   25a80:	d9c00717 	ldw	r7,28(sp)
   25a84:	00000506 	br	25a9c <_dtoa_r+0xc00>
   25a88:	18ffffc4 	addi	r3,r3,-1
   25a8c:	11c12326 	beq	r2,r7,25f1c <_dtoa_r+0x1080>
   25a90:	19000003 	ldbu	r4,0(r3)
   25a94:	102f883a 	mov	r23,r2
   25a98:	10bfffc4 	addi	r2,r2,-1
   25a9c:	21403fcc 	andi	r5,r4,255
   25aa0:	2940201c 	xori	r5,r5,128
   25aa4:	297fe004 	addi	r5,r5,-128
   25aa8:	29bff726 	beq	r5,r6,25a88 <__alt_data_end+0xfffe5a88>
   25aac:	21000044 	addi	r4,r4,1
   25ab0:	11000005 	stb	r4,0(r2)
   25ab4:	a80b883a 	mov	r5,r21
   25ab8:	e009883a 	mov	r4,fp
   25abc:	002704c0 	call	2704c <_Bfree>
   25ac0:	883ea026 	beq	r17,zero,25544 <__alt_data_end+0xfffe5544>
   25ac4:	90000426 	beq	r18,zero,25ad8 <_dtoa_r+0xc3c>
   25ac8:	94400326 	beq	r18,r17,25ad8 <_dtoa_r+0xc3c>
   25acc:	900b883a 	mov	r5,r18
   25ad0:	e009883a 	mov	r4,fp
   25ad4:	002704c0 	call	2704c <_Bfree>
   25ad8:	880b883a 	mov	r5,r17
   25adc:	e009883a 	mov	r4,fp
   25ae0:	002704c0 	call	2704c <_Bfree>
   25ae4:	003e9706 	br	25544 <__alt_data_end+0xfffe5544>
   25ae8:	01800044 	movi	r6,1
   25aec:	d9800e15 	stw	r6,56(sp)
   25af0:	003d9606 	br	2514c <__alt_data_end+0xfffe514c>
   25af4:	d8800817 	ldw	r2,32(sp)
   25af8:	d8c00517 	ldw	r3,20(sp)
   25afc:	d8000d15 	stw	zero,52(sp)
   25b00:	10c5c83a 	sub	r2,r2,r3
   25b04:	00c9c83a 	sub	r4,zero,r3
   25b08:	d8800815 	stw	r2,32(sp)
   25b0c:	d9000a15 	stw	r4,40(sp)
   25b10:	003d9706 	br	25170 <__alt_data_end+0xfffe5170>
   25b14:	05adc83a 	sub	r22,zero,r22
   25b18:	dd800815 	stw	r22,32(sp)
   25b1c:	002d883a 	mov	r22,zero
   25b20:	003d8e06 	br	2515c <__alt_data_end+0xfffe515c>
   25b24:	d9000517 	ldw	r4,20(sp)
   25b28:	002d3ec0 	call	2d3ec <__floatsidf>
   25b2c:	100d883a 	mov	r6,r2
   25b30:	180f883a 	mov	r7,r3
   25b34:	a009883a 	mov	r4,r20
   25b38:	880b883a 	mov	r5,r17
   25b3c:	002c1000 	call	2c100 <__eqdf2>
   25b40:	103d7126 	beq	r2,zero,25108 <__alt_data_end+0xfffe5108>
   25b44:	d9c00517 	ldw	r7,20(sp)
   25b48:	39ffffc4 	addi	r7,r7,-1
   25b4c:	d9c00515 	stw	r7,20(sp)
   25b50:	003d6d06 	br	25108 <__alt_data_end+0xfffe5108>
   25b54:	dd400a17 	ldw	r21,40(sp)
   25b58:	dd000817 	ldw	r20,32(sp)
   25b5c:	0023883a 	mov	r17,zero
   25b60:	003f4806 	br	25884 <__alt_data_end+0xfffe5884>
   25b64:	10e3c83a 	sub	r17,r2,r3
   25b68:	9448983a 	sll	r4,r18,r17
   25b6c:	003d3206 	br	25038 <__alt_data_end+0xfffe5038>
   25b70:	d8000e15 	stw	zero,56(sp)
   25b74:	003d7506 	br	2514c <__alt_data_end+0xfffe514c>
   25b78:	b005883a 	mov	r2,r22
   25b7c:	003f4506 	br	25894 <__alt_data_end+0xfffe5894>
   25b80:	dc000915 	stw	r16,36(sp)
   25b84:	d9800a17 	ldw	r6,40(sp)
   25b88:	d9400917 	ldw	r5,36(sp)
   25b8c:	e009883a 	mov	r4,fp
   25b90:	00275e40 	call	275e4 <__pow5mult>
   25b94:	1021883a 	mov	r16,r2
   25b98:	003f5a06 	br	25904 <__alt_data_end+0xfffe5904>
   25b9c:	01c00044 	movi	r7,1
   25ba0:	d9c00b15 	stw	r7,44(sp)
   25ba4:	d8802217 	ldw	r2,136(sp)
   25ba8:	0081280e 	bge	zero,r2,2604c <_dtoa_r+0x11b0>
   25bac:	100d883a 	mov	r6,r2
   25bb0:	1021883a 	mov	r16,r2
   25bb4:	d8800c15 	stw	r2,48(sp)
   25bb8:	d8800615 	stw	r2,24(sp)
   25bbc:	003d8806 	br	251e0 <__alt_data_end+0xfffe51e0>
   25bc0:	d8800617 	ldw	r2,24(sp)
   25bc4:	00be9b16 	blt	zero,r2,25634 <__alt_data_end+0xfffe5634>
   25bc8:	10010f1e 	bne	r2,zero,26008 <_dtoa_r+0x116c>
   25bcc:	880b883a 	mov	r5,r17
   25bd0:	000d883a 	mov	r6,zero
   25bd4:	01d00534 	movhi	r7,16404
   25bd8:	8009883a 	mov	r4,r16
   25bdc:	002c3580 	call	2c358 <__muldf3>
   25be0:	900d883a 	mov	r6,r18
   25be4:	980f883a 	mov	r7,r19
   25be8:	1009883a 	mov	r4,r2
   25bec:	180b883a 	mov	r5,r3
   25bf0:	002c1880 	call	2c188 <__gedf2>
   25bf4:	002b883a 	mov	r21,zero
   25bf8:	0023883a 	mov	r17,zero
   25bfc:	1000bf16 	blt	r2,zero,25efc <_dtoa_r+0x1060>
   25c00:	d9802217 	ldw	r6,136(sp)
   25c04:	ddc00717 	ldw	r23,28(sp)
   25c08:	018c303a 	nor	r6,zero,r6
   25c0c:	d9800515 	stw	r6,20(sp)
   25c10:	a80b883a 	mov	r5,r21
   25c14:	e009883a 	mov	r4,fp
   25c18:	002704c0 	call	2704c <_Bfree>
   25c1c:	883e4926 	beq	r17,zero,25544 <__alt_data_end+0xfffe5544>
   25c20:	003fad06 	br	25ad8 <__alt_data_end+0xfffe5ad8>
   25c24:	d9c01117 	ldw	r7,68(sp)
   25c28:	3801bc26 	beq	r7,zero,2631c <_dtoa_r+0x1480>
   25c2c:	10810cc4 	addi	r2,r2,1075
   25c30:	dd400a17 	ldw	r21,40(sp)
   25c34:	dd000817 	ldw	r20,32(sp)
   25c38:	003f0a06 	br	25864 <__alt_data_end+0xfffe5864>
   25c3c:	00800704 	movi	r2,28
   25c40:	d9000817 	ldw	r4,32(sp)
   25c44:	a0a9883a 	add	r20,r20,r2
   25c48:	b0ad883a 	add	r22,r22,r2
   25c4c:	2089883a 	add	r4,r4,r2
   25c50:	d9000815 	stw	r4,32(sp)
   25c54:	003f5106 	br	2599c <__alt_data_end+0xfffe599c>
   25c58:	d8c00317 	ldw	r3,12(sp)
   25c5c:	b8c1fc0e 	bge	r23,r3,26450 <_dtoa_r+0x15b4>
   25c60:	0027883a 	mov	r19,zero
   25c64:	b805883a 	mov	r2,r23
   25c68:	003f3e06 	br	25964 <__alt_data_end+0xfffe5964>
   25c6c:	880b883a 	mov	r5,r17
   25c70:	e009883a 	mov	r4,fp
   25c74:	000f883a 	mov	r7,zero
   25c78:	01800284 	movi	r6,10
   25c7c:	00270740 	call	27074 <__multadd>
   25c80:	d9000c17 	ldw	r4,48(sp)
   25c84:	1023883a 	mov	r17,r2
   25c88:	0102040e 	bge	zero,r4,2649c <_dtoa_r+0x1600>
   25c8c:	d9000615 	stw	r4,24(sp)
   25c90:	0500050e 	bge	zero,r20,25ca8 <_dtoa_r+0xe0c>
   25c94:	880b883a 	mov	r5,r17
   25c98:	a00d883a 	mov	r6,r20
   25c9c:	e009883a 	mov	r4,fp
   25ca0:	00277240 	call	27724 <__lshift>
   25ca4:	1023883a 	mov	r17,r2
   25ca8:	9801241e 	bne	r19,zero,2613c <_dtoa_r+0x12a0>
   25cac:	8829883a 	mov	r20,r17
   25cb0:	d9000617 	ldw	r4,24(sp)
   25cb4:	dcc00717 	ldw	r19,28(sp)
   25cb8:	9480004c 	andi	r18,r18,1
   25cbc:	20bfffc4 	addi	r2,r4,-1
   25cc0:	9885883a 	add	r2,r19,r2
   25cc4:	d8800415 	stw	r2,16(sp)
   25cc8:	dc800615 	stw	r18,24(sp)
   25ccc:	a80b883a 	mov	r5,r21
   25cd0:	8009883a 	mov	r4,r16
   25cd4:	0024c9c0 	call	24c9c <quorem>
   25cd8:	880b883a 	mov	r5,r17
   25cdc:	8009883a 	mov	r4,r16
   25ce0:	102f883a 	mov	r23,r2
   25ce4:	002786c0 	call	2786c <__mcmp>
   25ce8:	a80b883a 	mov	r5,r21
   25cec:	a00d883a 	mov	r6,r20
   25cf0:	e009883a 	mov	r4,fp
   25cf4:	102d883a 	mov	r22,r2
   25cf8:	00278cc0 	call	278cc <__mdiff>
   25cfc:	1007883a 	mov	r3,r2
   25d00:	10800317 	ldw	r2,12(r2)
   25d04:	bc800c04 	addi	r18,r23,48
   25d08:	180b883a 	mov	r5,r3
   25d0c:	10004e1e 	bne	r2,zero,25e48 <_dtoa_r+0xfac>
   25d10:	8009883a 	mov	r4,r16
   25d14:	d8c01615 	stw	r3,88(sp)
   25d18:	002786c0 	call	2786c <__mcmp>
   25d1c:	d8c01617 	ldw	r3,88(sp)
   25d20:	e009883a 	mov	r4,fp
   25d24:	d8801615 	stw	r2,88(sp)
   25d28:	180b883a 	mov	r5,r3
   25d2c:	002704c0 	call	2704c <_Bfree>
   25d30:	d8801617 	ldw	r2,88(sp)
   25d34:	1000041e 	bne	r2,zero,25d48 <_dtoa_r+0xeac>
   25d38:	d9800317 	ldw	r6,12(sp)
   25d3c:	3000021e 	bne	r6,zero,25d48 <_dtoa_r+0xeac>
   25d40:	d8c00617 	ldw	r3,24(sp)
   25d44:	18003726 	beq	r3,zero,25e24 <_dtoa_r+0xf88>
   25d48:	b0002016 	blt	r22,zero,25dcc <_dtoa_r+0xf30>
   25d4c:	b000041e 	bne	r22,zero,25d60 <_dtoa_r+0xec4>
   25d50:	d9000317 	ldw	r4,12(sp)
   25d54:	2000021e 	bne	r4,zero,25d60 <_dtoa_r+0xec4>
   25d58:	d8c00617 	ldw	r3,24(sp)
   25d5c:	18001b26 	beq	r3,zero,25dcc <_dtoa_r+0xf30>
   25d60:	00810716 	blt	zero,r2,26180 <_dtoa_r+0x12e4>
   25d64:	d8c00417 	ldw	r3,16(sp)
   25d68:	9d800044 	addi	r22,r19,1
   25d6c:	9c800005 	stb	r18,0(r19)
   25d70:	b02f883a 	mov	r23,r22
   25d74:	98c10626 	beq	r19,r3,26190 <_dtoa_r+0x12f4>
   25d78:	800b883a 	mov	r5,r16
   25d7c:	000f883a 	mov	r7,zero
   25d80:	01800284 	movi	r6,10
   25d84:	e009883a 	mov	r4,fp
   25d88:	00270740 	call	27074 <__multadd>
   25d8c:	1021883a 	mov	r16,r2
   25d90:	000f883a 	mov	r7,zero
   25d94:	01800284 	movi	r6,10
   25d98:	880b883a 	mov	r5,r17
   25d9c:	e009883a 	mov	r4,fp
   25da0:	8d002526 	beq	r17,r20,25e38 <_dtoa_r+0xf9c>
   25da4:	00270740 	call	27074 <__multadd>
   25da8:	a00b883a 	mov	r5,r20
   25dac:	000f883a 	mov	r7,zero
   25db0:	01800284 	movi	r6,10
   25db4:	e009883a 	mov	r4,fp
   25db8:	1023883a 	mov	r17,r2
   25dbc:	00270740 	call	27074 <__multadd>
   25dc0:	1029883a 	mov	r20,r2
   25dc4:	b027883a 	mov	r19,r22
   25dc8:	003fc006 	br	25ccc <__alt_data_end+0xfffe5ccc>
   25dcc:	9011883a 	mov	r8,r18
   25dd0:	00800e0e 	bge	zero,r2,25e0c <_dtoa_r+0xf70>
   25dd4:	800b883a 	mov	r5,r16
   25dd8:	01800044 	movi	r6,1
   25ddc:	e009883a 	mov	r4,fp
   25de0:	da001715 	stw	r8,92(sp)
   25de4:	00277240 	call	27724 <__lshift>
   25de8:	a80b883a 	mov	r5,r21
   25dec:	1009883a 	mov	r4,r2
   25df0:	1021883a 	mov	r16,r2
   25df4:	002786c0 	call	2786c <__mcmp>
   25df8:	da001717 	ldw	r8,92(sp)
   25dfc:	0081960e 	bge	zero,r2,26458 <_dtoa_r+0x15bc>
   25e00:	00800e44 	movi	r2,57
   25e04:	40817026 	beq	r8,r2,263c8 <_dtoa_r+0x152c>
   25e08:	ba000c44 	addi	r8,r23,49
   25e0c:	8825883a 	mov	r18,r17
   25e10:	9dc00044 	addi	r23,r19,1
   25e14:	9a000005 	stb	r8,0(r19)
   25e18:	a023883a 	mov	r17,r20
   25e1c:	dc000915 	stw	r16,36(sp)
   25e20:	003f2406 	br	25ab4 <__alt_data_end+0xfffe5ab4>
   25e24:	00800e44 	movi	r2,57
   25e28:	9011883a 	mov	r8,r18
   25e2c:	90816626 	beq	r18,r2,263c8 <_dtoa_r+0x152c>
   25e30:	05bff516 	blt	zero,r22,25e08 <__alt_data_end+0xfffe5e08>
   25e34:	003ff506 	br	25e0c <__alt_data_end+0xfffe5e0c>
   25e38:	00270740 	call	27074 <__multadd>
   25e3c:	1023883a 	mov	r17,r2
   25e40:	1029883a 	mov	r20,r2
   25e44:	003fdf06 	br	25dc4 <__alt_data_end+0xfffe5dc4>
   25e48:	e009883a 	mov	r4,fp
   25e4c:	002704c0 	call	2704c <_Bfree>
   25e50:	00800044 	movi	r2,1
   25e54:	003fbc06 	br	25d48 <__alt_data_end+0xfffe5d48>
   25e58:	a80b883a 	mov	r5,r21
   25e5c:	8009883a 	mov	r4,r16
   25e60:	002786c0 	call	2786c <__mcmp>
   25e64:	103edb0e 	bge	r2,zero,259d4 <__alt_data_end+0xfffe59d4>
   25e68:	800b883a 	mov	r5,r16
   25e6c:	000f883a 	mov	r7,zero
   25e70:	01800284 	movi	r6,10
   25e74:	e009883a 	mov	r4,fp
   25e78:	00270740 	call	27074 <__multadd>
   25e7c:	1021883a 	mov	r16,r2
   25e80:	d8800517 	ldw	r2,20(sp)
   25e84:	d8c00b17 	ldw	r3,44(sp)
   25e88:	10bfffc4 	addi	r2,r2,-1
   25e8c:	d8800515 	stw	r2,20(sp)
   25e90:	183f761e 	bne	r3,zero,25c6c <__alt_data_end+0xfffe5c6c>
   25e94:	d9000c17 	ldw	r4,48(sp)
   25e98:	0101730e 	bge	zero,r4,26468 <_dtoa_r+0x15cc>
   25e9c:	d9000615 	stw	r4,24(sp)
   25ea0:	003ed006 	br	259e4 <__alt_data_end+0xfffe59e4>
   25ea4:	00800084 	movi	r2,2
   25ea8:	3081861e 	bne	r6,r2,264c4 <_dtoa_r+0x1628>
   25eac:	d8000b15 	stw	zero,44(sp)
   25eb0:	003f3c06 	br	25ba4 <__alt_data_end+0xfffe5ba4>
   25eb4:	dc000917 	ldw	r16,36(sp)
   25eb8:	003e9206 	br	25904 <__alt_data_end+0xfffe5904>
   25ebc:	d9c00317 	ldw	r7,12(sp)
   25ec0:	00800084 	movi	r2,2
   25ec4:	11fec50e 	bge	r2,r7,259dc <__alt_data_end+0xfffe59dc>
   25ec8:	d9000617 	ldw	r4,24(sp)
   25ecc:	20013c1e 	bne	r4,zero,263c0 <_dtoa_r+0x1524>
   25ed0:	a80b883a 	mov	r5,r21
   25ed4:	000f883a 	mov	r7,zero
   25ed8:	01800144 	movi	r6,5
   25edc:	e009883a 	mov	r4,fp
   25ee0:	00270740 	call	27074 <__multadd>
   25ee4:	100b883a 	mov	r5,r2
   25ee8:	8009883a 	mov	r4,r16
   25eec:	102b883a 	mov	r21,r2
   25ef0:	002786c0 	call	2786c <__mcmp>
   25ef4:	dc000915 	stw	r16,36(sp)
   25ef8:	00bf410e 	bge	zero,r2,25c00 <__alt_data_end+0xfffe5c00>
   25efc:	d9c00717 	ldw	r7,28(sp)
   25f00:	00800c44 	movi	r2,49
   25f04:	38800005 	stb	r2,0(r7)
   25f08:	d8800517 	ldw	r2,20(sp)
   25f0c:	3dc00044 	addi	r23,r7,1
   25f10:	10800044 	addi	r2,r2,1
   25f14:	d8800515 	stw	r2,20(sp)
   25f18:	003f3d06 	br	25c10 <__alt_data_end+0xfffe5c10>
   25f1c:	d9800517 	ldw	r6,20(sp)
   25f20:	d9c00717 	ldw	r7,28(sp)
   25f24:	00800c44 	movi	r2,49
   25f28:	31800044 	addi	r6,r6,1
   25f2c:	d9800515 	stw	r6,20(sp)
   25f30:	38800005 	stb	r2,0(r7)
   25f34:	003edf06 	br	25ab4 <__alt_data_end+0xfffe5ab4>
   25f38:	d8000b15 	stw	zero,44(sp)
   25f3c:	003c9f06 	br	251bc <__alt_data_end+0xfffe51bc>
   25f40:	903e7e1e 	bne	r18,zero,2593c <__alt_data_end+0xfffe593c>
   25f44:	00800434 	movhi	r2,16
   25f48:	10bfffc4 	addi	r2,r2,-1
   25f4c:	9884703a 	and	r2,r19,r2
   25f50:	1000ea1e 	bne	r2,zero,262fc <_dtoa_r+0x1460>
   25f54:	9cdffc2c 	andhi	r19,r19,32752
   25f58:	9800e826 	beq	r19,zero,262fc <_dtoa_r+0x1460>
   25f5c:	d9c00817 	ldw	r7,32(sp)
   25f60:	b5800044 	addi	r22,r22,1
   25f64:	04c00044 	movi	r19,1
   25f68:	39c00044 	addi	r7,r7,1
   25f6c:	d9c00815 	stw	r7,32(sp)
   25f70:	d8800d17 	ldw	r2,52(sp)
   25f74:	103e721e 	bne	r2,zero,25940 <__alt_data_end+0xfffe5940>
   25f78:	00800044 	movi	r2,1
   25f7c:	003e7906 	br	25964 <__alt_data_end+0xfffe5964>
   25f80:	8009883a 	mov	r4,r16
   25f84:	002d3ec0 	call	2d3ec <__floatsidf>
   25f88:	d9800f17 	ldw	r6,60(sp)
   25f8c:	d9c01017 	ldw	r7,64(sp)
   25f90:	1009883a 	mov	r4,r2
   25f94:	180b883a 	mov	r5,r3
   25f98:	002c3580 	call	2c358 <__muldf3>
   25f9c:	000d883a 	mov	r6,zero
   25fa0:	01d00734 	movhi	r7,16412
   25fa4:	1009883a 	mov	r4,r2
   25fa8:	180b883a 	mov	r5,r3
   25fac:	002af6c0 	call	2af6c <__adddf3>
   25fb0:	047f3034 	movhi	r17,64704
   25fb4:	1021883a 	mov	r16,r2
   25fb8:	1c63883a 	add	r17,r3,r17
   25fbc:	d9000f17 	ldw	r4,60(sp)
   25fc0:	d9401017 	ldw	r5,64(sp)
   25fc4:	000d883a 	mov	r6,zero
   25fc8:	01d00534 	movhi	r7,16404
   25fcc:	002ca700 	call	2ca70 <__subdf3>
   25fd0:	800d883a 	mov	r6,r16
   25fd4:	880f883a 	mov	r7,r17
   25fd8:	1009883a 	mov	r4,r2
   25fdc:	180b883a 	mov	r5,r3
   25fe0:	102b883a 	mov	r21,r2
   25fe4:	1829883a 	mov	r20,r3
   25fe8:	002c1880 	call	2c188 <__gedf2>
   25fec:	00806c16 	blt	zero,r2,261a0 <_dtoa_r+0x1304>
   25ff0:	89e0003c 	xorhi	r7,r17,32768
   25ff4:	800d883a 	mov	r6,r16
   25ff8:	a809883a 	mov	r4,r21
   25ffc:	a00b883a 	mov	r5,r20
   26000:	002c2640 	call	2c264 <__ledf2>
   26004:	103d7e0e 	bge	r2,zero,25600 <__alt_data_end+0xfffe5600>
   26008:	002b883a 	mov	r21,zero
   2600c:	0023883a 	mov	r17,zero
   26010:	003efb06 	br	25c00 <__alt_data_end+0xfffe5c00>
   26014:	d8800717 	ldw	r2,28(sp)
   26018:	003bd006 	br	24f5c <__alt_data_end+0xfffe4f5c>
   2601c:	d9000a17 	ldw	r4,40(sp)
   26020:	d9800d17 	ldw	r6,52(sp)
   26024:	dd400a15 	stw	r21,40(sp)
   26028:	a905c83a 	sub	r2,r21,r4
   2602c:	308d883a 	add	r6,r6,r2
   26030:	d9800d15 	stw	r6,52(sp)
   26034:	002b883a 	mov	r21,zero
   26038:	003e0606 	br	25854 <__alt_data_end+0xfffe5854>
   2603c:	9023883a 	mov	r17,r18
   26040:	9829883a 	mov	r20,r19
   26044:	04000084 	movi	r16,2
   26048:	003c9206 	br	25294 <__alt_data_end+0xfffe5294>
   2604c:	04000044 	movi	r16,1
   26050:	dc000c15 	stw	r16,48(sp)
   26054:	dc000615 	stw	r16,24(sp)
   26058:	dc002215 	stw	r16,136(sp)
   2605c:	e0001115 	stw	zero,68(fp)
   26060:	000b883a 	mov	r5,zero
   26064:	003c6906 	br	2520c <__alt_data_end+0xfffe520c>
   26068:	3021883a 	mov	r16,r6
   2606c:	003ffb06 	br	2605c <__alt_data_end+0xfffe605c>
   26070:	1000021e 	bne	r2,zero,2607c <_dtoa_r+0x11e0>
   26074:	4200004c 	andi	r8,r8,1
   26078:	403e7d1e 	bne	r8,zero,25a70 <__alt_data_end+0xfffe5a70>
   2607c:	01000c04 	movi	r4,48
   26080:	00000106 	br	26088 <_dtoa_r+0x11ec>
   26084:	102f883a 	mov	r23,r2
   26088:	b8bfffc4 	addi	r2,r23,-1
   2608c:	10c00007 	ldb	r3,0(r2)
   26090:	193ffc26 	beq	r3,r4,26084 <__alt_data_end+0xfffe6084>
   26094:	003e8706 	br	25ab4 <__alt_data_end+0xfffe5ab4>
   26098:	d8800517 	ldw	r2,20(sp)
   2609c:	00a3c83a 	sub	r17,zero,r2
   260a0:	8800a426 	beq	r17,zero,26334 <_dtoa_r+0x1498>
   260a4:	888003cc 	andi	r2,r17,15
   260a8:	100490fa 	slli	r2,r2,3
   260ac:	00c000f4 	movhi	r3,3
   260b0:	18c05704 	addi	r3,r3,348
   260b4:	1885883a 	add	r2,r3,r2
   260b8:	11800017 	ldw	r6,0(r2)
   260bc:	11c00117 	ldw	r7,4(r2)
   260c0:	9009883a 	mov	r4,r18
   260c4:	980b883a 	mov	r5,r19
   260c8:	8823d13a 	srai	r17,r17,4
   260cc:	002c3580 	call	2c358 <__muldf3>
   260d0:	d8800f15 	stw	r2,60(sp)
   260d4:	d8c01015 	stw	r3,64(sp)
   260d8:	8800e826 	beq	r17,zero,2647c <_dtoa_r+0x15e0>
   260dc:	050000f4 	movhi	r20,3
   260e0:	a5004d04 	addi	r20,r20,308
   260e4:	04000084 	movi	r16,2
   260e8:	8980004c 	andi	r6,r17,1
   260ec:	1009883a 	mov	r4,r2
   260f0:	8823d07a 	srai	r17,r17,1
   260f4:	180b883a 	mov	r5,r3
   260f8:	30000426 	beq	r6,zero,2610c <_dtoa_r+0x1270>
   260fc:	a1800017 	ldw	r6,0(r20)
   26100:	a1c00117 	ldw	r7,4(r20)
   26104:	84000044 	addi	r16,r16,1
   26108:	002c3580 	call	2c358 <__muldf3>
   2610c:	a5000204 	addi	r20,r20,8
   26110:	883ff51e 	bne	r17,zero,260e8 <__alt_data_end+0xfffe60e8>
   26114:	d8800f15 	stw	r2,60(sp)
   26118:	d8c01015 	stw	r3,64(sp)
   2611c:	003c7606 	br	252f8 <__alt_data_end+0xfffe52f8>
   26120:	00c00c04 	movi	r3,48
   26124:	10c00005 	stb	r3,0(r2)
   26128:	d8c00517 	ldw	r3,20(sp)
   2612c:	bd3fffc3 	ldbu	r20,-1(r23)
   26130:	18c00044 	addi	r3,r3,1
   26134:	d8c00515 	stw	r3,20(sp)
   26138:	003db906 	br	25820 <__alt_data_end+0xfffe5820>
   2613c:	89400117 	ldw	r5,4(r17)
   26140:	e009883a 	mov	r4,fp
   26144:	0026fa40 	call	26fa4 <_Balloc>
   26148:	89800417 	ldw	r6,16(r17)
   2614c:	89400304 	addi	r5,r17,12
   26150:	11000304 	addi	r4,r2,12
   26154:	31800084 	addi	r6,r6,2
   26158:	318d883a 	add	r6,r6,r6
   2615c:	318d883a 	add	r6,r6,r6
   26160:	1027883a 	mov	r19,r2
   26164:	0026d000 	call	26d00 <memcpy>
   26168:	01800044 	movi	r6,1
   2616c:	980b883a 	mov	r5,r19
   26170:	e009883a 	mov	r4,fp
   26174:	00277240 	call	27724 <__lshift>
   26178:	1029883a 	mov	r20,r2
   2617c:	003ecc06 	br	25cb0 <__alt_data_end+0xfffe5cb0>
   26180:	00800e44 	movi	r2,57
   26184:	90809026 	beq	r18,r2,263c8 <_dtoa_r+0x152c>
   26188:	92000044 	addi	r8,r18,1
   2618c:	003f1f06 	br	25e0c <__alt_data_end+0xfffe5e0c>
   26190:	9011883a 	mov	r8,r18
   26194:	8825883a 	mov	r18,r17
   26198:	a023883a 	mov	r17,r20
   2619c:	003e2906 	br	25a44 <__alt_data_end+0xfffe5a44>
   261a0:	002b883a 	mov	r21,zero
   261a4:	0023883a 	mov	r17,zero
   261a8:	003f5406 	br	25efc <__alt_data_end+0xfffe5efc>
   261ac:	61bfffc4 	addi	r6,r12,-1
   261b0:	300490fa 	slli	r2,r6,3
   261b4:	00c000f4 	movhi	r3,3
   261b8:	18c05704 	addi	r3,r3,348
   261bc:	1885883a 	add	r2,r3,r2
   261c0:	11000017 	ldw	r4,0(r2)
   261c4:	11400117 	ldw	r5,4(r2)
   261c8:	d8800717 	ldw	r2,28(sp)
   261cc:	880f883a 	mov	r7,r17
   261d0:	d9801215 	stw	r6,72(sp)
   261d4:	800d883a 	mov	r6,r16
   261d8:	db001615 	stw	r12,88(sp)
   261dc:	15c00044 	addi	r23,r2,1
   261e0:	002c3580 	call	2c358 <__muldf3>
   261e4:	d9401017 	ldw	r5,64(sp)
   261e8:	d9000f17 	ldw	r4,60(sp)
   261ec:	d8c01515 	stw	r3,84(sp)
   261f0:	d8801415 	stw	r2,80(sp)
   261f4:	002d36c0 	call	2d36c <__fixdfsi>
   261f8:	1009883a 	mov	r4,r2
   261fc:	1021883a 	mov	r16,r2
   26200:	002d3ec0 	call	2d3ec <__floatsidf>
   26204:	d9000f17 	ldw	r4,60(sp)
   26208:	d9401017 	ldw	r5,64(sp)
   2620c:	100d883a 	mov	r6,r2
   26210:	180f883a 	mov	r7,r3
   26214:	002ca700 	call	2ca70 <__subdf3>
   26218:	1829883a 	mov	r20,r3
   2621c:	d8c00717 	ldw	r3,28(sp)
   26220:	84000c04 	addi	r16,r16,48
   26224:	1023883a 	mov	r17,r2
   26228:	1c000005 	stb	r16,0(r3)
   2622c:	db001617 	ldw	r12,88(sp)
   26230:	00800044 	movi	r2,1
   26234:	60802226 	beq	r12,r2,262c0 <_dtoa_r+0x1424>
   26238:	d9c00717 	ldw	r7,28(sp)
   2623c:	8805883a 	mov	r2,r17
   26240:	b82b883a 	mov	r21,r23
   26244:	3b19883a 	add	r12,r7,r12
   26248:	6023883a 	mov	r17,r12
   2624c:	a007883a 	mov	r3,r20
   26250:	dc800f15 	stw	r18,60(sp)
   26254:	000d883a 	mov	r6,zero
   26258:	01d00934 	movhi	r7,16420
   2625c:	1009883a 	mov	r4,r2
   26260:	180b883a 	mov	r5,r3
   26264:	002c3580 	call	2c358 <__muldf3>
   26268:	180b883a 	mov	r5,r3
   2626c:	1009883a 	mov	r4,r2
   26270:	1829883a 	mov	r20,r3
   26274:	1025883a 	mov	r18,r2
   26278:	002d36c0 	call	2d36c <__fixdfsi>
   2627c:	1009883a 	mov	r4,r2
   26280:	1021883a 	mov	r16,r2
   26284:	002d3ec0 	call	2d3ec <__floatsidf>
   26288:	100d883a 	mov	r6,r2
   2628c:	180f883a 	mov	r7,r3
   26290:	9009883a 	mov	r4,r18
   26294:	a00b883a 	mov	r5,r20
   26298:	84000c04 	addi	r16,r16,48
   2629c:	002ca700 	call	2ca70 <__subdf3>
   262a0:	ad400044 	addi	r21,r21,1
   262a4:	ac3fffc5 	stb	r16,-1(r21)
   262a8:	ac7fea1e 	bne	r21,r17,26254 <__alt_data_end+0xfffe6254>
   262ac:	1023883a 	mov	r17,r2
   262b0:	d8801217 	ldw	r2,72(sp)
   262b4:	dc800f17 	ldw	r18,60(sp)
   262b8:	1829883a 	mov	r20,r3
   262bc:	b8af883a 	add	r23,r23,r2
   262c0:	d9001417 	ldw	r4,80(sp)
   262c4:	d9401517 	ldw	r5,84(sp)
   262c8:	000d883a 	mov	r6,zero
   262cc:	01cff834 	movhi	r7,16352
   262d0:	002af6c0 	call	2af6c <__adddf3>
   262d4:	880d883a 	mov	r6,r17
   262d8:	a00f883a 	mov	r7,r20
   262dc:	1009883a 	mov	r4,r2
   262e0:	180b883a 	mov	r5,r3
   262e4:	002c2640 	call	2c264 <__ledf2>
   262e8:	10003e0e 	bge	r2,zero,263e4 <_dtoa_r+0x1548>
   262ec:	d9001317 	ldw	r4,76(sp)
   262f0:	bd3fffc3 	ldbu	r20,-1(r23)
   262f4:	d9000515 	stw	r4,20(sp)
   262f8:	003d3b06 	br	257e8 <__alt_data_end+0xfffe57e8>
   262fc:	0027883a 	mov	r19,zero
   26300:	003f1b06 	br	25f70 <__alt_data_end+0xfffe5f70>
   26304:	d8800817 	ldw	r2,32(sp)
   26308:	11e9c83a 	sub	r20,r2,r7
   2630c:	0005883a 	mov	r2,zero
   26310:	003d5406 	br	25864 <__alt_data_end+0xfffe5864>
   26314:	00800044 	movi	r2,1
   26318:	003dc706 	br	25a38 <__alt_data_end+0xfffe5a38>
   2631c:	d8c00217 	ldw	r3,8(sp)
   26320:	00800d84 	movi	r2,54
   26324:	dd400a17 	ldw	r21,40(sp)
   26328:	10c5c83a 	sub	r2,r2,r3
   2632c:	dd000817 	ldw	r20,32(sp)
   26330:	003d4c06 	br	25864 <__alt_data_end+0xfffe5864>
   26334:	dc800f15 	stw	r18,60(sp)
   26338:	dcc01015 	stw	r19,64(sp)
   2633c:	04000084 	movi	r16,2
   26340:	003bed06 	br	252f8 <__alt_data_end+0xfffe52f8>
   26344:	d9000617 	ldw	r4,24(sp)
   26348:	203f0d26 	beq	r4,zero,25f80 <__alt_data_end+0xfffe5f80>
   2634c:	d9800c17 	ldw	r6,48(sp)
   26350:	01bcab0e 	bge	zero,r6,25600 <__alt_data_end+0xfffe5600>
   26354:	d9401017 	ldw	r5,64(sp)
   26358:	d9000f17 	ldw	r4,60(sp)
   2635c:	000d883a 	mov	r6,zero
   26360:	01d00934 	movhi	r7,16420
   26364:	002c3580 	call	2c358 <__muldf3>
   26368:	81000044 	addi	r4,r16,1
   2636c:	d8800f15 	stw	r2,60(sp)
   26370:	d8c01015 	stw	r3,64(sp)
   26374:	002d3ec0 	call	2d3ec <__floatsidf>
   26378:	d9800f17 	ldw	r6,60(sp)
   2637c:	d9c01017 	ldw	r7,64(sp)
   26380:	1009883a 	mov	r4,r2
   26384:	180b883a 	mov	r5,r3
   26388:	002c3580 	call	2c358 <__muldf3>
   2638c:	01d00734 	movhi	r7,16412
   26390:	000d883a 	mov	r6,zero
   26394:	1009883a 	mov	r4,r2
   26398:	180b883a 	mov	r5,r3
   2639c:	002af6c0 	call	2af6c <__adddf3>
   263a0:	d9c00517 	ldw	r7,20(sp)
   263a4:	047f3034 	movhi	r17,64704
   263a8:	1021883a 	mov	r16,r2
   263ac:	39ffffc4 	addi	r7,r7,-1
   263b0:	d9c01315 	stw	r7,76(sp)
   263b4:	1c63883a 	add	r17,r3,r17
   263b8:	db000c17 	ldw	r12,48(sp)
   263bc:	003bea06 	br	25368 <__alt_data_end+0xfffe5368>
   263c0:	dc000915 	stw	r16,36(sp)
   263c4:	003e0e06 	br	25c00 <__alt_data_end+0xfffe5c00>
   263c8:	01000e44 	movi	r4,57
   263cc:	8825883a 	mov	r18,r17
   263d0:	9dc00044 	addi	r23,r19,1
   263d4:	99000005 	stb	r4,0(r19)
   263d8:	a023883a 	mov	r17,r20
   263dc:	dc000915 	stw	r16,36(sp)
   263e0:	003da406 	br	25a74 <__alt_data_end+0xfffe5a74>
   263e4:	d9801417 	ldw	r6,80(sp)
   263e8:	d9c01517 	ldw	r7,84(sp)
   263ec:	0009883a 	mov	r4,zero
   263f0:	014ff834 	movhi	r5,16352
   263f4:	002ca700 	call	2ca70 <__subdf3>
   263f8:	880d883a 	mov	r6,r17
   263fc:	a00f883a 	mov	r7,r20
   26400:	1009883a 	mov	r4,r2
   26404:	180b883a 	mov	r5,r3
   26408:	002c1880 	call	2c188 <__gedf2>
   2640c:	00bc7c0e 	bge	zero,r2,25600 <__alt_data_end+0xfffe5600>
   26410:	01000c04 	movi	r4,48
   26414:	00000106 	br	2641c <_dtoa_r+0x1580>
   26418:	102f883a 	mov	r23,r2
   2641c:	b8bfffc4 	addi	r2,r23,-1
   26420:	10c00007 	ldb	r3,0(r2)
   26424:	193ffc26 	beq	r3,r4,26418 <__alt_data_end+0xfffe6418>
   26428:	d9801317 	ldw	r6,76(sp)
   2642c:	d9800515 	stw	r6,20(sp)
   26430:	003c4406 	br	25544 <__alt_data_end+0xfffe5544>
   26434:	d9801317 	ldw	r6,76(sp)
   26438:	d9800515 	stw	r6,20(sp)
   2643c:	003cea06 	br	257e8 <__alt_data_end+0xfffe57e8>
   26440:	dd800f17 	ldw	r22,60(sp)
   26444:	dcc01017 	ldw	r19,64(sp)
   26448:	dc801217 	ldw	r18,72(sp)
   2644c:	003c6c06 	br	25600 <__alt_data_end+0xfffe5600>
   26450:	903e031e 	bne	r18,zero,25c60 <__alt_data_end+0xfffe5c60>
   26454:	003ebb06 	br	25f44 <__alt_data_end+0xfffe5f44>
   26458:	103e6c1e 	bne	r2,zero,25e0c <__alt_data_end+0xfffe5e0c>
   2645c:	4080004c 	andi	r2,r8,1
   26460:	103e6a26 	beq	r2,zero,25e0c <__alt_data_end+0xfffe5e0c>
   26464:	003e6606 	br	25e00 <__alt_data_end+0xfffe5e00>
   26468:	d8c00317 	ldw	r3,12(sp)
   2646c:	00800084 	movi	r2,2
   26470:	10c02916 	blt	r2,r3,26518 <_dtoa_r+0x167c>
   26474:	d9000c17 	ldw	r4,48(sp)
   26478:	003e8806 	br	25e9c <__alt_data_end+0xfffe5e9c>
   2647c:	04000084 	movi	r16,2
   26480:	003b9d06 	br	252f8 <__alt_data_end+0xfffe52f8>
   26484:	d9001317 	ldw	r4,76(sp)
   26488:	d9000515 	stw	r4,20(sp)
   2648c:	003cd606 	br	257e8 <__alt_data_end+0xfffe57e8>
   26490:	d8801317 	ldw	r2,76(sp)
   26494:	d8800515 	stw	r2,20(sp)
   26498:	003c2a06 	br	25544 <__alt_data_end+0xfffe5544>
   2649c:	d9800317 	ldw	r6,12(sp)
   264a0:	00800084 	movi	r2,2
   264a4:	11801516 	blt	r2,r6,264fc <_dtoa_r+0x1660>
   264a8:	d9c00c17 	ldw	r7,48(sp)
   264ac:	d9c00615 	stw	r7,24(sp)
   264b0:	003df706 	br	25c90 <__alt_data_end+0xfffe5c90>
   264b4:	193d3926 	beq	r3,r4,2599c <__alt_data_end+0xfffe599c>
   264b8:	00c00f04 	movi	r3,60
   264bc:	1885c83a 	sub	r2,r3,r2
   264c0:	003ddf06 	br	25c40 <__alt_data_end+0xfffe5c40>
   264c4:	e009883a 	mov	r4,fp
   264c8:	e0001115 	stw	zero,68(fp)
   264cc:	000b883a 	mov	r5,zero
   264d0:	0026fa40 	call	26fa4 <_Balloc>
   264d4:	d8800715 	stw	r2,28(sp)
   264d8:	d8c00717 	ldw	r3,28(sp)
   264dc:	00bfffc4 	movi	r2,-1
   264e0:	01000044 	movi	r4,1
   264e4:	d8800c15 	stw	r2,48(sp)
   264e8:	e0c01015 	stw	r3,64(fp)
   264ec:	d9000b15 	stw	r4,44(sp)
   264f0:	d8800615 	stw	r2,24(sp)
   264f4:	d8002215 	stw	zero,136(sp)
   264f8:	003c4106 	br	25600 <__alt_data_end+0xfffe5600>
   264fc:	d8c00c17 	ldw	r3,48(sp)
   26500:	d8c00615 	stw	r3,24(sp)
   26504:	003e7006 	br	25ec8 <__alt_data_end+0xfffe5ec8>
   26508:	04400044 	movi	r17,1
   2650c:	003b2006 	br	25190 <__alt_data_end+0xfffe5190>
   26510:	000b883a 	mov	r5,zero
   26514:	003b3d06 	br	2520c <__alt_data_end+0xfffe520c>
   26518:	d8800c17 	ldw	r2,48(sp)
   2651c:	d8800615 	stw	r2,24(sp)
   26520:	003e6906 	br	25ec8 <__alt_data_end+0xfffe5ec8>

00026524 <__sflags>:
   26524:	28800007 	ldb	r2,0(r5)
   26528:	00c01c84 	movi	r3,114
   2652c:	10c02426 	beq	r2,r3,265c0 <__sflags+0x9c>
   26530:	00c01dc4 	movi	r3,119
   26534:	10c01e26 	beq	r2,r3,265b0 <__sflags+0x8c>
   26538:	00c01844 	movi	r3,97
   2653c:	10c00426 	beq	r2,r3,26550 <__sflags+0x2c>
   26540:	00800584 	movi	r2,22
   26544:	20800015 	stw	r2,0(r4)
   26548:	0005883a 	mov	r2,zero
   2654c:	f800283a 	ret
   26550:	02c08204 	movi	r11,520
   26554:	01000044 	movi	r4,1
   26558:	00804204 	movi	r2,264
   2655c:	01c00ac4 	movi	r7,43
   26560:	02bff8c4 	movi	r10,-29
   26564:	027fff04 	movi	r9,-4
   26568:	02001e04 	movi	r8,120
   2656c:	29400044 	addi	r5,r5,1
   26570:	28c00007 	ldb	r3,0(r5)
   26574:	18000626 	beq	r3,zero,26590 <__sflags+0x6c>
   26578:	19c00826 	beq	r3,r7,2659c <__sflags+0x78>
   2657c:	1a3ffb1e 	bne	r3,r8,2656c <__alt_data_end+0xfffe656c>
   26580:	29400044 	addi	r5,r5,1
   26584:	28c00007 	ldb	r3,0(r5)
   26588:	21020014 	ori	r4,r4,2048
   2658c:	183ffa1e 	bne	r3,zero,26578 <__alt_data_end+0xfffe6578>
   26590:	22c8b03a 	or	r4,r4,r11
   26594:	31000015 	stw	r4,0(r6)
   26598:	f800283a 	ret
   2659c:	1284703a 	and	r2,r2,r10
   265a0:	2248703a 	and	r4,r4,r9
   265a4:	10800414 	ori	r2,r2,16
   265a8:	21000094 	ori	r4,r4,2
   265ac:	003fef06 	br	2656c <__alt_data_end+0xfffe656c>
   265b0:	02c18004 	movi	r11,1536
   265b4:	01000044 	movi	r4,1
   265b8:	00800204 	movi	r2,8
   265bc:	003fe706 	br	2655c <__alt_data_end+0xfffe655c>
   265c0:	0017883a 	mov	r11,zero
   265c4:	0009883a 	mov	r4,zero
   265c8:	00800104 	movi	r2,4
   265cc:	003fe306 	br	2655c <__alt_data_end+0xfffe655c>

000265d0 <__sfvwrite_r>:
   265d0:	30800217 	ldw	r2,8(r6)
   265d4:	10006726 	beq	r2,zero,26774 <__sfvwrite_r+0x1a4>
   265d8:	28c0030b 	ldhu	r3,12(r5)
   265dc:	defff404 	addi	sp,sp,-48
   265e0:	dd400715 	stw	r21,28(sp)
   265e4:	dd000615 	stw	r20,24(sp)
   265e8:	dc000215 	stw	r16,8(sp)
   265ec:	dfc00b15 	stw	ra,44(sp)
   265f0:	df000a15 	stw	fp,40(sp)
   265f4:	ddc00915 	stw	r23,36(sp)
   265f8:	dd800815 	stw	r22,32(sp)
   265fc:	dcc00515 	stw	r19,20(sp)
   26600:	dc800415 	stw	r18,16(sp)
   26604:	dc400315 	stw	r17,12(sp)
   26608:	1880020c 	andi	r2,r3,8
   2660c:	2821883a 	mov	r16,r5
   26610:	202b883a 	mov	r21,r4
   26614:	3029883a 	mov	r20,r6
   26618:	10002726 	beq	r2,zero,266b8 <__sfvwrite_r+0xe8>
   2661c:	28800417 	ldw	r2,16(r5)
   26620:	10002526 	beq	r2,zero,266b8 <__sfvwrite_r+0xe8>
   26624:	1880008c 	andi	r2,r3,2
   26628:	a4400017 	ldw	r17,0(r20)
   2662c:	10002a26 	beq	r2,zero,266d8 <__sfvwrite_r+0x108>
   26630:	05a00034 	movhi	r22,32768
   26634:	0027883a 	mov	r19,zero
   26638:	0025883a 	mov	r18,zero
   2663c:	b5bf0004 	addi	r22,r22,-1024
   26640:	980d883a 	mov	r6,r19
   26644:	a809883a 	mov	r4,r21
   26648:	90004626 	beq	r18,zero,26764 <__sfvwrite_r+0x194>
   2664c:	900f883a 	mov	r7,r18
   26650:	b480022e 	bgeu	r22,r18,2665c <__sfvwrite_r+0x8c>
   26654:	01e00034 	movhi	r7,32768
   26658:	39ff0004 	addi	r7,r7,-1024
   2665c:	80800917 	ldw	r2,36(r16)
   26660:	81400717 	ldw	r5,28(r16)
   26664:	103ee83a 	callr	r2
   26668:	0080570e 	bge	zero,r2,267c8 <__sfvwrite_r+0x1f8>
   2666c:	a0c00217 	ldw	r3,8(r20)
   26670:	98a7883a 	add	r19,r19,r2
   26674:	90a5c83a 	sub	r18,r18,r2
   26678:	1885c83a 	sub	r2,r3,r2
   2667c:	a0800215 	stw	r2,8(r20)
   26680:	103fef1e 	bne	r2,zero,26640 <__alt_data_end+0xfffe6640>
   26684:	0005883a 	mov	r2,zero
   26688:	dfc00b17 	ldw	ra,44(sp)
   2668c:	df000a17 	ldw	fp,40(sp)
   26690:	ddc00917 	ldw	r23,36(sp)
   26694:	dd800817 	ldw	r22,32(sp)
   26698:	dd400717 	ldw	r21,28(sp)
   2669c:	dd000617 	ldw	r20,24(sp)
   266a0:	dcc00517 	ldw	r19,20(sp)
   266a4:	dc800417 	ldw	r18,16(sp)
   266a8:	dc400317 	ldw	r17,12(sp)
   266ac:	dc000217 	ldw	r16,8(sp)
   266b0:	dec00c04 	addi	sp,sp,48
   266b4:	f800283a 	ret
   266b8:	800b883a 	mov	r5,r16
   266bc:	a809883a 	mov	r4,r21
   266c0:	0024af40 	call	24af4 <__swsetup_r>
   266c4:	1000eb1e 	bne	r2,zero,26a74 <__sfvwrite_r+0x4a4>
   266c8:	80c0030b 	ldhu	r3,12(r16)
   266cc:	a4400017 	ldw	r17,0(r20)
   266d0:	1880008c 	andi	r2,r3,2
   266d4:	103fd61e 	bne	r2,zero,26630 <__alt_data_end+0xfffe6630>
   266d8:	1880004c 	andi	r2,r3,1
   266dc:	10003f1e 	bne	r2,zero,267dc <__sfvwrite_r+0x20c>
   266e0:	0039883a 	mov	fp,zero
   266e4:	0025883a 	mov	r18,zero
   266e8:	90001a26 	beq	r18,zero,26754 <__sfvwrite_r+0x184>
   266ec:	1880800c 	andi	r2,r3,512
   266f0:	84c00217 	ldw	r19,8(r16)
   266f4:	10002126 	beq	r2,zero,2677c <__sfvwrite_r+0x1ac>
   266f8:	982f883a 	mov	r23,r19
   266fc:	94c09336 	bltu	r18,r19,2694c <__sfvwrite_r+0x37c>
   26700:	1881200c 	andi	r2,r3,1152
   26704:	10009e1e 	bne	r2,zero,26980 <__sfvwrite_r+0x3b0>
   26708:	81000017 	ldw	r4,0(r16)
   2670c:	b80d883a 	mov	r6,r23
   26710:	e00b883a 	mov	r5,fp
   26714:	0026e480 	call	26e48 <memmove>
   26718:	80c00217 	ldw	r3,8(r16)
   2671c:	81000017 	ldw	r4,0(r16)
   26720:	9005883a 	mov	r2,r18
   26724:	1ce7c83a 	sub	r19,r3,r19
   26728:	25cf883a 	add	r7,r4,r23
   2672c:	84c00215 	stw	r19,8(r16)
   26730:	81c00015 	stw	r7,0(r16)
   26734:	a0c00217 	ldw	r3,8(r20)
   26738:	e0b9883a 	add	fp,fp,r2
   2673c:	90a5c83a 	sub	r18,r18,r2
   26740:	18a7c83a 	sub	r19,r3,r2
   26744:	a4c00215 	stw	r19,8(r20)
   26748:	983fce26 	beq	r19,zero,26684 <__alt_data_end+0xfffe6684>
   2674c:	80c0030b 	ldhu	r3,12(r16)
   26750:	903fe61e 	bne	r18,zero,266ec <__alt_data_end+0xfffe66ec>
   26754:	8f000017 	ldw	fp,0(r17)
   26758:	8c800117 	ldw	r18,4(r17)
   2675c:	8c400204 	addi	r17,r17,8
   26760:	003fe106 	br	266e8 <__alt_data_end+0xfffe66e8>
   26764:	8cc00017 	ldw	r19,0(r17)
   26768:	8c800117 	ldw	r18,4(r17)
   2676c:	8c400204 	addi	r17,r17,8
   26770:	003fb306 	br	26640 <__alt_data_end+0xfffe6640>
   26774:	0005883a 	mov	r2,zero
   26778:	f800283a 	ret
   2677c:	81000017 	ldw	r4,0(r16)
   26780:	80800417 	ldw	r2,16(r16)
   26784:	11005736 	bltu	r2,r4,268e4 <__sfvwrite_r+0x314>
   26788:	85c00517 	ldw	r23,20(r16)
   2678c:	95c05536 	bltu	r18,r23,268e4 <__sfvwrite_r+0x314>
   26790:	00a00034 	movhi	r2,32768
   26794:	10bfffc4 	addi	r2,r2,-1
   26798:	9009883a 	mov	r4,r18
   2679c:	1480012e 	bgeu	r2,r18,267a4 <__sfvwrite_r+0x1d4>
   267a0:	1009883a 	mov	r4,r2
   267a4:	b80b883a 	mov	r5,r23
   267a8:	002adb80 	call	2adb8 <__divsi3>
   267ac:	15cf383a 	mul	r7,r2,r23
   267b0:	81400717 	ldw	r5,28(r16)
   267b4:	80800917 	ldw	r2,36(r16)
   267b8:	e00d883a 	mov	r6,fp
   267bc:	a809883a 	mov	r4,r21
   267c0:	103ee83a 	callr	r2
   267c4:	00bfdb16 	blt	zero,r2,26734 <__alt_data_end+0xfffe6734>
   267c8:	8080030b 	ldhu	r2,12(r16)
   267cc:	10801014 	ori	r2,r2,64
   267d0:	8080030d 	sth	r2,12(r16)
   267d4:	00bfffc4 	movi	r2,-1
   267d8:	003fab06 	br	26688 <__alt_data_end+0xfffe6688>
   267dc:	0027883a 	mov	r19,zero
   267e0:	0011883a 	mov	r8,zero
   267e4:	0039883a 	mov	fp,zero
   267e8:	0025883a 	mov	r18,zero
   267ec:	90001f26 	beq	r18,zero,2686c <__sfvwrite_r+0x29c>
   267f0:	40005a26 	beq	r8,zero,2695c <__sfvwrite_r+0x38c>
   267f4:	982d883a 	mov	r22,r19
   267f8:	94c0012e 	bgeu	r18,r19,26800 <__sfvwrite_r+0x230>
   267fc:	902d883a 	mov	r22,r18
   26800:	81000017 	ldw	r4,0(r16)
   26804:	80800417 	ldw	r2,16(r16)
   26808:	b02f883a 	mov	r23,r22
   2680c:	81c00517 	ldw	r7,20(r16)
   26810:	1100032e 	bgeu	r2,r4,26820 <__sfvwrite_r+0x250>
   26814:	80c00217 	ldw	r3,8(r16)
   26818:	38c7883a 	add	r3,r7,r3
   2681c:	1d801816 	blt	r3,r22,26880 <__sfvwrite_r+0x2b0>
   26820:	b1c03e16 	blt	r22,r7,2691c <__sfvwrite_r+0x34c>
   26824:	80800917 	ldw	r2,36(r16)
   26828:	81400717 	ldw	r5,28(r16)
   2682c:	e00d883a 	mov	r6,fp
   26830:	da000115 	stw	r8,4(sp)
   26834:	a809883a 	mov	r4,r21
   26838:	103ee83a 	callr	r2
   2683c:	102f883a 	mov	r23,r2
   26840:	da000117 	ldw	r8,4(sp)
   26844:	00bfe00e 	bge	zero,r2,267c8 <__alt_data_end+0xfffe67c8>
   26848:	9de7c83a 	sub	r19,r19,r23
   2684c:	98001f26 	beq	r19,zero,268cc <__sfvwrite_r+0x2fc>
   26850:	a0800217 	ldw	r2,8(r20)
   26854:	e5f9883a 	add	fp,fp,r23
   26858:	95e5c83a 	sub	r18,r18,r23
   2685c:	15efc83a 	sub	r23,r2,r23
   26860:	a5c00215 	stw	r23,8(r20)
   26864:	b83f8726 	beq	r23,zero,26684 <__alt_data_end+0xfffe6684>
   26868:	903fe11e 	bne	r18,zero,267f0 <__alt_data_end+0xfffe67f0>
   2686c:	8f000017 	ldw	fp,0(r17)
   26870:	8c800117 	ldw	r18,4(r17)
   26874:	0011883a 	mov	r8,zero
   26878:	8c400204 	addi	r17,r17,8
   2687c:	003fdb06 	br	267ec <__alt_data_end+0xfffe67ec>
   26880:	180d883a 	mov	r6,r3
   26884:	e00b883a 	mov	r5,fp
   26888:	da000115 	stw	r8,4(sp)
   2688c:	d8c00015 	stw	r3,0(sp)
   26890:	0026e480 	call	26e48 <memmove>
   26894:	d8c00017 	ldw	r3,0(sp)
   26898:	80800017 	ldw	r2,0(r16)
   2689c:	800b883a 	mov	r5,r16
   268a0:	a809883a 	mov	r4,r21
   268a4:	10c5883a 	add	r2,r2,r3
   268a8:	80800015 	stw	r2,0(r16)
   268ac:	d8c00015 	stw	r3,0(sp)
   268b0:	002074c0 	call	2074c <_fflush_r>
   268b4:	d8c00017 	ldw	r3,0(sp)
   268b8:	da000117 	ldw	r8,4(sp)
   268bc:	103fc21e 	bne	r2,zero,267c8 <__alt_data_end+0xfffe67c8>
   268c0:	182f883a 	mov	r23,r3
   268c4:	9de7c83a 	sub	r19,r19,r23
   268c8:	983fe11e 	bne	r19,zero,26850 <__alt_data_end+0xfffe6850>
   268cc:	800b883a 	mov	r5,r16
   268d0:	a809883a 	mov	r4,r21
   268d4:	002074c0 	call	2074c <_fflush_r>
   268d8:	103fbb1e 	bne	r2,zero,267c8 <__alt_data_end+0xfffe67c8>
   268dc:	0011883a 	mov	r8,zero
   268e0:	003fdb06 	br	26850 <__alt_data_end+0xfffe6850>
   268e4:	94c0012e 	bgeu	r18,r19,268ec <__sfvwrite_r+0x31c>
   268e8:	9027883a 	mov	r19,r18
   268ec:	980d883a 	mov	r6,r19
   268f0:	e00b883a 	mov	r5,fp
   268f4:	0026e480 	call	26e48 <memmove>
   268f8:	80800217 	ldw	r2,8(r16)
   268fc:	80c00017 	ldw	r3,0(r16)
   26900:	14c5c83a 	sub	r2,r2,r19
   26904:	1cc7883a 	add	r3,r3,r19
   26908:	80800215 	stw	r2,8(r16)
   2690c:	80c00015 	stw	r3,0(r16)
   26910:	10004326 	beq	r2,zero,26a20 <__sfvwrite_r+0x450>
   26914:	9805883a 	mov	r2,r19
   26918:	003f8606 	br	26734 <__alt_data_end+0xfffe6734>
   2691c:	b00d883a 	mov	r6,r22
   26920:	e00b883a 	mov	r5,fp
   26924:	da000115 	stw	r8,4(sp)
   26928:	0026e480 	call	26e48 <memmove>
   2692c:	80800217 	ldw	r2,8(r16)
   26930:	80c00017 	ldw	r3,0(r16)
   26934:	da000117 	ldw	r8,4(sp)
   26938:	1585c83a 	sub	r2,r2,r22
   2693c:	1dad883a 	add	r22,r3,r22
   26940:	80800215 	stw	r2,8(r16)
   26944:	85800015 	stw	r22,0(r16)
   26948:	003fbf06 	br	26848 <__alt_data_end+0xfffe6848>
   2694c:	81000017 	ldw	r4,0(r16)
   26950:	9027883a 	mov	r19,r18
   26954:	902f883a 	mov	r23,r18
   26958:	003f6c06 	br	2670c <__alt_data_end+0xfffe670c>
   2695c:	900d883a 	mov	r6,r18
   26960:	01400284 	movi	r5,10
   26964:	e009883a 	mov	r4,fp
   26968:	0026c1c0 	call	26c1c <memchr>
   2696c:	10003e26 	beq	r2,zero,26a68 <__sfvwrite_r+0x498>
   26970:	10800044 	addi	r2,r2,1
   26974:	1727c83a 	sub	r19,r2,fp
   26978:	02000044 	movi	r8,1
   2697c:	003f9d06 	br	267f4 <__alt_data_end+0xfffe67f4>
   26980:	80800517 	ldw	r2,20(r16)
   26984:	81400417 	ldw	r5,16(r16)
   26988:	81c00017 	ldw	r7,0(r16)
   2698c:	10a7883a 	add	r19,r2,r2
   26990:	9885883a 	add	r2,r19,r2
   26994:	1026d7fa 	srli	r19,r2,31
   26998:	396dc83a 	sub	r22,r7,r5
   2699c:	b1000044 	addi	r4,r22,1
   269a0:	9885883a 	add	r2,r19,r2
   269a4:	1027d07a 	srai	r19,r2,1
   269a8:	2485883a 	add	r2,r4,r18
   269ac:	980d883a 	mov	r6,r19
   269b0:	9880022e 	bgeu	r19,r2,269bc <__sfvwrite_r+0x3ec>
   269b4:	1027883a 	mov	r19,r2
   269b8:	100d883a 	mov	r6,r2
   269bc:	18c1000c 	andi	r3,r3,1024
   269c0:	18001c26 	beq	r3,zero,26a34 <__sfvwrite_r+0x464>
   269c4:	300b883a 	mov	r5,r6
   269c8:	a809883a 	mov	r4,r21
   269cc:	00218d80 	call	218d8 <_malloc_r>
   269d0:	102f883a 	mov	r23,r2
   269d4:	10002926 	beq	r2,zero,26a7c <__sfvwrite_r+0x4ac>
   269d8:	81400417 	ldw	r5,16(r16)
   269dc:	b00d883a 	mov	r6,r22
   269e0:	1009883a 	mov	r4,r2
   269e4:	0026d000 	call	26d00 <memcpy>
   269e8:	8080030b 	ldhu	r2,12(r16)
   269ec:	00fedfc4 	movi	r3,-1153
   269f0:	10c4703a 	and	r2,r2,r3
   269f4:	10802014 	ori	r2,r2,128
   269f8:	8080030d 	sth	r2,12(r16)
   269fc:	bd89883a 	add	r4,r23,r22
   26a00:	9d8fc83a 	sub	r7,r19,r22
   26a04:	85c00415 	stw	r23,16(r16)
   26a08:	84c00515 	stw	r19,20(r16)
   26a0c:	81000015 	stw	r4,0(r16)
   26a10:	9027883a 	mov	r19,r18
   26a14:	81c00215 	stw	r7,8(r16)
   26a18:	902f883a 	mov	r23,r18
   26a1c:	003f3b06 	br	2670c <__alt_data_end+0xfffe670c>
   26a20:	800b883a 	mov	r5,r16
   26a24:	a809883a 	mov	r4,r21
   26a28:	002074c0 	call	2074c <_fflush_r>
   26a2c:	103fb926 	beq	r2,zero,26914 <__alt_data_end+0xfffe6914>
   26a30:	003f6506 	br	267c8 <__alt_data_end+0xfffe67c8>
   26a34:	a809883a 	mov	r4,r21
   26a38:	00280000 	call	28000 <_realloc_r>
   26a3c:	102f883a 	mov	r23,r2
   26a40:	103fee1e 	bne	r2,zero,269fc <__alt_data_end+0xfffe69fc>
   26a44:	81400417 	ldw	r5,16(r16)
   26a48:	a809883a 	mov	r4,r21
   26a4c:	0020da80 	call	20da8 <_free_r>
   26a50:	8080030b 	ldhu	r2,12(r16)
   26a54:	00ffdfc4 	movi	r3,-129
   26a58:	1884703a 	and	r2,r3,r2
   26a5c:	00c00304 	movi	r3,12
   26a60:	a8c00015 	stw	r3,0(r21)
   26a64:	003f5906 	br	267cc <__alt_data_end+0xfffe67cc>
   26a68:	94c00044 	addi	r19,r18,1
   26a6c:	02000044 	movi	r8,1
   26a70:	003f6006 	br	267f4 <__alt_data_end+0xfffe67f4>
   26a74:	00bfffc4 	movi	r2,-1
   26a78:	003f0306 	br	26688 <__alt_data_end+0xfffe6688>
   26a7c:	00800304 	movi	r2,12
   26a80:	a8800015 	stw	r2,0(r21)
   26a84:	8080030b 	ldhu	r2,12(r16)
   26a88:	003f5006 	br	267cc <__alt_data_end+0xfffe67cc>

00026a8c <_isatty_r>:
   26a8c:	defffd04 	addi	sp,sp,-12
   26a90:	dc000015 	stw	r16,0(sp)
   26a94:	040000f4 	movhi	r16,3
   26a98:	dc400115 	stw	r17,4(sp)
   26a9c:	840e7304 	addi	r16,r16,14796
   26aa0:	2023883a 	mov	r17,r4
   26aa4:	2809883a 	mov	r4,r5
   26aa8:	dfc00215 	stw	ra,8(sp)
   26aac:	80000015 	stw	zero,0(r16)
   26ab0:	002d8340 	call	2d834 <isatty>
   26ab4:	00ffffc4 	movi	r3,-1
   26ab8:	10c00526 	beq	r2,r3,26ad0 <_isatty_r+0x44>
   26abc:	dfc00217 	ldw	ra,8(sp)
   26ac0:	dc400117 	ldw	r17,4(sp)
   26ac4:	dc000017 	ldw	r16,0(sp)
   26ac8:	dec00304 	addi	sp,sp,12
   26acc:	f800283a 	ret
   26ad0:	80c00017 	ldw	r3,0(r16)
   26ad4:	183ff926 	beq	r3,zero,26abc <__alt_data_end+0xfffe6abc>
   26ad8:	88c00015 	stw	r3,0(r17)
   26adc:	003ff706 	br	26abc <__alt_data_end+0xfffe6abc>

00026ae0 <_setlocale_r>:
   26ae0:	30001b26 	beq	r6,zero,26b50 <_setlocale_r+0x70>
   26ae4:	014000f4 	movhi	r5,3
   26ae8:	defffe04 	addi	sp,sp,-8
   26aec:	29403d04 	addi	r5,r5,244
   26af0:	3009883a 	mov	r4,r6
   26af4:	dc000015 	stw	r16,0(sp)
   26af8:	dfc00115 	stw	ra,4(sp)
   26afc:	3021883a 	mov	r16,r6
   26b00:	00285d80 	call	285d8 <strcmp>
   26b04:	1000061e 	bne	r2,zero,26b20 <_setlocale_r+0x40>
   26b08:	008000f4 	movhi	r2,3
   26b0c:	10801e04 	addi	r2,r2,120
   26b10:	dfc00117 	ldw	ra,4(sp)
   26b14:	dc000017 	ldw	r16,0(sp)
   26b18:	dec00204 	addi	sp,sp,8
   26b1c:	f800283a 	ret
   26b20:	014000f4 	movhi	r5,3
   26b24:	29401e04 	addi	r5,r5,120
   26b28:	8009883a 	mov	r4,r16
   26b2c:	00285d80 	call	285d8 <strcmp>
   26b30:	103ff526 	beq	r2,zero,26b08 <__alt_data_end+0xfffe6b08>
   26b34:	014000f4 	movhi	r5,3
   26b38:	29402804 	addi	r5,r5,160
   26b3c:	8009883a 	mov	r4,r16
   26b40:	00285d80 	call	285d8 <strcmp>
   26b44:	103ff026 	beq	r2,zero,26b08 <__alt_data_end+0xfffe6b08>
   26b48:	0005883a 	mov	r2,zero
   26b4c:	003ff006 	br	26b10 <__alt_data_end+0xfffe6b10>
   26b50:	008000f4 	movhi	r2,3
   26b54:	10801e04 	addi	r2,r2,120
   26b58:	f800283a 	ret

00026b5c <__locale_charset>:
   26b5c:	008000f4 	movhi	r2,3
   26b60:	1082f504 	addi	r2,r2,3028
   26b64:	f800283a 	ret

00026b68 <__locale_mb_cur_max>:
   26b68:	008000f4 	movhi	r2,3
   26b6c:	10879c04 	addi	r2,r2,7792
   26b70:	10800017 	ldw	r2,0(r2)
   26b74:	f800283a 	ret

00026b78 <__locale_msgcharset>:
   26b78:	008000f4 	movhi	r2,3
   26b7c:	1082ed04 	addi	r2,r2,2996
   26b80:	f800283a 	ret

00026b84 <__locale_cjk_lang>:
   26b84:	0005883a 	mov	r2,zero
   26b88:	f800283a 	ret

00026b8c <_localeconv_r>:
   26b8c:	008000f4 	movhi	r2,3
   26b90:	1082fd04 	addi	r2,r2,3060
   26b94:	f800283a 	ret

00026b98 <setlocale>:
   26b98:	008000f4 	movhi	r2,3
   26b9c:	10879904 	addi	r2,r2,7780
   26ba0:	280d883a 	mov	r6,r5
   26ba4:	200b883a 	mov	r5,r4
   26ba8:	11000017 	ldw	r4,0(r2)
   26bac:	0026ae01 	jmpi	26ae0 <_setlocale_r>

00026bb0 <localeconv>:
   26bb0:	008000f4 	movhi	r2,3
   26bb4:	1082fd04 	addi	r2,r2,3060
   26bb8:	f800283a 	ret

00026bbc <_lseek_r>:
   26bbc:	defffd04 	addi	sp,sp,-12
   26bc0:	2805883a 	mov	r2,r5
   26bc4:	dc000015 	stw	r16,0(sp)
   26bc8:	040000f4 	movhi	r16,3
   26bcc:	dc400115 	stw	r17,4(sp)
   26bd0:	300b883a 	mov	r5,r6
   26bd4:	840e7304 	addi	r16,r16,14796
   26bd8:	2023883a 	mov	r17,r4
   26bdc:	380d883a 	mov	r6,r7
   26be0:	1009883a 	mov	r4,r2
   26be4:	dfc00215 	stw	ra,8(sp)
   26be8:	80000015 	stw	zero,0(r16)
   26bec:	002da000 	call	2da00 <lseek>
   26bf0:	00ffffc4 	movi	r3,-1
   26bf4:	10c00526 	beq	r2,r3,26c0c <_lseek_r+0x50>
   26bf8:	dfc00217 	ldw	ra,8(sp)
   26bfc:	dc400117 	ldw	r17,4(sp)
   26c00:	dc000017 	ldw	r16,0(sp)
   26c04:	dec00304 	addi	sp,sp,12
   26c08:	f800283a 	ret
   26c0c:	80c00017 	ldw	r3,0(r16)
   26c10:	183ff926 	beq	r3,zero,26bf8 <__alt_data_end+0xfffe6bf8>
   26c14:	88c00015 	stw	r3,0(r17)
   26c18:	003ff706 	br	26bf8 <__alt_data_end+0xfffe6bf8>

00026c1c <memchr>:
   26c1c:	208000cc 	andi	r2,r4,3
   26c20:	280f883a 	mov	r7,r5
   26c24:	10003426 	beq	r2,zero,26cf8 <memchr+0xdc>
   26c28:	30bfffc4 	addi	r2,r6,-1
   26c2c:	30001a26 	beq	r6,zero,26c98 <memchr+0x7c>
   26c30:	20c00003 	ldbu	r3,0(r4)
   26c34:	29803fcc 	andi	r6,r5,255
   26c38:	30c0051e 	bne	r6,r3,26c50 <memchr+0x34>
   26c3c:	00001806 	br	26ca0 <memchr+0x84>
   26c40:	10001526 	beq	r2,zero,26c98 <memchr+0x7c>
   26c44:	20c00003 	ldbu	r3,0(r4)
   26c48:	10bfffc4 	addi	r2,r2,-1
   26c4c:	30c01426 	beq	r6,r3,26ca0 <memchr+0x84>
   26c50:	21000044 	addi	r4,r4,1
   26c54:	20c000cc 	andi	r3,r4,3
   26c58:	183ff91e 	bne	r3,zero,26c40 <__alt_data_end+0xfffe6c40>
   26c5c:	020000c4 	movi	r8,3
   26c60:	40801136 	bltu	r8,r2,26ca8 <memchr+0x8c>
   26c64:	10000c26 	beq	r2,zero,26c98 <memchr+0x7c>
   26c68:	20c00003 	ldbu	r3,0(r4)
   26c6c:	29403fcc 	andi	r5,r5,255
   26c70:	28c00b26 	beq	r5,r3,26ca0 <memchr+0x84>
   26c74:	20c00044 	addi	r3,r4,1
   26c78:	39803fcc 	andi	r6,r7,255
   26c7c:	2089883a 	add	r4,r4,r2
   26c80:	00000306 	br	26c90 <memchr+0x74>
   26c84:	18c00044 	addi	r3,r3,1
   26c88:	197fffc3 	ldbu	r5,-1(r3)
   26c8c:	31400526 	beq	r6,r5,26ca4 <memchr+0x88>
   26c90:	1805883a 	mov	r2,r3
   26c94:	20fffb1e 	bne	r4,r3,26c84 <__alt_data_end+0xfffe6c84>
   26c98:	0005883a 	mov	r2,zero
   26c9c:	f800283a 	ret
   26ca0:	2005883a 	mov	r2,r4
   26ca4:	f800283a 	ret
   26ca8:	28c03fcc 	andi	r3,r5,255
   26cac:	1812923a 	slli	r9,r3,8
   26cb0:	02ffbff4 	movhi	r11,65279
   26cb4:	02a02074 	movhi	r10,32897
   26cb8:	48d2b03a 	or	r9,r9,r3
   26cbc:	4806943a 	slli	r3,r9,16
   26cc0:	5affbfc4 	addi	r11,r11,-257
   26cc4:	52a02004 	addi	r10,r10,-32640
   26cc8:	48d2b03a 	or	r9,r9,r3
   26ccc:	20c00017 	ldw	r3,0(r4)
   26cd0:	48c6f03a 	xor	r3,r9,r3
   26cd4:	1acd883a 	add	r6,r3,r11
   26cd8:	00c6303a 	nor	r3,zero,r3
   26cdc:	30c6703a 	and	r3,r6,r3
   26ce0:	1a86703a 	and	r3,r3,r10
   26ce4:	183fe01e 	bne	r3,zero,26c68 <__alt_data_end+0xfffe6c68>
   26ce8:	10bfff04 	addi	r2,r2,-4
   26cec:	21000104 	addi	r4,r4,4
   26cf0:	40bff636 	bltu	r8,r2,26ccc <__alt_data_end+0xfffe6ccc>
   26cf4:	003fdb06 	br	26c64 <__alt_data_end+0xfffe6c64>
   26cf8:	3005883a 	mov	r2,r6
   26cfc:	003fd706 	br	26c5c <__alt_data_end+0xfffe6c5c>

00026d00 <memcpy>:
   26d00:	defffd04 	addi	sp,sp,-12
   26d04:	dfc00215 	stw	ra,8(sp)
   26d08:	dc400115 	stw	r17,4(sp)
   26d0c:	dc000015 	stw	r16,0(sp)
   26d10:	00c003c4 	movi	r3,15
   26d14:	2005883a 	mov	r2,r4
   26d18:	1980452e 	bgeu	r3,r6,26e30 <memcpy+0x130>
   26d1c:	2906b03a 	or	r3,r5,r4
   26d20:	18c000cc 	andi	r3,r3,3
   26d24:	1800441e 	bne	r3,zero,26e38 <memcpy+0x138>
   26d28:	347ffc04 	addi	r17,r6,-16
   26d2c:	8822d13a 	srli	r17,r17,4
   26d30:	28c00104 	addi	r3,r5,4
   26d34:	23400104 	addi	r13,r4,4
   26d38:	8820913a 	slli	r16,r17,4
   26d3c:	2b000204 	addi	r12,r5,8
   26d40:	22c00204 	addi	r11,r4,8
   26d44:	84000504 	addi	r16,r16,20
   26d48:	2a800304 	addi	r10,r5,12
   26d4c:	22400304 	addi	r9,r4,12
   26d50:	2c21883a 	add	r16,r5,r16
   26d54:	2811883a 	mov	r8,r5
   26d58:	200f883a 	mov	r7,r4
   26d5c:	41000017 	ldw	r4,0(r8)
   26d60:	1fc00017 	ldw	ra,0(r3)
   26d64:	63c00017 	ldw	r15,0(r12)
   26d68:	39000015 	stw	r4,0(r7)
   26d6c:	53800017 	ldw	r14,0(r10)
   26d70:	6fc00015 	stw	ra,0(r13)
   26d74:	5bc00015 	stw	r15,0(r11)
   26d78:	4b800015 	stw	r14,0(r9)
   26d7c:	18c00404 	addi	r3,r3,16
   26d80:	39c00404 	addi	r7,r7,16
   26d84:	42000404 	addi	r8,r8,16
   26d88:	6b400404 	addi	r13,r13,16
   26d8c:	63000404 	addi	r12,r12,16
   26d90:	5ac00404 	addi	r11,r11,16
   26d94:	52800404 	addi	r10,r10,16
   26d98:	4a400404 	addi	r9,r9,16
   26d9c:	1c3fef1e 	bne	r3,r16,26d5c <__alt_data_end+0xfffe6d5c>
   26da0:	89c00044 	addi	r7,r17,1
   26da4:	380e913a 	slli	r7,r7,4
   26da8:	310003cc 	andi	r4,r6,15
   26dac:	02c000c4 	movi	r11,3
   26db0:	11c7883a 	add	r3,r2,r7
   26db4:	29cb883a 	add	r5,r5,r7
   26db8:	5900212e 	bgeu	r11,r4,26e40 <memcpy+0x140>
   26dbc:	1813883a 	mov	r9,r3
   26dc0:	2811883a 	mov	r8,r5
   26dc4:	200f883a 	mov	r7,r4
   26dc8:	42800017 	ldw	r10,0(r8)
   26dcc:	4a400104 	addi	r9,r9,4
   26dd0:	39ffff04 	addi	r7,r7,-4
   26dd4:	4abfff15 	stw	r10,-4(r9)
   26dd8:	42000104 	addi	r8,r8,4
   26ddc:	59fffa36 	bltu	r11,r7,26dc8 <__alt_data_end+0xfffe6dc8>
   26de0:	213fff04 	addi	r4,r4,-4
   26de4:	2008d0ba 	srli	r4,r4,2
   26de8:	318000cc 	andi	r6,r6,3
   26dec:	21000044 	addi	r4,r4,1
   26df0:	2109883a 	add	r4,r4,r4
   26df4:	2109883a 	add	r4,r4,r4
   26df8:	1907883a 	add	r3,r3,r4
   26dfc:	290b883a 	add	r5,r5,r4
   26e00:	30000626 	beq	r6,zero,26e1c <memcpy+0x11c>
   26e04:	198d883a 	add	r6,r3,r6
   26e08:	29c00003 	ldbu	r7,0(r5)
   26e0c:	18c00044 	addi	r3,r3,1
   26e10:	29400044 	addi	r5,r5,1
   26e14:	19ffffc5 	stb	r7,-1(r3)
   26e18:	19bffb1e 	bne	r3,r6,26e08 <__alt_data_end+0xfffe6e08>
   26e1c:	dfc00217 	ldw	ra,8(sp)
   26e20:	dc400117 	ldw	r17,4(sp)
   26e24:	dc000017 	ldw	r16,0(sp)
   26e28:	dec00304 	addi	sp,sp,12
   26e2c:	f800283a 	ret
   26e30:	2007883a 	mov	r3,r4
   26e34:	003ff206 	br	26e00 <__alt_data_end+0xfffe6e00>
   26e38:	2007883a 	mov	r3,r4
   26e3c:	003ff106 	br	26e04 <__alt_data_end+0xfffe6e04>
   26e40:	200d883a 	mov	r6,r4
   26e44:	003fee06 	br	26e00 <__alt_data_end+0xfffe6e00>

00026e48 <memmove>:
   26e48:	2005883a 	mov	r2,r4
   26e4c:	29000b2e 	bgeu	r5,r4,26e7c <memmove+0x34>
   26e50:	298f883a 	add	r7,r5,r6
   26e54:	21c0092e 	bgeu	r4,r7,26e7c <memmove+0x34>
   26e58:	2187883a 	add	r3,r4,r6
   26e5c:	198bc83a 	sub	r5,r3,r6
   26e60:	30004826 	beq	r6,zero,26f84 <memmove+0x13c>
   26e64:	39ffffc4 	addi	r7,r7,-1
   26e68:	39000003 	ldbu	r4,0(r7)
   26e6c:	18ffffc4 	addi	r3,r3,-1
   26e70:	19000005 	stb	r4,0(r3)
   26e74:	28fffb1e 	bne	r5,r3,26e64 <__alt_data_end+0xfffe6e64>
   26e78:	f800283a 	ret
   26e7c:	00c003c4 	movi	r3,15
   26e80:	1980412e 	bgeu	r3,r6,26f88 <memmove+0x140>
   26e84:	2886b03a 	or	r3,r5,r2
   26e88:	18c000cc 	andi	r3,r3,3
   26e8c:	1800401e 	bne	r3,zero,26f90 <memmove+0x148>
   26e90:	33fffc04 	addi	r15,r6,-16
   26e94:	781ed13a 	srli	r15,r15,4
   26e98:	28c00104 	addi	r3,r5,4
   26e9c:	13400104 	addi	r13,r2,4
   26ea0:	781c913a 	slli	r14,r15,4
   26ea4:	2b000204 	addi	r12,r5,8
   26ea8:	12c00204 	addi	r11,r2,8
   26eac:	73800504 	addi	r14,r14,20
   26eb0:	2a800304 	addi	r10,r5,12
   26eb4:	12400304 	addi	r9,r2,12
   26eb8:	2b9d883a 	add	r14,r5,r14
   26ebc:	2811883a 	mov	r8,r5
   26ec0:	100f883a 	mov	r7,r2
   26ec4:	41000017 	ldw	r4,0(r8)
   26ec8:	39c00404 	addi	r7,r7,16
   26ecc:	18c00404 	addi	r3,r3,16
   26ed0:	393ffc15 	stw	r4,-16(r7)
   26ed4:	193ffc17 	ldw	r4,-16(r3)
   26ed8:	6b400404 	addi	r13,r13,16
   26edc:	5ac00404 	addi	r11,r11,16
   26ee0:	693ffc15 	stw	r4,-16(r13)
   26ee4:	61000017 	ldw	r4,0(r12)
   26ee8:	4a400404 	addi	r9,r9,16
   26eec:	42000404 	addi	r8,r8,16
   26ef0:	593ffc15 	stw	r4,-16(r11)
   26ef4:	51000017 	ldw	r4,0(r10)
   26ef8:	63000404 	addi	r12,r12,16
   26efc:	52800404 	addi	r10,r10,16
   26f00:	493ffc15 	stw	r4,-16(r9)
   26f04:	1bbfef1e 	bne	r3,r14,26ec4 <__alt_data_end+0xfffe6ec4>
   26f08:	79000044 	addi	r4,r15,1
   26f0c:	2008913a 	slli	r4,r4,4
   26f10:	328003cc 	andi	r10,r6,15
   26f14:	02c000c4 	movi	r11,3
   26f18:	1107883a 	add	r3,r2,r4
   26f1c:	290b883a 	add	r5,r5,r4
   26f20:	5a801e2e 	bgeu	r11,r10,26f9c <memmove+0x154>
   26f24:	1813883a 	mov	r9,r3
   26f28:	2811883a 	mov	r8,r5
   26f2c:	500f883a 	mov	r7,r10
   26f30:	41000017 	ldw	r4,0(r8)
   26f34:	4a400104 	addi	r9,r9,4
   26f38:	39ffff04 	addi	r7,r7,-4
   26f3c:	493fff15 	stw	r4,-4(r9)
   26f40:	42000104 	addi	r8,r8,4
   26f44:	59fffa36 	bltu	r11,r7,26f30 <__alt_data_end+0xfffe6f30>
   26f48:	513fff04 	addi	r4,r10,-4
   26f4c:	2008d0ba 	srli	r4,r4,2
   26f50:	318000cc 	andi	r6,r6,3
   26f54:	21000044 	addi	r4,r4,1
   26f58:	2109883a 	add	r4,r4,r4
   26f5c:	2109883a 	add	r4,r4,r4
   26f60:	1907883a 	add	r3,r3,r4
   26f64:	290b883a 	add	r5,r5,r4
   26f68:	30000b26 	beq	r6,zero,26f98 <memmove+0x150>
   26f6c:	198d883a 	add	r6,r3,r6
   26f70:	29c00003 	ldbu	r7,0(r5)
   26f74:	18c00044 	addi	r3,r3,1
   26f78:	29400044 	addi	r5,r5,1
   26f7c:	19ffffc5 	stb	r7,-1(r3)
   26f80:	19bffb1e 	bne	r3,r6,26f70 <__alt_data_end+0xfffe6f70>
   26f84:	f800283a 	ret
   26f88:	1007883a 	mov	r3,r2
   26f8c:	003ff606 	br	26f68 <__alt_data_end+0xfffe6f68>
   26f90:	1007883a 	mov	r3,r2
   26f94:	003ff506 	br	26f6c <__alt_data_end+0xfffe6f6c>
   26f98:	f800283a 	ret
   26f9c:	500d883a 	mov	r6,r10
   26fa0:	003ff106 	br	26f68 <__alt_data_end+0xfffe6f68>

00026fa4 <_Balloc>:
   26fa4:	20801317 	ldw	r2,76(r4)
   26fa8:	defffc04 	addi	sp,sp,-16
   26fac:	dc400115 	stw	r17,4(sp)
   26fb0:	dc000015 	stw	r16,0(sp)
   26fb4:	dfc00315 	stw	ra,12(sp)
   26fb8:	dc800215 	stw	r18,8(sp)
   26fbc:	2023883a 	mov	r17,r4
   26fc0:	2821883a 	mov	r16,r5
   26fc4:	10000f26 	beq	r2,zero,27004 <_Balloc+0x60>
   26fc8:	8407883a 	add	r3,r16,r16
   26fcc:	18c7883a 	add	r3,r3,r3
   26fd0:	10c7883a 	add	r3,r2,r3
   26fd4:	18800017 	ldw	r2,0(r3)
   26fd8:	10001126 	beq	r2,zero,27020 <_Balloc+0x7c>
   26fdc:	11000017 	ldw	r4,0(r2)
   26fe0:	19000015 	stw	r4,0(r3)
   26fe4:	10000415 	stw	zero,16(r2)
   26fe8:	10000315 	stw	zero,12(r2)
   26fec:	dfc00317 	ldw	ra,12(sp)
   26ff0:	dc800217 	ldw	r18,8(sp)
   26ff4:	dc400117 	ldw	r17,4(sp)
   26ff8:	dc000017 	ldw	r16,0(sp)
   26ffc:	dec00404 	addi	sp,sp,16
   27000:	f800283a 	ret
   27004:	01800844 	movi	r6,33
   27008:	01400104 	movi	r5,4
   2700c:	0029cfc0 	call	29cfc <_calloc_r>
   27010:	88801315 	stw	r2,76(r17)
   27014:	103fec1e 	bne	r2,zero,26fc8 <__alt_data_end+0xfffe6fc8>
   27018:	0005883a 	mov	r2,zero
   2701c:	003ff306 	br	26fec <__alt_data_end+0xfffe6fec>
   27020:	01400044 	movi	r5,1
   27024:	2c24983a 	sll	r18,r5,r16
   27028:	8809883a 	mov	r4,r17
   2702c:	91800144 	addi	r6,r18,5
   27030:	318d883a 	add	r6,r6,r6
   27034:	318d883a 	add	r6,r6,r6
   27038:	0029cfc0 	call	29cfc <_calloc_r>
   2703c:	103ff626 	beq	r2,zero,27018 <__alt_data_end+0xfffe7018>
   27040:	14000115 	stw	r16,4(r2)
   27044:	14800215 	stw	r18,8(r2)
   27048:	003fe606 	br	26fe4 <__alt_data_end+0xfffe6fe4>

0002704c <_Bfree>:
   2704c:	28000826 	beq	r5,zero,27070 <_Bfree+0x24>
   27050:	28c00117 	ldw	r3,4(r5)
   27054:	20801317 	ldw	r2,76(r4)
   27058:	18c7883a 	add	r3,r3,r3
   2705c:	18c7883a 	add	r3,r3,r3
   27060:	10c5883a 	add	r2,r2,r3
   27064:	10c00017 	ldw	r3,0(r2)
   27068:	28c00015 	stw	r3,0(r5)
   2706c:	11400015 	stw	r5,0(r2)
   27070:	f800283a 	ret

00027074 <__multadd>:
   27074:	defffa04 	addi	sp,sp,-24
   27078:	dc800315 	stw	r18,12(sp)
   2707c:	dc400215 	stw	r17,8(sp)
   27080:	dc000115 	stw	r16,4(sp)
   27084:	2823883a 	mov	r17,r5
   27088:	2c000417 	ldw	r16,16(r5)
   2708c:	dfc00515 	stw	ra,20(sp)
   27090:	dcc00415 	stw	r19,16(sp)
   27094:	2025883a 	mov	r18,r4
   27098:	29400504 	addi	r5,r5,20
   2709c:	0011883a 	mov	r8,zero
   270a0:	28c00017 	ldw	r3,0(r5)
   270a4:	29400104 	addi	r5,r5,4
   270a8:	42000044 	addi	r8,r8,1
   270ac:	18bfffcc 	andi	r2,r3,65535
   270b0:	1185383a 	mul	r2,r2,r6
   270b4:	1806d43a 	srli	r3,r3,16
   270b8:	11cf883a 	add	r7,r2,r7
   270bc:	3808d43a 	srli	r4,r7,16
   270c0:	1987383a 	mul	r3,r3,r6
   270c4:	38bfffcc 	andi	r2,r7,65535
   270c8:	1907883a 	add	r3,r3,r4
   270cc:	1808943a 	slli	r4,r3,16
   270d0:	180ed43a 	srli	r7,r3,16
   270d4:	2085883a 	add	r2,r4,r2
   270d8:	28bfff15 	stw	r2,-4(r5)
   270dc:	443ff016 	blt	r8,r16,270a0 <__alt_data_end+0xfffe70a0>
   270e0:	38000926 	beq	r7,zero,27108 <__multadd+0x94>
   270e4:	88800217 	ldw	r2,8(r17)
   270e8:	80800f0e 	bge	r16,r2,27128 <__multadd+0xb4>
   270ec:	80800144 	addi	r2,r16,5
   270f0:	1085883a 	add	r2,r2,r2
   270f4:	1085883a 	add	r2,r2,r2
   270f8:	8885883a 	add	r2,r17,r2
   270fc:	11c00015 	stw	r7,0(r2)
   27100:	84000044 	addi	r16,r16,1
   27104:	8c000415 	stw	r16,16(r17)
   27108:	8805883a 	mov	r2,r17
   2710c:	dfc00517 	ldw	ra,20(sp)
   27110:	dcc00417 	ldw	r19,16(sp)
   27114:	dc800317 	ldw	r18,12(sp)
   27118:	dc400217 	ldw	r17,8(sp)
   2711c:	dc000117 	ldw	r16,4(sp)
   27120:	dec00604 	addi	sp,sp,24
   27124:	f800283a 	ret
   27128:	89400117 	ldw	r5,4(r17)
   2712c:	9009883a 	mov	r4,r18
   27130:	d9c00015 	stw	r7,0(sp)
   27134:	29400044 	addi	r5,r5,1
   27138:	0026fa40 	call	26fa4 <_Balloc>
   2713c:	89800417 	ldw	r6,16(r17)
   27140:	89400304 	addi	r5,r17,12
   27144:	11000304 	addi	r4,r2,12
   27148:	31800084 	addi	r6,r6,2
   2714c:	318d883a 	add	r6,r6,r6
   27150:	318d883a 	add	r6,r6,r6
   27154:	1027883a 	mov	r19,r2
   27158:	0026d000 	call	26d00 <memcpy>
   2715c:	d9c00017 	ldw	r7,0(sp)
   27160:	88000a26 	beq	r17,zero,2718c <__multadd+0x118>
   27164:	88c00117 	ldw	r3,4(r17)
   27168:	90801317 	ldw	r2,76(r18)
   2716c:	18c7883a 	add	r3,r3,r3
   27170:	18c7883a 	add	r3,r3,r3
   27174:	10c5883a 	add	r2,r2,r3
   27178:	10c00017 	ldw	r3,0(r2)
   2717c:	88c00015 	stw	r3,0(r17)
   27180:	14400015 	stw	r17,0(r2)
   27184:	9823883a 	mov	r17,r19
   27188:	003fd806 	br	270ec <__alt_data_end+0xfffe70ec>
   2718c:	9823883a 	mov	r17,r19
   27190:	003fd606 	br	270ec <__alt_data_end+0xfffe70ec>

00027194 <__s2b>:
   27194:	defff904 	addi	sp,sp,-28
   27198:	dc400115 	stw	r17,4(sp)
   2719c:	dc000015 	stw	r16,0(sp)
   271a0:	2023883a 	mov	r17,r4
   271a4:	2821883a 	mov	r16,r5
   271a8:	39000204 	addi	r4,r7,8
   271ac:	01400244 	movi	r5,9
   271b0:	dcc00315 	stw	r19,12(sp)
   271b4:	dc800215 	stw	r18,8(sp)
   271b8:	dfc00615 	stw	ra,24(sp)
   271bc:	dd400515 	stw	r21,20(sp)
   271c0:	dd000415 	stw	r20,16(sp)
   271c4:	3825883a 	mov	r18,r7
   271c8:	3027883a 	mov	r19,r6
   271cc:	002adb80 	call	2adb8 <__divsi3>
   271d0:	00c00044 	movi	r3,1
   271d4:	000b883a 	mov	r5,zero
   271d8:	1880030e 	bge	r3,r2,271e8 <__s2b+0x54>
   271dc:	18c7883a 	add	r3,r3,r3
   271e0:	29400044 	addi	r5,r5,1
   271e4:	18bffd16 	blt	r3,r2,271dc <__alt_data_end+0xfffe71dc>
   271e8:	8809883a 	mov	r4,r17
   271ec:	0026fa40 	call	26fa4 <_Balloc>
   271f0:	d8c00717 	ldw	r3,28(sp)
   271f4:	10c00515 	stw	r3,20(r2)
   271f8:	00c00044 	movi	r3,1
   271fc:	10c00415 	stw	r3,16(r2)
   27200:	00c00244 	movi	r3,9
   27204:	1cc0210e 	bge	r3,r19,2728c <__s2b+0xf8>
   27208:	80eb883a 	add	r21,r16,r3
   2720c:	a829883a 	mov	r20,r21
   27210:	84e1883a 	add	r16,r16,r19
   27214:	a1c00007 	ldb	r7,0(r20)
   27218:	01800284 	movi	r6,10
   2721c:	a5000044 	addi	r20,r20,1
   27220:	100b883a 	mov	r5,r2
   27224:	39fff404 	addi	r7,r7,-48
   27228:	8809883a 	mov	r4,r17
   2722c:	00270740 	call	27074 <__multadd>
   27230:	a43ff81e 	bne	r20,r16,27214 <__alt_data_end+0xfffe7214>
   27234:	ace1883a 	add	r16,r21,r19
   27238:	843ffe04 	addi	r16,r16,-8
   2723c:	9c800a0e 	bge	r19,r18,27268 <__s2b+0xd4>
   27240:	94e5c83a 	sub	r18,r18,r19
   27244:	84a5883a 	add	r18,r16,r18
   27248:	81c00007 	ldb	r7,0(r16)
   2724c:	01800284 	movi	r6,10
   27250:	84000044 	addi	r16,r16,1
   27254:	100b883a 	mov	r5,r2
   27258:	39fff404 	addi	r7,r7,-48
   2725c:	8809883a 	mov	r4,r17
   27260:	00270740 	call	27074 <__multadd>
   27264:	84bff81e 	bne	r16,r18,27248 <__alt_data_end+0xfffe7248>
   27268:	dfc00617 	ldw	ra,24(sp)
   2726c:	dd400517 	ldw	r21,20(sp)
   27270:	dd000417 	ldw	r20,16(sp)
   27274:	dcc00317 	ldw	r19,12(sp)
   27278:	dc800217 	ldw	r18,8(sp)
   2727c:	dc400117 	ldw	r17,4(sp)
   27280:	dc000017 	ldw	r16,0(sp)
   27284:	dec00704 	addi	sp,sp,28
   27288:	f800283a 	ret
   2728c:	84000284 	addi	r16,r16,10
   27290:	1827883a 	mov	r19,r3
   27294:	003fe906 	br	2723c <__alt_data_end+0xfffe723c>

00027298 <__hi0bits>:
   27298:	20bfffec 	andhi	r2,r4,65535
   2729c:	1000141e 	bne	r2,zero,272f0 <__hi0bits+0x58>
   272a0:	2008943a 	slli	r4,r4,16
   272a4:	00800404 	movi	r2,16
   272a8:	20ffc02c 	andhi	r3,r4,65280
   272ac:	1800021e 	bne	r3,zero,272b8 <__hi0bits+0x20>
   272b0:	2008923a 	slli	r4,r4,8
   272b4:	10800204 	addi	r2,r2,8
   272b8:	20fc002c 	andhi	r3,r4,61440
   272bc:	1800021e 	bne	r3,zero,272c8 <__hi0bits+0x30>
   272c0:	2008913a 	slli	r4,r4,4
   272c4:	10800104 	addi	r2,r2,4
   272c8:	20f0002c 	andhi	r3,r4,49152
   272cc:	1800031e 	bne	r3,zero,272dc <__hi0bits+0x44>
   272d0:	2109883a 	add	r4,r4,r4
   272d4:	10800084 	addi	r2,r2,2
   272d8:	2109883a 	add	r4,r4,r4
   272dc:	20000316 	blt	r4,zero,272ec <__hi0bits+0x54>
   272e0:	2110002c 	andhi	r4,r4,16384
   272e4:	2000041e 	bne	r4,zero,272f8 <__hi0bits+0x60>
   272e8:	00800804 	movi	r2,32
   272ec:	f800283a 	ret
   272f0:	0005883a 	mov	r2,zero
   272f4:	003fec06 	br	272a8 <__alt_data_end+0xfffe72a8>
   272f8:	10800044 	addi	r2,r2,1
   272fc:	f800283a 	ret

00027300 <__lo0bits>:
   27300:	20c00017 	ldw	r3,0(r4)
   27304:	188001cc 	andi	r2,r3,7
   27308:	10000826 	beq	r2,zero,2732c <__lo0bits+0x2c>
   2730c:	1880004c 	andi	r2,r3,1
   27310:	1000211e 	bne	r2,zero,27398 <__lo0bits+0x98>
   27314:	1880008c 	andi	r2,r3,2
   27318:	1000211e 	bne	r2,zero,273a0 <__lo0bits+0xa0>
   2731c:	1806d0ba 	srli	r3,r3,2
   27320:	00800084 	movi	r2,2
   27324:	20c00015 	stw	r3,0(r4)
   27328:	f800283a 	ret
   2732c:	18bfffcc 	andi	r2,r3,65535
   27330:	10001326 	beq	r2,zero,27380 <__lo0bits+0x80>
   27334:	0005883a 	mov	r2,zero
   27338:	19403fcc 	andi	r5,r3,255
   2733c:	2800021e 	bne	r5,zero,27348 <__lo0bits+0x48>
   27340:	1806d23a 	srli	r3,r3,8
   27344:	10800204 	addi	r2,r2,8
   27348:	194003cc 	andi	r5,r3,15
   2734c:	2800021e 	bne	r5,zero,27358 <__lo0bits+0x58>
   27350:	1806d13a 	srli	r3,r3,4
   27354:	10800104 	addi	r2,r2,4
   27358:	194000cc 	andi	r5,r3,3
   2735c:	2800021e 	bne	r5,zero,27368 <__lo0bits+0x68>
   27360:	1806d0ba 	srli	r3,r3,2
   27364:	10800084 	addi	r2,r2,2
   27368:	1940004c 	andi	r5,r3,1
   2736c:	2800081e 	bne	r5,zero,27390 <__lo0bits+0x90>
   27370:	1806d07a 	srli	r3,r3,1
   27374:	1800051e 	bne	r3,zero,2738c <__lo0bits+0x8c>
   27378:	00800804 	movi	r2,32
   2737c:	f800283a 	ret
   27380:	1806d43a 	srli	r3,r3,16
   27384:	00800404 	movi	r2,16
   27388:	003feb06 	br	27338 <__alt_data_end+0xfffe7338>
   2738c:	10800044 	addi	r2,r2,1
   27390:	20c00015 	stw	r3,0(r4)
   27394:	f800283a 	ret
   27398:	0005883a 	mov	r2,zero
   2739c:	f800283a 	ret
   273a0:	1806d07a 	srli	r3,r3,1
   273a4:	00800044 	movi	r2,1
   273a8:	20c00015 	stw	r3,0(r4)
   273ac:	f800283a 	ret

000273b0 <__i2b>:
   273b0:	defffd04 	addi	sp,sp,-12
   273b4:	dc000015 	stw	r16,0(sp)
   273b8:	04000044 	movi	r16,1
   273bc:	dc400115 	stw	r17,4(sp)
   273c0:	2823883a 	mov	r17,r5
   273c4:	800b883a 	mov	r5,r16
   273c8:	dfc00215 	stw	ra,8(sp)
   273cc:	0026fa40 	call	26fa4 <_Balloc>
   273d0:	14400515 	stw	r17,20(r2)
   273d4:	14000415 	stw	r16,16(r2)
   273d8:	dfc00217 	ldw	ra,8(sp)
   273dc:	dc400117 	ldw	r17,4(sp)
   273e0:	dc000017 	ldw	r16,0(sp)
   273e4:	dec00304 	addi	sp,sp,12
   273e8:	f800283a 	ret

000273ec <__multiply>:
   273ec:	defffa04 	addi	sp,sp,-24
   273f0:	dcc00315 	stw	r19,12(sp)
   273f4:	dc800215 	stw	r18,8(sp)
   273f8:	34c00417 	ldw	r19,16(r6)
   273fc:	2c800417 	ldw	r18,16(r5)
   27400:	dd000415 	stw	r20,16(sp)
   27404:	dc400115 	stw	r17,4(sp)
   27408:	dfc00515 	stw	ra,20(sp)
   2740c:	dc000015 	stw	r16,0(sp)
   27410:	2829883a 	mov	r20,r5
   27414:	3023883a 	mov	r17,r6
   27418:	94c0050e 	bge	r18,r19,27430 <__multiply+0x44>
   2741c:	9007883a 	mov	r3,r18
   27420:	3029883a 	mov	r20,r6
   27424:	9825883a 	mov	r18,r19
   27428:	2823883a 	mov	r17,r5
   2742c:	1827883a 	mov	r19,r3
   27430:	a0800217 	ldw	r2,8(r20)
   27434:	94e1883a 	add	r16,r18,r19
   27438:	a1400117 	ldw	r5,4(r20)
   2743c:	1400010e 	bge	r2,r16,27444 <__multiply+0x58>
   27440:	29400044 	addi	r5,r5,1
   27444:	0026fa40 	call	26fa4 <_Balloc>
   27448:	8415883a 	add	r10,r16,r16
   2744c:	12c00504 	addi	r11,r2,20
   27450:	5295883a 	add	r10,r10,r10
   27454:	5a95883a 	add	r10,r11,r10
   27458:	5807883a 	mov	r3,r11
   2745c:	5a80032e 	bgeu	r11,r10,2746c <__multiply+0x80>
   27460:	18000015 	stw	zero,0(r3)
   27464:	18c00104 	addi	r3,r3,4
   27468:	1abffd36 	bltu	r3,r10,27460 <__alt_data_end+0xfffe7460>
   2746c:	9ce7883a 	add	r19,r19,r19
   27470:	94a5883a 	add	r18,r18,r18
   27474:	89800504 	addi	r6,r17,20
   27478:	9ce7883a 	add	r19,r19,r19
   2747c:	a3400504 	addi	r13,r20,20
   27480:	94a5883a 	add	r18,r18,r18
   27484:	34d9883a 	add	r12,r6,r19
   27488:	6c93883a 	add	r9,r13,r18
   2748c:	3300422e 	bgeu	r6,r12,27598 <__multiply+0x1ac>
   27490:	37c00017 	ldw	ra,0(r6)
   27494:	fbffffcc 	andi	r15,ra,65535
   27498:	78001b26 	beq	r15,zero,27508 <__multiply+0x11c>
   2749c:	5811883a 	mov	r8,r11
   274a0:	681d883a 	mov	r14,r13
   274a4:	000f883a 	mov	r7,zero
   274a8:	71000017 	ldw	r4,0(r14)
   274ac:	40c00017 	ldw	r3,0(r8)
   274b0:	73800104 	addi	r14,r14,4
   274b4:	217fffcc 	andi	r5,r4,65535
   274b8:	2bcb383a 	mul	r5,r5,r15
   274bc:	2008d43a 	srli	r4,r4,16
   274c0:	1c7fffcc 	andi	r17,r3,65535
   274c4:	2c4b883a 	add	r5,r5,r17
   274c8:	29cb883a 	add	r5,r5,r7
   274cc:	23c9383a 	mul	r4,r4,r15
   274d0:	1806d43a 	srli	r3,r3,16
   274d4:	280ed43a 	srli	r7,r5,16
   274d8:	297fffcc 	andi	r5,r5,65535
   274dc:	20c7883a 	add	r3,r4,r3
   274e0:	19c7883a 	add	r3,r3,r7
   274e4:	1808943a 	slli	r4,r3,16
   274e8:	4023883a 	mov	r17,r8
   274ec:	180ed43a 	srli	r7,r3,16
   274f0:	214ab03a 	or	r5,r4,r5
   274f4:	41400015 	stw	r5,0(r8)
   274f8:	42000104 	addi	r8,r8,4
   274fc:	727fea36 	bltu	r14,r9,274a8 <__alt_data_end+0xfffe74a8>
   27500:	89c00115 	stw	r7,4(r17)
   27504:	37c00017 	ldw	ra,0(r6)
   27508:	f83ed43a 	srli	ra,ra,16
   2750c:	f8001f26 	beq	ra,zero,2758c <__multiply+0x1a0>
   27510:	58c00017 	ldw	r3,0(r11)
   27514:	681d883a 	mov	r14,r13
   27518:	581f883a 	mov	r15,r11
   2751c:	1811883a 	mov	r8,r3
   27520:	5825883a 	mov	r18,r11
   27524:	000f883a 	mov	r7,zero
   27528:	00000106 	br	27530 <__multiply+0x144>
   2752c:	8825883a 	mov	r18,r17
   27530:	7140000b 	ldhu	r5,0(r14)
   27534:	4010d43a 	srli	r8,r8,16
   27538:	193fffcc 	andi	r4,r3,65535
   2753c:	2fcb383a 	mul	r5,r5,ra
   27540:	7bc00104 	addi	r15,r15,4
   27544:	73800104 	addi	r14,r14,4
   27548:	2a0b883a 	add	r5,r5,r8
   2754c:	29cb883a 	add	r5,r5,r7
   27550:	2806943a 	slli	r3,r5,16
   27554:	94400104 	addi	r17,r18,4
   27558:	280ad43a 	srli	r5,r5,16
   2755c:	1908b03a 	or	r4,r3,r4
   27560:	793fff15 	stw	r4,-4(r15)
   27564:	70ffff17 	ldw	r3,-4(r14)
   27568:	8a000017 	ldw	r8,0(r17)
   2756c:	1806d43a 	srli	r3,r3,16
   27570:	413fffcc 	andi	r4,r8,65535
   27574:	1fc7383a 	mul	r3,r3,ra
   27578:	1907883a 	add	r3,r3,r4
   2757c:	1947883a 	add	r3,r3,r5
   27580:	180ed43a 	srli	r7,r3,16
   27584:	727fe936 	bltu	r14,r9,2752c <__alt_data_end+0xfffe752c>
   27588:	90c00115 	stw	r3,4(r18)
   2758c:	31800104 	addi	r6,r6,4
   27590:	5ac00104 	addi	r11,r11,4
   27594:	333fbe36 	bltu	r6,r12,27490 <__alt_data_end+0xfffe7490>
   27598:	0400090e 	bge	zero,r16,275c0 <__multiply+0x1d4>
   2759c:	50ffff17 	ldw	r3,-4(r10)
   275a0:	52bfff04 	addi	r10,r10,-4
   275a4:	18000326 	beq	r3,zero,275b4 <__multiply+0x1c8>
   275a8:	00000506 	br	275c0 <__multiply+0x1d4>
   275ac:	50c00017 	ldw	r3,0(r10)
   275b0:	1800031e 	bne	r3,zero,275c0 <__multiply+0x1d4>
   275b4:	843fffc4 	addi	r16,r16,-1
   275b8:	52bfff04 	addi	r10,r10,-4
   275bc:	803ffb1e 	bne	r16,zero,275ac <__alt_data_end+0xfffe75ac>
   275c0:	14000415 	stw	r16,16(r2)
   275c4:	dfc00517 	ldw	ra,20(sp)
   275c8:	dd000417 	ldw	r20,16(sp)
   275cc:	dcc00317 	ldw	r19,12(sp)
   275d0:	dc800217 	ldw	r18,8(sp)
   275d4:	dc400117 	ldw	r17,4(sp)
   275d8:	dc000017 	ldw	r16,0(sp)
   275dc:	dec00604 	addi	sp,sp,24
   275e0:	f800283a 	ret

000275e4 <__pow5mult>:
   275e4:	defffa04 	addi	sp,sp,-24
   275e8:	dcc00315 	stw	r19,12(sp)
   275ec:	dc000015 	stw	r16,0(sp)
   275f0:	dfc00515 	stw	ra,20(sp)
   275f4:	dd000415 	stw	r20,16(sp)
   275f8:	dc800215 	stw	r18,8(sp)
   275fc:	dc400115 	stw	r17,4(sp)
   27600:	308000cc 	andi	r2,r6,3
   27604:	3021883a 	mov	r16,r6
   27608:	2027883a 	mov	r19,r4
   2760c:	10002f1e 	bne	r2,zero,276cc <__pow5mult+0xe8>
   27610:	2825883a 	mov	r18,r5
   27614:	8021d0ba 	srai	r16,r16,2
   27618:	80001a26 	beq	r16,zero,27684 <__pow5mult+0xa0>
   2761c:	9c401217 	ldw	r17,72(r19)
   27620:	8800061e 	bne	r17,zero,2763c <__pow5mult+0x58>
   27624:	00003406 	br	276f8 <__pow5mult+0x114>
   27628:	8021d07a 	srai	r16,r16,1
   2762c:	80001526 	beq	r16,zero,27684 <__pow5mult+0xa0>
   27630:	88800017 	ldw	r2,0(r17)
   27634:	10001c26 	beq	r2,zero,276a8 <__pow5mult+0xc4>
   27638:	1023883a 	mov	r17,r2
   2763c:	8080004c 	andi	r2,r16,1
   27640:	103ff926 	beq	r2,zero,27628 <__alt_data_end+0xfffe7628>
   27644:	880d883a 	mov	r6,r17
   27648:	900b883a 	mov	r5,r18
   2764c:	9809883a 	mov	r4,r19
   27650:	00273ec0 	call	273ec <__multiply>
   27654:	90001b26 	beq	r18,zero,276c4 <__pow5mult+0xe0>
   27658:	91000117 	ldw	r4,4(r18)
   2765c:	98c01317 	ldw	r3,76(r19)
   27660:	8021d07a 	srai	r16,r16,1
   27664:	2109883a 	add	r4,r4,r4
   27668:	2109883a 	add	r4,r4,r4
   2766c:	1907883a 	add	r3,r3,r4
   27670:	19000017 	ldw	r4,0(r3)
   27674:	91000015 	stw	r4,0(r18)
   27678:	1c800015 	stw	r18,0(r3)
   2767c:	1025883a 	mov	r18,r2
   27680:	803feb1e 	bne	r16,zero,27630 <__alt_data_end+0xfffe7630>
   27684:	9005883a 	mov	r2,r18
   27688:	dfc00517 	ldw	ra,20(sp)
   2768c:	dd000417 	ldw	r20,16(sp)
   27690:	dcc00317 	ldw	r19,12(sp)
   27694:	dc800217 	ldw	r18,8(sp)
   27698:	dc400117 	ldw	r17,4(sp)
   2769c:	dc000017 	ldw	r16,0(sp)
   276a0:	dec00604 	addi	sp,sp,24
   276a4:	f800283a 	ret
   276a8:	880d883a 	mov	r6,r17
   276ac:	880b883a 	mov	r5,r17
   276b0:	9809883a 	mov	r4,r19
   276b4:	00273ec0 	call	273ec <__multiply>
   276b8:	88800015 	stw	r2,0(r17)
   276bc:	10000015 	stw	zero,0(r2)
   276c0:	003fdd06 	br	27638 <__alt_data_end+0xfffe7638>
   276c4:	1025883a 	mov	r18,r2
   276c8:	003fd706 	br	27628 <__alt_data_end+0xfffe7628>
   276cc:	10bfffc4 	addi	r2,r2,-1
   276d0:	1085883a 	add	r2,r2,r2
   276d4:	00c000f4 	movhi	r3,3
   276d8:	18c04004 	addi	r3,r3,256
   276dc:	1085883a 	add	r2,r2,r2
   276e0:	1885883a 	add	r2,r3,r2
   276e4:	11800017 	ldw	r6,0(r2)
   276e8:	000f883a 	mov	r7,zero
   276ec:	00270740 	call	27074 <__multadd>
   276f0:	1025883a 	mov	r18,r2
   276f4:	003fc706 	br	27614 <__alt_data_end+0xfffe7614>
   276f8:	05000044 	movi	r20,1
   276fc:	a00b883a 	mov	r5,r20
   27700:	9809883a 	mov	r4,r19
   27704:	0026fa40 	call	26fa4 <_Balloc>
   27708:	1023883a 	mov	r17,r2
   2770c:	00809c44 	movi	r2,625
   27710:	88800515 	stw	r2,20(r17)
   27714:	8d000415 	stw	r20,16(r17)
   27718:	9c401215 	stw	r17,72(r19)
   2771c:	88000015 	stw	zero,0(r17)
   27720:	003fc606 	br	2763c <__alt_data_end+0xfffe763c>

00027724 <__lshift>:
   27724:	defff904 	addi	sp,sp,-28
   27728:	dd400515 	stw	r21,20(sp)
   2772c:	dcc00315 	stw	r19,12(sp)
   27730:	302bd17a 	srai	r21,r6,5
   27734:	2cc00417 	ldw	r19,16(r5)
   27738:	28800217 	ldw	r2,8(r5)
   2773c:	dd000415 	stw	r20,16(sp)
   27740:	ace7883a 	add	r19,r21,r19
   27744:	dc800215 	stw	r18,8(sp)
   27748:	dc400115 	stw	r17,4(sp)
   2774c:	dc000015 	stw	r16,0(sp)
   27750:	dfc00615 	stw	ra,24(sp)
   27754:	9c000044 	addi	r16,r19,1
   27758:	2823883a 	mov	r17,r5
   2775c:	3029883a 	mov	r20,r6
   27760:	2025883a 	mov	r18,r4
   27764:	29400117 	ldw	r5,4(r5)
   27768:	1400030e 	bge	r2,r16,27778 <__lshift+0x54>
   2776c:	1085883a 	add	r2,r2,r2
   27770:	29400044 	addi	r5,r5,1
   27774:	143ffd16 	blt	r2,r16,2776c <__alt_data_end+0xfffe776c>
   27778:	9009883a 	mov	r4,r18
   2777c:	0026fa40 	call	26fa4 <_Balloc>
   27780:	10c00504 	addi	r3,r2,20
   27784:	0540070e 	bge	zero,r21,277a4 <__lshift+0x80>
   27788:	ad6b883a 	add	r21,r21,r21
   2778c:	ad6b883a 	add	r21,r21,r21
   27790:	1809883a 	mov	r4,r3
   27794:	1d47883a 	add	r3,r3,r21
   27798:	20000015 	stw	zero,0(r4)
   2779c:	21000104 	addi	r4,r4,4
   277a0:	193ffd1e 	bne	r3,r4,27798 <__alt_data_end+0xfffe7798>
   277a4:	8a000417 	ldw	r8,16(r17)
   277a8:	89000504 	addi	r4,r17,20
   277ac:	a18007cc 	andi	r6,r20,31
   277b0:	4211883a 	add	r8,r8,r8
   277b4:	4211883a 	add	r8,r8,r8
   277b8:	2211883a 	add	r8,r4,r8
   277bc:	30002326 	beq	r6,zero,2784c <__lshift+0x128>
   277c0:	02400804 	movi	r9,32
   277c4:	4993c83a 	sub	r9,r9,r6
   277c8:	000b883a 	mov	r5,zero
   277cc:	21c00017 	ldw	r7,0(r4)
   277d0:	1815883a 	mov	r10,r3
   277d4:	18c00104 	addi	r3,r3,4
   277d8:	398e983a 	sll	r7,r7,r6
   277dc:	21000104 	addi	r4,r4,4
   277e0:	394ab03a 	or	r5,r7,r5
   277e4:	197fff15 	stw	r5,-4(r3)
   277e8:	217fff17 	ldw	r5,-4(r4)
   277ec:	2a4ad83a 	srl	r5,r5,r9
   277f0:	223ff636 	bltu	r4,r8,277cc <__alt_data_end+0xfffe77cc>
   277f4:	51400115 	stw	r5,4(r10)
   277f8:	28001a1e 	bne	r5,zero,27864 <__lshift+0x140>
   277fc:	843fffc4 	addi	r16,r16,-1
   27800:	14000415 	stw	r16,16(r2)
   27804:	88000826 	beq	r17,zero,27828 <__lshift+0x104>
   27808:	89000117 	ldw	r4,4(r17)
   2780c:	90c01317 	ldw	r3,76(r18)
   27810:	2109883a 	add	r4,r4,r4
   27814:	2109883a 	add	r4,r4,r4
   27818:	1907883a 	add	r3,r3,r4
   2781c:	19000017 	ldw	r4,0(r3)
   27820:	89000015 	stw	r4,0(r17)
   27824:	1c400015 	stw	r17,0(r3)
   27828:	dfc00617 	ldw	ra,24(sp)
   2782c:	dd400517 	ldw	r21,20(sp)
   27830:	dd000417 	ldw	r20,16(sp)
   27834:	dcc00317 	ldw	r19,12(sp)
   27838:	dc800217 	ldw	r18,8(sp)
   2783c:	dc400117 	ldw	r17,4(sp)
   27840:	dc000017 	ldw	r16,0(sp)
   27844:	dec00704 	addi	sp,sp,28
   27848:	f800283a 	ret
   2784c:	21400017 	ldw	r5,0(r4)
   27850:	18c00104 	addi	r3,r3,4
   27854:	21000104 	addi	r4,r4,4
   27858:	197fff15 	stw	r5,-4(r3)
   2785c:	223ffb36 	bltu	r4,r8,2784c <__alt_data_end+0xfffe784c>
   27860:	003fe606 	br	277fc <__alt_data_end+0xfffe77fc>
   27864:	9c000084 	addi	r16,r19,2
   27868:	003fe406 	br	277fc <__alt_data_end+0xfffe77fc>

0002786c <__mcmp>:
   2786c:	20800417 	ldw	r2,16(r4)
   27870:	28c00417 	ldw	r3,16(r5)
   27874:	10c5c83a 	sub	r2,r2,r3
   27878:	1000111e 	bne	r2,zero,278c0 <__mcmp+0x54>
   2787c:	18c7883a 	add	r3,r3,r3
   27880:	18c7883a 	add	r3,r3,r3
   27884:	21000504 	addi	r4,r4,20
   27888:	29400504 	addi	r5,r5,20
   2788c:	20c5883a 	add	r2,r4,r3
   27890:	28cb883a 	add	r5,r5,r3
   27894:	00000106 	br	2789c <__mcmp+0x30>
   27898:	20800a2e 	bgeu	r4,r2,278c4 <__mcmp+0x58>
   2789c:	10bfff04 	addi	r2,r2,-4
   278a0:	297fff04 	addi	r5,r5,-4
   278a4:	11800017 	ldw	r6,0(r2)
   278a8:	28c00017 	ldw	r3,0(r5)
   278ac:	30fffa26 	beq	r6,r3,27898 <__alt_data_end+0xfffe7898>
   278b0:	30c00236 	bltu	r6,r3,278bc <__mcmp+0x50>
   278b4:	00800044 	movi	r2,1
   278b8:	f800283a 	ret
   278bc:	00bfffc4 	movi	r2,-1
   278c0:	f800283a 	ret
   278c4:	0005883a 	mov	r2,zero
   278c8:	f800283a 	ret

000278cc <__mdiff>:
   278cc:	28c00417 	ldw	r3,16(r5)
   278d0:	30800417 	ldw	r2,16(r6)
   278d4:	defffa04 	addi	sp,sp,-24
   278d8:	dcc00315 	stw	r19,12(sp)
   278dc:	dc800215 	stw	r18,8(sp)
   278e0:	dfc00515 	stw	ra,20(sp)
   278e4:	dd000415 	stw	r20,16(sp)
   278e8:	dc400115 	stw	r17,4(sp)
   278ec:	dc000015 	stw	r16,0(sp)
   278f0:	1887c83a 	sub	r3,r3,r2
   278f4:	2825883a 	mov	r18,r5
   278f8:	3027883a 	mov	r19,r6
   278fc:	1800141e 	bne	r3,zero,27950 <__mdiff+0x84>
   27900:	1085883a 	add	r2,r2,r2
   27904:	1085883a 	add	r2,r2,r2
   27908:	2a000504 	addi	r8,r5,20
   2790c:	34000504 	addi	r16,r6,20
   27910:	4087883a 	add	r3,r8,r2
   27914:	8085883a 	add	r2,r16,r2
   27918:	00000106 	br	27920 <__mdiff+0x54>
   2791c:	40c0592e 	bgeu	r8,r3,27a84 <__mdiff+0x1b8>
   27920:	18ffff04 	addi	r3,r3,-4
   27924:	10bfff04 	addi	r2,r2,-4
   27928:	19c00017 	ldw	r7,0(r3)
   2792c:	11400017 	ldw	r5,0(r2)
   27930:	397ffa26 	beq	r7,r5,2791c <__alt_data_end+0xfffe791c>
   27934:	3940592e 	bgeu	r7,r5,27a9c <__mdiff+0x1d0>
   27938:	9005883a 	mov	r2,r18
   2793c:	4023883a 	mov	r17,r8
   27940:	9825883a 	mov	r18,r19
   27944:	05000044 	movi	r20,1
   27948:	1027883a 	mov	r19,r2
   2794c:	00000406 	br	27960 <__mdiff+0x94>
   27950:	18005616 	blt	r3,zero,27aac <__mdiff+0x1e0>
   27954:	34400504 	addi	r17,r6,20
   27958:	2c000504 	addi	r16,r5,20
   2795c:	0029883a 	mov	r20,zero
   27960:	91400117 	ldw	r5,4(r18)
   27964:	0026fa40 	call	26fa4 <_Balloc>
   27968:	92400417 	ldw	r9,16(r18)
   2796c:	9b000417 	ldw	r12,16(r19)
   27970:	12c00504 	addi	r11,r2,20
   27974:	4a51883a 	add	r8,r9,r9
   27978:	6319883a 	add	r12,r12,r12
   2797c:	4211883a 	add	r8,r8,r8
   27980:	6319883a 	add	r12,r12,r12
   27984:	15000315 	stw	r20,12(r2)
   27988:	8211883a 	add	r8,r16,r8
   2798c:	8b19883a 	add	r12,r17,r12
   27990:	0007883a 	mov	r3,zero
   27994:	81400017 	ldw	r5,0(r16)
   27998:	89c00017 	ldw	r7,0(r17)
   2799c:	59800104 	addi	r6,r11,4
   279a0:	293fffcc 	andi	r4,r5,65535
   279a4:	20c7883a 	add	r3,r4,r3
   279a8:	393fffcc 	andi	r4,r7,65535
   279ac:	1909c83a 	sub	r4,r3,r4
   279b0:	280ad43a 	srli	r5,r5,16
   279b4:	380ed43a 	srli	r7,r7,16
   279b8:	2007d43a 	srai	r3,r4,16
   279bc:	213fffcc 	andi	r4,r4,65535
   279c0:	29cbc83a 	sub	r5,r5,r7
   279c4:	28c7883a 	add	r3,r5,r3
   279c8:	180a943a 	slli	r5,r3,16
   279cc:	8c400104 	addi	r17,r17,4
   279d0:	84000104 	addi	r16,r16,4
   279d4:	2908b03a 	or	r4,r5,r4
   279d8:	59000015 	stw	r4,0(r11)
   279dc:	1807d43a 	srai	r3,r3,16
   279e0:	3015883a 	mov	r10,r6
   279e4:	3017883a 	mov	r11,r6
   279e8:	8b3fea36 	bltu	r17,r12,27994 <__alt_data_end+0xfffe7994>
   279ec:	8200162e 	bgeu	r16,r8,27a48 <__mdiff+0x17c>
   279f0:	8017883a 	mov	r11,r16
   279f4:	59400017 	ldw	r5,0(r11)
   279f8:	31800104 	addi	r6,r6,4
   279fc:	5ac00104 	addi	r11,r11,4
   27a00:	293fffcc 	andi	r4,r5,65535
   27a04:	20c7883a 	add	r3,r4,r3
   27a08:	280ed43a 	srli	r7,r5,16
   27a0c:	180bd43a 	srai	r5,r3,16
   27a10:	193fffcc 	andi	r4,r3,65535
   27a14:	3947883a 	add	r3,r7,r5
   27a18:	180a943a 	slli	r5,r3,16
   27a1c:	1807d43a 	srai	r3,r3,16
   27a20:	2908b03a 	or	r4,r5,r4
   27a24:	313fff15 	stw	r4,-4(r6)
   27a28:	5a3ff236 	bltu	r11,r8,279f4 <__alt_data_end+0xfffe79f4>
   27a2c:	0406303a 	nor	r3,zero,r16
   27a30:	1a07883a 	add	r3,r3,r8
   27a34:	1806d0ba 	srli	r3,r3,2
   27a38:	18c00044 	addi	r3,r3,1
   27a3c:	18c7883a 	add	r3,r3,r3
   27a40:	18c7883a 	add	r3,r3,r3
   27a44:	50d5883a 	add	r10,r10,r3
   27a48:	50ffff04 	addi	r3,r10,-4
   27a4c:	2000041e 	bne	r4,zero,27a60 <__mdiff+0x194>
   27a50:	18ffff04 	addi	r3,r3,-4
   27a54:	19000017 	ldw	r4,0(r3)
   27a58:	4a7fffc4 	addi	r9,r9,-1
   27a5c:	203ffc26 	beq	r4,zero,27a50 <__alt_data_end+0xfffe7a50>
   27a60:	12400415 	stw	r9,16(r2)
   27a64:	dfc00517 	ldw	ra,20(sp)
   27a68:	dd000417 	ldw	r20,16(sp)
   27a6c:	dcc00317 	ldw	r19,12(sp)
   27a70:	dc800217 	ldw	r18,8(sp)
   27a74:	dc400117 	ldw	r17,4(sp)
   27a78:	dc000017 	ldw	r16,0(sp)
   27a7c:	dec00604 	addi	sp,sp,24
   27a80:	f800283a 	ret
   27a84:	000b883a 	mov	r5,zero
   27a88:	0026fa40 	call	26fa4 <_Balloc>
   27a8c:	00c00044 	movi	r3,1
   27a90:	10c00415 	stw	r3,16(r2)
   27a94:	10000515 	stw	zero,20(r2)
   27a98:	003ff206 	br	27a64 <__alt_data_end+0xfffe7a64>
   27a9c:	8023883a 	mov	r17,r16
   27aa0:	0029883a 	mov	r20,zero
   27aa4:	4021883a 	mov	r16,r8
   27aa8:	003fad06 	br	27960 <__alt_data_end+0xfffe7960>
   27aac:	9005883a 	mov	r2,r18
   27ab0:	94400504 	addi	r17,r18,20
   27ab4:	9c000504 	addi	r16,r19,20
   27ab8:	9825883a 	mov	r18,r19
   27abc:	05000044 	movi	r20,1
   27ac0:	1027883a 	mov	r19,r2
   27ac4:	003fa606 	br	27960 <__alt_data_end+0xfffe7960>

00027ac8 <__ulp>:
   27ac8:	295ffc2c 	andhi	r5,r5,32752
   27acc:	00bf3034 	movhi	r2,64704
   27ad0:	2887883a 	add	r3,r5,r2
   27ad4:	00c0020e 	bge	zero,r3,27ae0 <__ulp+0x18>
   27ad8:	0005883a 	mov	r2,zero
   27adc:	f800283a 	ret
   27ae0:	00c7c83a 	sub	r3,zero,r3
   27ae4:	1807d53a 	srai	r3,r3,20
   27ae8:	008004c4 	movi	r2,19
   27aec:	10c00b0e 	bge	r2,r3,27b1c <__ulp+0x54>
   27af0:	18bffb04 	addi	r2,r3,-20
   27af4:	01000784 	movi	r4,30
   27af8:	0007883a 	mov	r3,zero
   27afc:	20800516 	blt	r4,r2,27b14 <__ulp+0x4c>
   27b00:	010007c4 	movi	r4,31
   27b04:	2089c83a 	sub	r4,r4,r2
   27b08:	00800044 	movi	r2,1
   27b0c:	1104983a 	sll	r2,r2,r4
   27b10:	f800283a 	ret
   27b14:	00800044 	movi	r2,1
   27b18:	f800283a 	ret
   27b1c:	01400234 	movhi	r5,8
   27b20:	28c7d83a 	sra	r3,r5,r3
   27b24:	0005883a 	mov	r2,zero
   27b28:	f800283a 	ret

00027b2c <__b2d>:
   27b2c:	defffa04 	addi	sp,sp,-24
   27b30:	dc000015 	stw	r16,0(sp)
   27b34:	24000417 	ldw	r16,16(r4)
   27b38:	dc400115 	stw	r17,4(sp)
   27b3c:	24400504 	addi	r17,r4,20
   27b40:	8421883a 	add	r16,r16,r16
   27b44:	8421883a 	add	r16,r16,r16
   27b48:	8c21883a 	add	r16,r17,r16
   27b4c:	dc800215 	stw	r18,8(sp)
   27b50:	84bfff17 	ldw	r18,-4(r16)
   27b54:	dd000415 	stw	r20,16(sp)
   27b58:	dcc00315 	stw	r19,12(sp)
   27b5c:	9009883a 	mov	r4,r18
   27b60:	2829883a 	mov	r20,r5
   27b64:	dfc00515 	stw	ra,20(sp)
   27b68:	00272980 	call	27298 <__hi0bits>
   27b6c:	00c00804 	movi	r3,32
   27b70:	1889c83a 	sub	r4,r3,r2
   27b74:	a1000015 	stw	r4,0(r20)
   27b78:	01000284 	movi	r4,10
   27b7c:	84ffff04 	addi	r19,r16,-4
   27b80:	20801216 	blt	r4,r2,27bcc <__b2d+0xa0>
   27b84:	018002c4 	movi	r6,11
   27b88:	308dc83a 	sub	r6,r6,r2
   27b8c:	9186d83a 	srl	r3,r18,r6
   27b90:	18cffc34 	orhi	r3,r3,16368
   27b94:	8cc0212e 	bgeu	r17,r19,27c1c <__b2d+0xf0>
   27b98:	813ffe17 	ldw	r4,-8(r16)
   27b9c:	218cd83a 	srl	r6,r4,r6
   27ba0:	10800544 	addi	r2,r2,21
   27ba4:	9084983a 	sll	r2,r18,r2
   27ba8:	1184b03a 	or	r2,r2,r6
   27bac:	dfc00517 	ldw	ra,20(sp)
   27bb0:	dd000417 	ldw	r20,16(sp)
   27bb4:	dcc00317 	ldw	r19,12(sp)
   27bb8:	dc800217 	ldw	r18,8(sp)
   27bbc:	dc400117 	ldw	r17,4(sp)
   27bc0:	dc000017 	ldw	r16,0(sp)
   27bc4:	dec00604 	addi	sp,sp,24
   27bc8:	f800283a 	ret
   27bcc:	8cc00f2e 	bgeu	r17,r19,27c0c <__b2d+0xe0>
   27bd0:	117ffd44 	addi	r5,r2,-11
   27bd4:	80bffe17 	ldw	r2,-8(r16)
   27bd8:	28000e26 	beq	r5,zero,27c14 <__b2d+0xe8>
   27bdc:	1949c83a 	sub	r4,r3,r5
   27be0:	9164983a 	sll	r18,r18,r5
   27be4:	1106d83a 	srl	r3,r2,r4
   27be8:	81bffe04 	addi	r6,r16,-8
   27bec:	948ffc34 	orhi	r18,r18,16368
   27bf0:	90c6b03a 	or	r3,r18,r3
   27bf4:	89800e2e 	bgeu	r17,r6,27c30 <__b2d+0x104>
   27bf8:	81bffd17 	ldw	r6,-12(r16)
   27bfc:	1144983a 	sll	r2,r2,r5
   27c00:	310ad83a 	srl	r5,r6,r4
   27c04:	2884b03a 	or	r2,r5,r2
   27c08:	003fe806 	br	27bac <__alt_data_end+0xfffe7bac>
   27c0c:	10bffd44 	addi	r2,r2,-11
   27c10:	1000041e 	bne	r2,zero,27c24 <__b2d+0xf8>
   27c14:	90cffc34 	orhi	r3,r18,16368
   27c18:	003fe406 	br	27bac <__alt_data_end+0xfffe7bac>
   27c1c:	000d883a 	mov	r6,zero
   27c20:	003fdf06 	br	27ba0 <__alt_data_end+0xfffe7ba0>
   27c24:	90a4983a 	sll	r18,r18,r2
   27c28:	0005883a 	mov	r2,zero
   27c2c:	003ff906 	br	27c14 <__alt_data_end+0xfffe7c14>
   27c30:	1144983a 	sll	r2,r2,r5
   27c34:	003fdd06 	br	27bac <__alt_data_end+0xfffe7bac>

00027c38 <__d2b>:
   27c38:	defff804 	addi	sp,sp,-32
   27c3c:	dc000215 	stw	r16,8(sp)
   27c40:	3021883a 	mov	r16,r6
   27c44:	dc400315 	stw	r17,12(sp)
   27c48:	8022907a 	slli	r17,r16,1
   27c4c:	dd000615 	stw	r20,24(sp)
   27c50:	2829883a 	mov	r20,r5
   27c54:	01400044 	movi	r5,1
   27c58:	dcc00515 	stw	r19,20(sp)
   27c5c:	dc800415 	stw	r18,16(sp)
   27c60:	dfc00715 	stw	ra,28(sp)
   27c64:	3825883a 	mov	r18,r7
   27c68:	8822d57a 	srli	r17,r17,21
   27c6c:	0026fa40 	call	26fa4 <_Balloc>
   27c70:	1027883a 	mov	r19,r2
   27c74:	00800434 	movhi	r2,16
   27c78:	10bfffc4 	addi	r2,r2,-1
   27c7c:	808c703a 	and	r6,r16,r2
   27c80:	88000126 	beq	r17,zero,27c88 <__d2b+0x50>
   27c84:	31800434 	orhi	r6,r6,16
   27c88:	d9800015 	stw	r6,0(sp)
   27c8c:	a0002426 	beq	r20,zero,27d20 <__d2b+0xe8>
   27c90:	d9000104 	addi	r4,sp,4
   27c94:	dd000115 	stw	r20,4(sp)
   27c98:	00273000 	call	27300 <__lo0bits>
   27c9c:	d8c00017 	ldw	r3,0(sp)
   27ca0:	10002f1e 	bne	r2,zero,27d60 <__d2b+0x128>
   27ca4:	d9000117 	ldw	r4,4(sp)
   27ca8:	99000515 	stw	r4,20(r19)
   27cac:	1821003a 	cmpeq	r16,r3,zero
   27cb0:	01000084 	movi	r4,2
   27cb4:	2421c83a 	sub	r16,r4,r16
   27cb8:	98c00615 	stw	r3,24(r19)
   27cbc:	9c000415 	stw	r16,16(r19)
   27cc0:	88001f1e 	bne	r17,zero,27d40 <__d2b+0x108>
   27cc4:	10bef384 	addi	r2,r2,-1074
   27cc8:	90800015 	stw	r2,0(r18)
   27ccc:	00900034 	movhi	r2,16384
   27cd0:	10bfffc4 	addi	r2,r2,-1
   27cd4:	8085883a 	add	r2,r16,r2
   27cd8:	1085883a 	add	r2,r2,r2
   27cdc:	1085883a 	add	r2,r2,r2
   27ce0:	9885883a 	add	r2,r19,r2
   27ce4:	11000517 	ldw	r4,20(r2)
   27ce8:	8020917a 	slli	r16,r16,5
   27cec:	00272980 	call	27298 <__hi0bits>
   27cf0:	d8c00817 	ldw	r3,32(sp)
   27cf4:	8085c83a 	sub	r2,r16,r2
   27cf8:	18800015 	stw	r2,0(r3)
   27cfc:	9805883a 	mov	r2,r19
   27d00:	dfc00717 	ldw	ra,28(sp)
   27d04:	dd000617 	ldw	r20,24(sp)
   27d08:	dcc00517 	ldw	r19,20(sp)
   27d0c:	dc800417 	ldw	r18,16(sp)
   27d10:	dc400317 	ldw	r17,12(sp)
   27d14:	dc000217 	ldw	r16,8(sp)
   27d18:	dec00804 	addi	sp,sp,32
   27d1c:	f800283a 	ret
   27d20:	d809883a 	mov	r4,sp
   27d24:	00273000 	call	27300 <__lo0bits>
   27d28:	d8c00017 	ldw	r3,0(sp)
   27d2c:	04000044 	movi	r16,1
   27d30:	9c000415 	stw	r16,16(r19)
   27d34:	98c00515 	stw	r3,20(r19)
   27d38:	10800804 	addi	r2,r2,32
   27d3c:	883fe126 	beq	r17,zero,27cc4 <__alt_data_end+0xfffe7cc4>
   27d40:	00c00d44 	movi	r3,53
   27d44:	8c7ef344 	addi	r17,r17,-1075
   27d48:	88a3883a 	add	r17,r17,r2
   27d4c:	1885c83a 	sub	r2,r3,r2
   27d50:	d8c00817 	ldw	r3,32(sp)
   27d54:	94400015 	stw	r17,0(r18)
   27d58:	18800015 	stw	r2,0(r3)
   27d5c:	003fe706 	br	27cfc <__alt_data_end+0xfffe7cfc>
   27d60:	01000804 	movi	r4,32
   27d64:	2089c83a 	sub	r4,r4,r2
   27d68:	1908983a 	sll	r4,r3,r4
   27d6c:	d9400117 	ldw	r5,4(sp)
   27d70:	1886d83a 	srl	r3,r3,r2
   27d74:	2148b03a 	or	r4,r4,r5
   27d78:	99000515 	stw	r4,20(r19)
   27d7c:	d8c00015 	stw	r3,0(sp)
   27d80:	003fca06 	br	27cac <__alt_data_end+0xfffe7cac>

00027d84 <__ratio>:
   27d84:	defff904 	addi	sp,sp,-28
   27d88:	dc400315 	stw	r17,12(sp)
   27d8c:	2823883a 	mov	r17,r5
   27d90:	d9400104 	addi	r5,sp,4
   27d94:	dfc00615 	stw	ra,24(sp)
   27d98:	dcc00515 	stw	r19,20(sp)
   27d9c:	dc800415 	stw	r18,16(sp)
   27da0:	2027883a 	mov	r19,r4
   27da4:	dc000215 	stw	r16,8(sp)
   27da8:	0027b2c0 	call	27b2c <__b2d>
   27dac:	d80b883a 	mov	r5,sp
   27db0:	8809883a 	mov	r4,r17
   27db4:	1025883a 	mov	r18,r2
   27db8:	1821883a 	mov	r16,r3
   27dbc:	0027b2c0 	call	27b2c <__b2d>
   27dc0:	8a000417 	ldw	r8,16(r17)
   27dc4:	99000417 	ldw	r4,16(r19)
   27dc8:	d9400117 	ldw	r5,4(sp)
   27dcc:	2209c83a 	sub	r4,r4,r8
   27dd0:	2010917a 	slli	r8,r4,5
   27dd4:	d9000017 	ldw	r4,0(sp)
   27dd8:	2909c83a 	sub	r4,r5,r4
   27ddc:	4109883a 	add	r4,r8,r4
   27de0:	01000e0e 	bge	zero,r4,27e1c <__ratio+0x98>
   27de4:	2008953a 	slli	r4,r4,20
   27de8:	2421883a 	add	r16,r4,r16
   27dec:	100d883a 	mov	r6,r2
   27df0:	180f883a 	mov	r7,r3
   27df4:	9009883a 	mov	r4,r18
   27df8:	800b883a 	mov	r5,r16
   27dfc:	002b8180 	call	2b818 <__divdf3>
   27e00:	dfc00617 	ldw	ra,24(sp)
   27e04:	dcc00517 	ldw	r19,20(sp)
   27e08:	dc800417 	ldw	r18,16(sp)
   27e0c:	dc400317 	ldw	r17,12(sp)
   27e10:	dc000217 	ldw	r16,8(sp)
   27e14:	dec00704 	addi	sp,sp,28
   27e18:	f800283a 	ret
   27e1c:	2008953a 	slli	r4,r4,20
   27e20:	1907c83a 	sub	r3,r3,r4
   27e24:	003ff106 	br	27dec <__alt_data_end+0xfffe7dec>

00027e28 <_mprec_log10>:
   27e28:	defffe04 	addi	sp,sp,-8
   27e2c:	dc000015 	stw	r16,0(sp)
   27e30:	dfc00115 	stw	ra,4(sp)
   27e34:	008005c4 	movi	r2,23
   27e38:	2021883a 	mov	r16,r4
   27e3c:	11000d0e 	bge	r2,r4,27e74 <_mprec_log10+0x4c>
   27e40:	0005883a 	mov	r2,zero
   27e44:	00cffc34 	movhi	r3,16368
   27e48:	843fffc4 	addi	r16,r16,-1
   27e4c:	000d883a 	mov	r6,zero
   27e50:	01d00934 	movhi	r7,16420
   27e54:	1009883a 	mov	r4,r2
   27e58:	180b883a 	mov	r5,r3
   27e5c:	002c3580 	call	2c358 <__muldf3>
   27e60:	803ff91e 	bne	r16,zero,27e48 <__alt_data_end+0xfffe7e48>
   27e64:	dfc00117 	ldw	ra,4(sp)
   27e68:	dc000017 	ldw	r16,0(sp)
   27e6c:	dec00204 	addi	sp,sp,8
   27e70:	f800283a 	ret
   27e74:	202090fa 	slli	r16,r4,3
   27e78:	008000f4 	movhi	r2,3
   27e7c:	10805704 	addi	r2,r2,348
   27e80:	1421883a 	add	r16,r2,r16
   27e84:	80800017 	ldw	r2,0(r16)
   27e88:	80c00117 	ldw	r3,4(r16)
   27e8c:	dfc00117 	ldw	ra,4(sp)
   27e90:	dc000017 	ldw	r16,0(sp)
   27e94:	dec00204 	addi	sp,sp,8
   27e98:	f800283a 	ret

00027e9c <__copybits>:
   27e9c:	297fffc4 	addi	r5,r5,-1
   27ea0:	280fd17a 	srai	r7,r5,5
   27ea4:	30c00417 	ldw	r3,16(r6)
   27ea8:	30800504 	addi	r2,r6,20
   27eac:	39c00044 	addi	r7,r7,1
   27eb0:	18c7883a 	add	r3,r3,r3
   27eb4:	39cf883a 	add	r7,r7,r7
   27eb8:	18c7883a 	add	r3,r3,r3
   27ebc:	39cf883a 	add	r7,r7,r7
   27ec0:	10c7883a 	add	r3,r2,r3
   27ec4:	21cf883a 	add	r7,r4,r7
   27ec8:	10c00d2e 	bgeu	r2,r3,27f00 <__copybits+0x64>
   27ecc:	200b883a 	mov	r5,r4
   27ed0:	12000017 	ldw	r8,0(r2)
   27ed4:	29400104 	addi	r5,r5,4
   27ed8:	10800104 	addi	r2,r2,4
   27edc:	2a3fff15 	stw	r8,-4(r5)
   27ee0:	10fffb36 	bltu	r2,r3,27ed0 <__alt_data_end+0xfffe7ed0>
   27ee4:	1985c83a 	sub	r2,r3,r6
   27ee8:	10bffac4 	addi	r2,r2,-21
   27eec:	1004d0ba 	srli	r2,r2,2
   27ef0:	10800044 	addi	r2,r2,1
   27ef4:	1085883a 	add	r2,r2,r2
   27ef8:	1085883a 	add	r2,r2,r2
   27efc:	2089883a 	add	r4,r4,r2
   27f00:	21c0032e 	bgeu	r4,r7,27f10 <__copybits+0x74>
   27f04:	20000015 	stw	zero,0(r4)
   27f08:	21000104 	addi	r4,r4,4
   27f0c:	21fffd36 	bltu	r4,r7,27f04 <__alt_data_end+0xfffe7f04>
   27f10:	f800283a 	ret

00027f14 <__any_on>:
   27f14:	20c00417 	ldw	r3,16(r4)
   27f18:	2805d17a 	srai	r2,r5,5
   27f1c:	21000504 	addi	r4,r4,20
   27f20:	18800d0e 	bge	r3,r2,27f58 <__any_on+0x44>
   27f24:	18c7883a 	add	r3,r3,r3
   27f28:	18c7883a 	add	r3,r3,r3
   27f2c:	20c7883a 	add	r3,r4,r3
   27f30:	20c0192e 	bgeu	r4,r3,27f98 <__any_on+0x84>
   27f34:	18bfff17 	ldw	r2,-4(r3)
   27f38:	18ffff04 	addi	r3,r3,-4
   27f3c:	1000041e 	bne	r2,zero,27f50 <__any_on+0x3c>
   27f40:	20c0142e 	bgeu	r4,r3,27f94 <__any_on+0x80>
   27f44:	18ffff04 	addi	r3,r3,-4
   27f48:	19400017 	ldw	r5,0(r3)
   27f4c:	283ffc26 	beq	r5,zero,27f40 <__alt_data_end+0xfffe7f40>
   27f50:	00800044 	movi	r2,1
   27f54:	f800283a 	ret
   27f58:	10c00a0e 	bge	r2,r3,27f84 <__any_on+0x70>
   27f5c:	1085883a 	add	r2,r2,r2
   27f60:	1085883a 	add	r2,r2,r2
   27f64:	294007cc 	andi	r5,r5,31
   27f68:	2087883a 	add	r3,r4,r2
   27f6c:	283ff026 	beq	r5,zero,27f30 <__alt_data_end+0xfffe7f30>
   27f70:	19800017 	ldw	r6,0(r3)
   27f74:	3144d83a 	srl	r2,r6,r5
   27f78:	114a983a 	sll	r5,r2,r5
   27f7c:	317ff41e 	bne	r6,r5,27f50 <__alt_data_end+0xfffe7f50>
   27f80:	003feb06 	br	27f30 <__alt_data_end+0xfffe7f30>
   27f84:	1085883a 	add	r2,r2,r2
   27f88:	1085883a 	add	r2,r2,r2
   27f8c:	2087883a 	add	r3,r4,r2
   27f90:	003fe706 	br	27f30 <__alt_data_end+0xfffe7f30>
   27f94:	f800283a 	ret
   27f98:	0005883a 	mov	r2,zero
   27f9c:	f800283a 	ret

00027fa0 <_read_r>:
   27fa0:	defffd04 	addi	sp,sp,-12
   27fa4:	2805883a 	mov	r2,r5
   27fa8:	dc000015 	stw	r16,0(sp)
   27fac:	040000f4 	movhi	r16,3
   27fb0:	dc400115 	stw	r17,4(sp)
   27fb4:	300b883a 	mov	r5,r6
   27fb8:	840e7304 	addi	r16,r16,14796
   27fbc:	2023883a 	mov	r17,r4
   27fc0:	380d883a 	mov	r6,r7
   27fc4:	1009883a 	mov	r4,r2
   27fc8:	dfc00215 	stw	ra,8(sp)
   27fcc:	80000015 	stw	zero,0(r16)
   27fd0:	002de280 	call	2de28 <read>
   27fd4:	00ffffc4 	movi	r3,-1
   27fd8:	10c00526 	beq	r2,r3,27ff0 <_read_r+0x50>
   27fdc:	dfc00217 	ldw	ra,8(sp)
   27fe0:	dc400117 	ldw	r17,4(sp)
   27fe4:	dc000017 	ldw	r16,0(sp)
   27fe8:	dec00304 	addi	sp,sp,12
   27fec:	f800283a 	ret
   27ff0:	80c00017 	ldw	r3,0(r16)
   27ff4:	183ff926 	beq	r3,zero,27fdc <__alt_data_end+0xfffe7fdc>
   27ff8:	88c00015 	stw	r3,0(r17)
   27ffc:	003ff706 	br	27fdc <__alt_data_end+0xfffe7fdc>

00028000 <_realloc_r>:
   28000:	defff604 	addi	sp,sp,-40
   28004:	dc800215 	stw	r18,8(sp)
   28008:	dfc00915 	stw	ra,36(sp)
   2800c:	df000815 	stw	fp,32(sp)
   28010:	ddc00715 	stw	r23,28(sp)
   28014:	dd800615 	stw	r22,24(sp)
   28018:	dd400515 	stw	r21,20(sp)
   2801c:	dd000415 	stw	r20,16(sp)
   28020:	dcc00315 	stw	r19,12(sp)
   28024:	dc400115 	stw	r17,4(sp)
   28028:	dc000015 	stw	r16,0(sp)
   2802c:	3025883a 	mov	r18,r6
   28030:	2800b726 	beq	r5,zero,28310 <_realloc_r+0x310>
   28034:	282b883a 	mov	r21,r5
   28038:	2029883a 	mov	r20,r4
   2803c:	002db500 	call	2db50 <__malloc_lock>
   28040:	a8bfff17 	ldw	r2,-4(r21)
   28044:	043fff04 	movi	r16,-4
   28048:	90c002c4 	addi	r3,r18,11
   2804c:	01000584 	movi	r4,22
   28050:	acfffe04 	addi	r19,r21,-8
   28054:	1420703a 	and	r16,r2,r16
   28058:	20c0332e 	bgeu	r4,r3,28128 <_realloc_r+0x128>
   2805c:	047ffe04 	movi	r17,-8
   28060:	1c62703a 	and	r17,r3,r17
   28064:	8807883a 	mov	r3,r17
   28068:	88005816 	blt	r17,zero,281cc <_realloc_r+0x1cc>
   2806c:	8c805736 	bltu	r17,r18,281cc <_realloc_r+0x1cc>
   28070:	80c0300e 	bge	r16,r3,28134 <_realloc_r+0x134>
   28074:	070000f4 	movhi	fp,3
   28078:	e701eb04 	addi	fp,fp,1964
   2807c:	e1c00217 	ldw	r7,8(fp)
   28080:	9c09883a 	add	r4,r19,r16
   28084:	22000117 	ldw	r8,4(r4)
   28088:	21c06326 	beq	r4,r7,28218 <_realloc_r+0x218>
   2808c:	017fff84 	movi	r5,-2
   28090:	414a703a 	and	r5,r8,r5
   28094:	214b883a 	add	r5,r4,r5
   28098:	29800117 	ldw	r6,4(r5)
   2809c:	3180004c 	andi	r6,r6,1
   280a0:	30003f26 	beq	r6,zero,281a0 <_realloc_r+0x1a0>
   280a4:	1080004c 	andi	r2,r2,1
   280a8:	10008326 	beq	r2,zero,282b8 <_realloc_r+0x2b8>
   280ac:	900b883a 	mov	r5,r18
   280b0:	a009883a 	mov	r4,r20
   280b4:	00218d80 	call	218d8 <_malloc_r>
   280b8:	1025883a 	mov	r18,r2
   280bc:	10011e26 	beq	r2,zero,28538 <_realloc_r+0x538>
   280c0:	a93fff17 	ldw	r4,-4(r21)
   280c4:	10fffe04 	addi	r3,r2,-8
   280c8:	00bfff84 	movi	r2,-2
   280cc:	2084703a 	and	r2,r4,r2
   280d0:	9885883a 	add	r2,r19,r2
   280d4:	1880ee26 	beq	r3,r2,28490 <_realloc_r+0x490>
   280d8:	81bfff04 	addi	r6,r16,-4
   280dc:	00800904 	movi	r2,36
   280e0:	1180b836 	bltu	r2,r6,283c4 <_realloc_r+0x3c4>
   280e4:	00c004c4 	movi	r3,19
   280e8:	19809636 	bltu	r3,r6,28344 <_realloc_r+0x344>
   280ec:	9005883a 	mov	r2,r18
   280f0:	a807883a 	mov	r3,r21
   280f4:	19000017 	ldw	r4,0(r3)
   280f8:	11000015 	stw	r4,0(r2)
   280fc:	19000117 	ldw	r4,4(r3)
   28100:	11000115 	stw	r4,4(r2)
   28104:	18c00217 	ldw	r3,8(r3)
   28108:	10c00215 	stw	r3,8(r2)
   2810c:	a80b883a 	mov	r5,r21
   28110:	a009883a 	mov	r4,r20
   28114:	0020da80 	call	20da8 <_free_r>
   28118:	a009883a 	mov	r4,r20
   2811c:	002db740 	call	2db74 <__malloc_unlock>
   28120:	9005883a 	mov	r2,r18
   28124:	00001206 	br	28170 <_realloc_r+0x170>
   28128:	00c00404 	movi	r3,16
   2812c:	1823883a 	mov	r17,r3
   28130:	003fce06 	br	2806c <__alt_data_end+0xfffe806c>
   28134:	a825883a 	mov	r18,r21
   28138:	8445c83a 	sub	r2,r16,r17
   2813c:	00c003c4 	movi	r3,15
   28140:	18802636 	bltu	r3,r2,281dc <_realloc_r+0x1dc>
   28144:	99800117 	ldw	r6,4(r19)
   28148:	9c07883a 	add	r3,r19,r16
   2814c:	3180004c 	andi	r6,r6,1
   28150:	3420b03a 	or	r16,r6,r16
   28154:	9c000115 	stw	r16,4(r19)
   28158:	18800117 	ldw	r2,4(r3)
   2815c:	10800054 	ori	r2,r2,1
   28160:	18800115 	stw	r2,4(r3)
   28164:	a009883a 	mov	r4,r20
   28168:	002db740 	call	2db74 <__malloc_unlock>
   2816c:	9005883a 	mov	r2,r18
   28170:	dfc00917 	ldw	ra,36(sp)
   28174:	df000817 	ldw	fp,32(sp)
   28178:	ddc00717 	ldw	r23,28(sp)
   2817c:	dd800617 	ldw	r22,24(sp)
   28180:	dd400517 	ldw	r21,20(sp)
   28184:	dd000417 	ldw	r20,16(sp)
   28188:	dcc00317 	ldw	r19,12(sp)
   2818c:	dc800217 	ldw	r18,8(sp)
   28190:	dc400117 	ldw	r17,4(sp)
   28194:	dc000017 	ldw	r16,0(sp)
   28198:	dec00a04 	addi	sp,sp,40
   2819c:	f800283a 	ret
   281a0:	017fff04 	movi	r5,-4
   281a4:	414a703a 	and	r5,r8,r5
   281a8:	814d883a 	add	r6,r16,r5
   281ac:	30c01f16 	blt	r6,r3,2822c <_realloc_r+0x22c>
   281b0:	20800317 	ldw	r2,12(r4)
   281b4:	20c00217 	ldw	r3,8(r4)
   281b8:	a825883a 	mov	r18,r21
   281bc:	3021883a 	mov	r16,r6
   281c0:	18800315 	stw	r2,12(r3)
   281c4:	10c00215 	stw	r3,8(r2)
   281c8:	003fdb06 	br	28138 <__alt_data_end+0xfffe8138>
   281cc:	00800304 	movi	r2,12
   281d0:	a0800015 	stw	r2,0(r20)
   281d4:	0005883a 	mov	r2,zero
   281d8:	003fe506 	br	28170 <__alt_data_end+0xfffe8170>
   281dc:	98c00117 	ldw	r3,4(r19)
   281e0:	9c4b883a 	add	r5,r19,r17
   281e4:	11000054 	ori	r4,r2,1
   281e8:	18c0004c 	andi	r3,r3,1
   281ec:	1c62b03a 	or	r17,r3,r17
   281f0:	9c400115 	stw	r17,4(r19)
   281f4:	29000115 	stw	r4,4(r5)
   281f8:	2885883a 	add	r2,r5,r2
   281fc:	10c00117 	ldw	r3,4(r2)
   28200:	29400204 	addi	r5,r5,8
   28204:	a009883a 	mov	r4,r20
   28208:	18c00054 	ori	r3,r3,1
   2820c:	10c00115 	stw	r3,4(r2)
   28210:	0020da80 	call	20da8 <_free_r>
   28214:	003fd306 	br	28164 <__alt_data_end+0xfffe8164>
   28218:	017fff04 	movi	r5,-4
   2821c:	414a703a 	and	r5,r8,r5
   28220:	89800404 	addi	r6,r17,16
   28224:	8151883a 	add	r8,r16,r5
   28228:	4180590e 	bge	r8,r6,28390 <_realloc_r+0x390>
   2822c:	1080004c 	andi	r2,r2,1
   28230:	103f9e1e 	bne	r2,zero,280ac <__alt_data_end+0xfffe80ac>
   28234:	adbffe17 	ldw	r22,-8(r21)
   28238:	00bfff04 	movi	r2,-4
   2823c:	9dadc83a 	sub	r22,r19,r22
   28240:	b1800117 	ldw	r6,4(r22)
   28244:	3084703a 	and	r2,r6,r2
   28248:	20002026 	beq	r4,zero,282cc <_realloc_r+0x2cc>
   2824c:	80af883a 	add	r23,r16,r2
   28250:	b96f883a 	add	r23,r23,r5
   28254:	21c05f26 	beq	r4,r7,283d4 <_realloc_r+0x3d4>
   28258:	b8c01c16 	blt	r23,r3,282cc <_realloc_r+0x2cc>
   2825c:	20800317 	ldw	r2,12(r4)
   28260:	20c00217 	ldw	r3,8(r4)
   28264:	81bfff04 	addi	r6,r16,-4
   28268:	01000904 	movi	r4,36
   2826c:	18800315 	stw	r2,12(r3)
   28270:	10c00215 	stw	r3,8(r2)
   28274:	b0c00217 	ldw	r3,8(r22)
   28278:	b0800317 	ldw	r2,12(r22)
   2827c:	b4800204 	addi	r18,r22,8
   28280:	18800315 	stw	r2,12(r3)
   28284:	10c00215 	stw	r3,8(r2)
   28288:	21801b36 	bltu	r4,r6,282f8 <_realloc_r+0x2f8>
   2828c:	008004c4 	movi	r2,19
   28290:	1180352e 	bgeu	r2,r6,28368 <_realloc_r+0x368>
   28294:	a8800017 	ldw	r2,0(r21)
   28298:	b0800215 	stw	r2,8(r22)
   2829c:	a8800117 	ldw	r2,4(r21)
   282a0:	b0800315 	stw	r2,12(r22)
   282a4:	008006c4 	movi	r2,27
   282a8:	11807f36 	bltu	r2,r6,284a8 <_realloc_r+0x4a8>
   282ac:	b0800404 	addi	r2,r22,16
   282b0:	ad400204 	addi	r21,r21,8
   282b4:	00002d06 	br	2836c <_realloc_r+0x36c>
   282b8:	adbffe17 	ldw	r22,-8(r21)
   282bc:	00bfff04 	movi	r2,-4
   282c0:	9dadc83a 	sub	r22,r19,r22
   282c4:	b1000117 	ldw	r4,4(r22)
   282c8:	2084703a 	and	r2,r4,r2
   282cc:	b03f7726 	beq	r22,zero,280ac <__alt_data_end+0xfffe80ac>
   282d0:	80af883a 	add	r23,r16,r2
   282d4:	b8ff7516 	blt	r23,r3,280ac <__alt_data_end+0xfffe80ac>
   282d8:	b0800317 	ldw	r2,12(r22)
   282dc:	b0c00217 	ldw	r3,8(r22)
   282e0:	81bfff04 	addi	r6,r16,-4
   282e4:	01000904 	movi	r4,36
   282e8:	18800315 	stw	r2,12(r3)
   282ec:	10c00215 	stw	r3,8(r2)
   282f0:	b4800204 	addi	r18,r22,8
   282f4:	21bfe52e 	bgeu	r4,r6,2828c <__alt_data_end+0xfffe828c>
   282f8:	a80b883a 	mov	r5,r21
   282fc:	9009883a 	mov	r4,r18
   28300:	0026e480 	call	26e48 <memmove>
   28304:	b821883a 	mov	r16,r23
   28308:	b027883a 	mov	r19,r22
   2830c:	003f8a06 	br	28138 <__alt_data_end+0xfffe8138>
   28310:	300b883a 	mov	r5,r6
   28314:	dfc00917 	ldw	ra,36(sp)
   28318:	df000817 	ldw	fp,32(sp)
   2831c:	ddc00717 	ldw	r23,28(sp)
   28320:	dd800617 	ldw	r22,24(sp)
   28324:	dd400517 	ldw	r21,20(sp)
   28328:	dd000417 	ldw	r20,16(sp)
   2832c:	dcc00317 	ldw	r19,12(sp)
   28330:	dc800217 	ldw	r18,8(sp)
   28334:	dc400117 	ldw	r17,4(sp)
   28338:	dc000017 	ldw	r16,0(sp)
   2833c:	dec00a04 	addi	sp,sp,40
   28340:	00218d81 	jmpi	218d8 <_malloc_r>
   28344:	a8c00017 	ldw	r3,0(r21)
   28348:	90c00015 	stw	r3,0(r18)
   2834c:	a8c00117 	ldw	r3,4(r21)
   28350:	90c00115 	stw	r3,4(r18)
   28354:	00c006c4 	movi	r3,27
   28358:	19804536 	bltu	r3,r6,28470 <_realloc_r+0x470>
   2835c:	90800204 	addi	r2,r18,8
   28360:	a8c00204 	addi	r3,r21,8
   28364:	003f6306 	br	280f4 <__alt_data_end+0xfffe80f4>
   28368:	9005883a 	mov	r2,r18
   2836c:	a8c00017 	ldw	r3,0(r21)
   28370:	b821883a 	mov	r16,r23
   28374:	b027883a 	mov	r19,r22
   28378:	10c00015 	stw	r3,0(r2)
   2837c:	a8c00117 	ldw	r3,4(r21)
   28380:	10c00115 	stw	r3,4(r2)
   28384:	a8c00217 	ldw	r3,8(r21)
   28388:	10c00215 	stw	r3,8(r2)
   2838c:	003f6a06 	br	28138 <__alt_data_end+0xfffe8138>
   28390:	9c67883a 	add	r19,r19,r17
   28394:	4445c83a 	sub	r2,r8,r17
   28398:	e4c00215 	stw	r19,8(fp)
   2839c:	10800054 	ori	r2,r2,1
   283a0:	98800115 	stw	r2,4(r19)
   283a4:	a8bfff17 	ldw	r2,-4(r21)
   283a8:	a009883a 	mov	r4,r20
   283ac:	1080004c 	andi	r2,r2,1
   283b0:	1462b03a 	or	r17,r2,r17
   283b4:	ac7fff15 	stw	r17,-4(r21)
   283b8:	002db740 	call	2db74 <__malloc_unlock>
   283bc:	a805883a 	mov	r2,r21
   283c0:	003f6b06 	br	28170 <__alt_data_end+0xfffe8170>
   283c4:	a80b883a 	mov	r5,r21
   283c8:	9009883a 	mov	r4,r18
   283cc:	0026e480 	call	26e48 <memmove>
   283d0:	003f4e06 	br	2810c <__alt_data_end+0xfffe810c>
   283d4:	89000404 	addi	r4,r17,16
   283d8:	b93fbc16 	blt	r23,r4,282cc <__alt_data_end+0xfffe82cc>
   283dc:	b0800317 	ldw	r2,12(r22)
   283e0:	b0c00217 	ldw	r3,8(r22)
   283e4:	81bfff04 	addi	r6,r16,-4
   283e8:	01000904 	movi	r4,36
   283ec:	18800315 	stw	r2,12(r3)
   283f0:	10c00215 	stw	r3,8(r2)
   283f4:	b4800204 	addi	r18,r22,8
   283f8:	21804336 	bltu	r4,r6,28508 <_realloc_r+0x508>
   283fc:	008004c4 	movi	r2,19
   28400:	11803f2e 	bgeu	r2,r6,28500 <_realloc_r+0x500>
   28404:	a8800017 	ldw	r2,0(r21)
   28408:	b0800215 	stw	r2,8(r22)
   2840c:	a8800117 	ldw	r2,4(r21)
   28410:	b0800315 	stw	r2,12(r22)
   28414:	008006c4 	movi	r2,27
   28418:	11803f36 	bltu	r2,r6,28518 <_realloc_r+0x518>
   2841c:	b0800404 	addi	r2,r22,16
   28420:	ad400204 	addi	r21,r21,8
   28424:	a8c00017 	ldw	r3,0(r21)
   28428:	10c00015 	stw	r3,0(r2)
   2842c:	a8c00117 	ldw	r3,4(r21)
   28430:	10c00115 	stw	r3,4(r2)
   28434:	a8c00217 	ldw	r3,8(r21)
   28438:	10c00215 	stw	r3,8(r2)
   2843c:	b447883a 	add	r3,r22,r17
   28440:	bc45c83a 	sub	r2,r23,r17
   28444:	e0c00215 	stw	r3,8(fp)
   28448:	10800054 	ori	r2,r2,1
   2844c:	18800115 	stw	r2,4(r3)
   28450:	b0800117 	ldw	r2,4(r22)
   28454:	a009883a 	mov	r4,r20
   28458:	1080004c 	andi	r2,r2,1
   2845c:	1462b03a 	or	r17,r2,r17
   28460:	b4400115 	stw	r17,4(r22)
   28464:	002db740 	call	2db74 <__malloc_unlock>
   28468:	9005883a 	mov	r2,r18
   2846c:	003f4006 	br	28170 <__alt_data_end+0xfffe8170>
   28470:	a8c00217 	ldw	r3,8(r21)
   28474:	90c00215 	stw	r3,8(r18)
   28478:	a8c00317 	ldw	r3,12(r21)
   2847c:	90c00315 	stw	r3,12(r18)
   28480:	30801126 	beq	r6,r2,284c8 <_realloc_r+0x4c8>
   28484:	90800404 	addi	r2,r18,16
   28488:	a8c00404 	addi	r3,r21,16
   2848c:	003f1906 	br	280f4 <__alt_data_end+0xfffe80f4>
   28490:	90ffff17 	ldw	r3,-4(r18)
   28494:	00bfff04 	movi	r2,-4
   28498:	a825883a 	mov	r18,r21
   2849c:	1884703a 	and	r2,r3,r2
   284a0:	80a1883a 	add	r16,r16,r2
   284a4:	003f2406 	br	28138 <__alt_data_end+0xfffe8138>
   284a8:	a8800217 	ldw	r2,8(r21)
   284ac:	b0800415 	stw	r2,16(r22)
   284b0:	a8800317 	ldw	r2,12(r21)
   284b4:	b0800515 	stw	r2,20(r22)
   284b8:	31000a26 	beq	r6,r4,284e4 <_realloc_r+0x4e4>
   284bc:	b0800604 	addi	r2,r22,24
   284c0:	ad400404 	addi	r21,r21,16
   284c4:	003fa906 	br	2836c <__alt_data_end+0xfffe836c>
   284c8:	a9000417 	ldw	r4,16(r21)
   284cc:	90800604 	addi	r2,r18,24
   284d0:	a8c00604 	addi	r3,r21,24
   284d4:	91000415 	stw	r4,16(r18)
   284d8:	a9000517 	ldw	r4,20(r21)
   284dc:	91000515 	stw	r4,20(r18)
   284e0:	003f0406 	br	280f4 <__alt_data_end+0xfffe80f4>
   284e4:	a8c00417 	ldw	r3,16(r21)
   284e8:	ad400604 	addi	r21,r21,24
   284ec:	b0800804 	addi	r2,r22,32
   284f0:	b0c00615 	stw	r3,24(r22)
   284f4:	a8ffff17 	ldw	r3,-4(r21)
   284f8:	b0c00715 	stw	r3,28(r22)
   284fc:	003f9b06 	br	2836c <__alt_data_end+0xfffe836c>
   28500:	9005883a 	mov	r2,r18
   28504:	003fc706 	br	28424 <__alt_data_end+0xfffe8424>
   28508:	a80b883a 	mov	r5,r21
   2850c:	9009883a 	mov	r4,r18
   28510:	0026e480 	call	26e48 <memmove>
   28514:	003fc906 	br	2843c <__alt_data_end+0xfffe843c>
   28518:	a8800217 	ldw	r2,8(r21)
   2851c:	b0800415 	stw	r2,16(r22)
   28520:	a8800317 	ldw	r2,12(r21)
   28524:	b0800515 	stw	r2,20(r22)
   28528:	31000726 	beq	r6,r4,28548 <_realloc_r+0x548>
   2852c:	b0800604 	addi	r2,r22,24
   28530:	ad400404 	addi	r21,r21,16
   28534:	003fbb06 	br	28424 <__alt_data_end+0xfffe8424>
   28538:	a009883a 	mov	r4,r20
   2853c:	002db740 	call	2db74 <__malloc_unlock>
   28540:	0005883a 	mov	r2,zero
   28544:	003f0a06 	br	28170 <__alt_data_end+0xfffe8170>
   28548:	a8c00417 	ldw	r3,16(r21)
   2854c:	ad400604 	addi	r21,r21,24
   28550:	b0800804 	addi	r2,r22,32
   28554:	b0c00615 	stw	r3,24(r22)
   28558:	a8ffff17 	ldw	r3,-4(r21)
   2855c:	b0c00715 	stw	r3,28(r22)
   28560:	003fb006 	br	28424 <__alt_data_end+0xfffe8424>

00028564 <__fpclassifyd>:
   28564:	00a00034 	movhi	r2,32768
   28568:	10bfffc4 	addi	r2,r2,-1
   2856c:	2884703a 	and	r2,r5,r2
   28570:	10000726 	beq	r2,zero,28590 <__fpclassifyd+0x2c>
   28574:	00fffc34 	movhi	r3,65520
   28578:	019ff834 	movhi	r6,32736
   2857c:	28c7883a 	add	r3,r5,r3
   28580:	31bfffc4 	addi	r6,r6,-1
   28584:	30c00536 	bltu	r6,r3,2859c <__fpclassifyd+0x38>
   28588:	00800104 	movi	r2,4
   2858c:	f800283a 	ret
   28590:	2000021e 	bne	r4,zero,2859c <__fpclassifyd+0x38>
   28594:	00800084 	movi	r2,2
   28598:	f800283a 	ret
   2859c:	00dffc34 	movhi	r3,32752
   285a0:	019ff834 	movhi	r6,32736
   285a4:	28cb883a 	add	r5,r5,r3
   285a8:	31bfffc4 	addi	r6,r6,-1
   285ac:	317ff62e 	bgeu	r6,r5,28588 <__alt_data_end+0xfffe8588>
   285b0:	01400434 	movhi	r5,16
   285b4:	297fffc4 	addi	r5,r5,-1
   285b8:	28800236 	bltu	r5,r2,285c4 <__fpclassifyd+0x60>
   285bc:	008000c4 	movi	r2,3
   285c0:	f800283a 	ret
   285c4:	10c00226 	beq	r2,r3,285d0 <__fpclassifyd+0x6c>
   285c8:	0005883a 	mov	r2,zero
   285cc:	f800283a 	ret
   285d0:	2005003a 	cmpeq	r2,r4,zero
   285d4:	f800283a 	ret

000285d8 <strcmp>:
   285d8:	2144b03a 	or	r2,r4,r5
   285dc:	108000cc 	andi	r2,r2,3
   285e0:	1000171e 	bne	r2,zero,28640 <strcmp+0x68>
   285e4:	20800017 	ldw	r2,0(r4)
   285e8:	28c00017 	ldw	r3,0(r5)
   285ec:	10c0141e 	bne	r2,r3,28640 <strcmp+0x68>
   285f0:	027fbff4 	movhi	r9,65279
   285f4:	4a7fbfc4 	addi	r9,r9,-257
   285f8:	0086303a 	nor	r3,zero,r2
   285fc:	02202074 	movhi	r8,32897
   28600:	1245883a 	add	r2,r2,r9
   28604:	42202004 	addi	r8,r8,-32640
   28608:	10c4703a 	and	r2,r2,r3
   2860c:	1204703a 	and	r2,r2,r8
   28610:	10000226 	beq	r2,zero,2861c <strcmp+0x44>
   28614:	00002306 	br	286a4 <strcmp+0xcc>
   28618:	1000221e 	bne	r2,zero,286a4 <strcmp+0xcc>
   2861c:	21000104 	addi	r4,r4,4
   28620:	20c00017 	ldw	r3,0(r4)
   28624:	29400104 	addi	r5,r5,4
   28628:	29800017 	ldw	r6,0(r5)
   2862c:	1a4f883a 	add	r7,r3,r9
   28630:	00c4303a 	nor	r2,zero,r3
   28634:	3884703a 	and	r2,r7,r2
   28638:	1204703a 	and	r2,r2,r8
   2863c:	19bff626 	beq	r3,r6,28618 <__alt_data_end+0xfffe8618>
   28640:	20800003 	ldbu	r2,0(r4)
   28644:	10c03fcc 	andi	r3,r2,255
   28648:	18c0201c 	xori	r3,r3,128
   2864c:	18ffe004 	addi	r3,r3,-128
   28650:	18000c26 	beq	r3,zero,28684 <strcmp+0xac>
   28654:	29800007 	ldb	r6,0(r5)
   28658:	19800326 	beq	r3,r6,28668 <strcmp+0x90>
   2865c:	00001306 	br	286ac <strcmp+0xd4>
   28660:	29800007 	ldb	r6,0(r5)
   28664:	11800b1e 	bne	r2,r6,28694 <strcmp+0xbc>
   28668:	21000044 	addi	r4,r4,1
   2866c:	20c00003 	ldbu	r3,0(r4)
   28670:	29400044 	addi	r5,r5,1
   28674:	18803fcc 	andi	r2,r3,255
   28678:	1080201c 	xori	r2,r2,128
   2867c:	10bfe004 	addi	r2,r2,-128
   28680:	103ff71e 	bne	r2,zero,28660 <__alt_data_end+0xfffe8660>
   28684:	0007883a 	mov	r3,zero
   28688:	28800003 	ldbu	r2,0(r5)
   2868c:	1885c83a 	sub	r2,r3,r2
   28690:	f800283a 	ret
   28694:	28800003 	ldbu	r2,0(r5)
   28698:	18c03fcc 	andi	r3,r3,255
   2869c:	1885c83a 	sub	r2,r3,r2
   286a0:	f800283a 	ret
   286a4:	0005883a 	mov	r2,zero
   286a8:	f800283a 	ret
   286ac:	10c03fcc 	andi	r3,r2,255
   286b0:	003ff506 	br	28688 <__alt_data_end+0xfffe8688>

000286b4 <__sprint_r.part.0>:
   286b4:	28801917 	ldw	r2,100(r5)
   286b8:	defff604 	addi	sp,sp,-40
   286bc:	dd400515 	stw	r21,20(sp)
   286c0:	dfc00915 	stw	ra,36(sp)
   286c4:	df000815 	stw	fp,32(sp)
   286c8:	ddc00715 	stw	r23,28(sp)
   286cc:	dd800615 	stw	r22,24(sp)
   286d0:	dd000415 	stw	r20,16(sp)
   286d4:	dcc00315 	stw	r19,12(sp)
   286d8:	dc800215 	stw	r18,8(sp)
   286dc:	dc400115 	stw	r17,4(sp)
   286e0:	dc000015 	stw	r16,0(sp)
   286e4:	1088000c 	andi	r2,r2,8192
   286e8:	302b883a 	mov	r21,r6
   286ec:	10002e26 	beq	r2,zero,287a8 <__sprint_r.part.0+0xf4>
   286f0:	30800217 	ldw	r2,8(r6)
   286f4:	35800017 	ldw	r22,0(r6)
   286f8:	10002926 	beq	r2,zero,287a0 <__sprint_r.part.0+0xec>
   286fc:	2827883a 	mov	r19,r5
   28700:	2029883a 	mov	r20,r4
   28704:	b5c00104 	addi	r23,r22,4
   28708:	04bfffc4 	movi	r18,-1
   2870c:	bc400017 	ldw	r17,0(r23)
   28710:	b4000017 	ldw	r16,0(r22)
   28714:	0039883a 	mov	fp,zero
   28718:	8822d0ba 	srli	r17,r17,2
   2871c:	8800031e 	bne	r17,zero,2872c <__sprint_r.part.0+0x78>
   28720:	00001806 	br	28784 <__sprint_r.part.0+0xd0>
   28724:	84000104 	addi	r16,r16,4
   28728:	8f001526 	beq	r17,fp,28780 <__sprint_r.part.0+0xcc>
   2872c:	81400017 	ldw	r5,0(r16)
   28730:	980d883a 	mov	r6,r19
   28734:	a009883a 	mov	r4,r20
   28738:	0029f240 	call	29f24 <_fputwc_r>
   2873c:	e7000044 	addi	fp,fp,1
   28740:	14bff81e 	bne	r2,r18,28724 <__alt_data_end+0xfffe8724>
   28744:	9005883a 	mov	r2,r18
   28748:	a8000215 	stw	zero,8(r21)
   2874c:	a8000115 	stw	zero,4(r21)
   28750:	dfc00917 	ldw	ra,36(sp)
   28754:	df000817 	ldw	fp,32(sp)
   28758:	ddc00717 	ldw	r23,28(sp)
   2875c:	dd800617 	ldw	r22,24(sp)
   28760:	dd400517 	ldw	r21,20(sp)
   28764:	dd000417 	ldw	r20,16(sp)
   28768:	dcc00317 	ldw	r19,12(sp)
   2876c:	dc800217 	ldw	r18,8(sp)
   28770:	dc400117 	ldw	r17,4(sp)
   28774:	dc000017 	ldw	r16,0(sp)
   28778:	dec00a04 	addi	sp,sp,40
   2877c:	f800283a 	ret
   28780:	a8800217 	ldw	r2,8(r21)
   28784:	8c63883a 	add	r17,r17,r17
   28788:	8c63883a 	add	r17,r17,r17
   2878c:	1445c83a 	sub	r2,r2,r17
   28790:	a8800215 	stw	r2,8(r21)
   28794:	b5800204 	addi	r22,r22,8
   28798:	bdc00204 	addi	r23,r23,8
   2879c:	103fdb1e 	bne	r2,zero,2870c <__alt_data_end+0xfffe870c>
   287a0:	0005883a 	mov	r2,zero
   287a4:	003fe806 	br	28748 <__alt_data_end+0xfffe8748>
   287a8:	00265d00 	call	265d0 <__sfvwrite_r>
   287ac:	003fe606 	br	28748 <__alt_data_end+0xfffe8748>

000287b0 <__sprint_r>:
   287b0:	30c00217 	ldw	r3,8(r6)
   287b4:	18000126 	beq	r3,zero,287bc <__sprint_r+0xc>
   287b8:	00286b41 	jmpi	286b4 <__sprint_r.part.0>
   287bc:	30000115 	stw	zero,4(r6)
   287c0:	0005883a 	mov	r2,zero
   287c4:	f800283a 	ret

000287c8 <___vfiprintf_internal_r>:
   287c8:	deffc904 	addi	sp,sp,-220
   287cc:	df003515 	stw	fp,212(sp)
   287d0:	dd003115 	stw	r20,196(sp)
   287d4:	dfc03615 	stw	ra,216(sp)
   287d8:	ddc03415 	stw	r23,208(sp)
   287dc:	dd803315 	stw	r22,204(sp)
   287e0:	dd403215 	stw	r21,200(sp)
   287e4:	dcc03015 	stw	r19,192(sp)
   287e8:	dc802f15 	stw	r18,188(sp)
   287ec:	dc402e15 	stw	r17,184(sp)
   287f0:	dc002d15 	stw	r16,180(sp)
   287f4:	d9002015 	stw	r4,128(sp)
   287f8:	d9c02215 	stw	r7,136(sp)
   287fc:	2829883a 	mov	r20,r5
   28800:	3039883a 	mov	fp,r6
   28804:	20000226 	beq	r4,zero,28810 <___vfiprintf_internal_r+0x48>
   28808:	20800e17 	ldw	r2,56(r4)
   2880c:	1000cf26 	beq	r2,zero,28b4c <___vfiprintf_internal_r+0x384>
   28810:	a080030b 	ldhu	r2,12(r20)
   28814:	10c8000c 	andi	r3,r2,8192
   28818:	1800061e 	bne	r3,zero,28834 <___vfiprintf_internal_r+0x6c>
   2881c:	a1001917 	ldw	r4,100(r20)
   28820:	00f7ffc4 	movi	r3,-8193
   28824:	10880014 	ori	r2,r2,8192
   28828:	20c6703a 	and	r3,r4,r3
   2882c:	a080030d 	sth	r2,12(r20)
   28830:	a0c01915 	stw	r3,100(r20)
   28834:	10c0020c 	andi	r3,r2,8
   28838:	1800a926 	beq	r3,zero,28ae0 <___vfiprintf_internal_r+0x318>
   2883c:	a0c00417 	ldw	r3,16(r20)
   28840:	1800a726 	beq	r3,zero,28ae0 <___vfiprintf_internal_r+0x318>
   28844:	1080068c 	andi	r2,r2,26
   28848:	00c00284 	movi	r3,10
   2884c:	10c0ac26 	beq	r2,r3,28b00 <___vfiprintf_internal_r+0x338>
   28850:	da801a04 	addi	r10,sp,104
   28854:	da801e15 	stw	r10,120(sp)
   28858:	d8801e17 	ldw	r2,120(sp)
   2885c:	da8019c4 	addi	r10,sp,103
   28860:	058000f4 	movhi	r22,3
   28864:	05c000f4 	movhi	r23,3
   28868:	da801f15 	stw	r10,124(sp)
   2886c:	1295c83a 	sub	r10,r2,r10
   28870:	b5808d04 	addi	r22,r22,564
   28874:	bdc08904 	addi	r23,r23,548
   28878:	dec01a15 	stw	sp,104(sp)
   2887c:	d8001c15 	stw	zero,112(sp)
   28880:	d8001b15 	stw	zero,108(sp)
   28884:	d8002615 	stw	zero,152(sp)
   28888:	d8002315 	stw	zero,140(sp)
   2888c:	da802715 	stw	r10,156(sp)
   28890:	d811883a 	mov	r8,sp
   28894:	dd002115 	stw	r20,132(sp)
   28898:	e021883a 	mov	r16,fp
   2889c:	80800007 	ldb	r2,0(r16)
   288a0:	1003ea26 	beq	r2,zero,2984c <___vfiprintf_internal_r+0x1084>
   288a4:	00c00944 	movi	r3,37
   288a8:	8025883a 	mov	r18,r16
   288ac:	10c0021e 	bne	r2,r3,288b8 <___vfiprintf_internal_r+0xf0>
   288b0:	00001606 	br	2890c <___vfiprintf_internal_r+0x144>
   288b4:	10c00326 	beq	r2,r3,288c4 <___vfiprintf_internal_r+0xfc>
   288b8:	94800044 	addi	r18,r18,1
   288bc:	90800007 	ldb	r2,0(r18)
   288c0:	103ffc1e 	bne	r2,zero,288b4 <__alt_data_end+0xfffe88b4>
   288c4:	9423c83a 	sub	r17,r18,r16
   288c8:	88001026 	beq	r17,zero,2890c <___vfiprintf_internal_r+0x144>
   288cc:	d8c01c17 	ldw	r3,112(sp)
   288d0:	d8801b17 	ldw	r2,108(sp)
   288d4:	44000015 	stw	r16,0(r8)
   288d8:	88c7883a 	add	r3,r17,r3
   288dc:	10800044 	addi	r2,r2,1
   288e0:	44400115 	stw	r17,4(r8)
   288e4:	d8c01c15 	stw	r3,112(sp)
   288e8:	d8801b15 	stw	r2,108(sp)
   288ec:	010001c4 	movi	r4,7
   288f0:	2080760e 	bge	r4,r2,28acc <___vfiprintf_internal_r+0x304>
   288f4:	1803821e 	bne	r3,zero,29700 <___vfiprintf_internal_r+0xf38>
   288f8:	da802317 	ldw	r10,140(sp)
   288fc:	d8001b15 	stw	zero,108(sp)
   28900:	d811883a 	mov	r8,sp
   28904:	5455883a 	add	r10,r10,r17
   28908:	da802315 	stw	r10,140(sp)
   2890c:	90800007 	ldb	r2,0(r18)
   28910:	10044626 	beq	r2,zero,29a2c <___vfiprintf_internal_r+0x1264>
   28914:	90c00047 	ldb	r3,1(r18)
   28918:	94000044 	addi	r16,r18,1
   2891c:	d8001d85 	stb	zero,118(sp)
   28920:	0009883a 	mov	r4,zero
   28924:	000f883a 	mov	r7,zero
   28928:	027fffc4 	movi	r9,-1
   2892c:	0023883a 	mov	r17,zero
   28930:	0029883a 	mov	r20,zero
   28934:	01401604 	movi	r5,88
   28938:	01800244 	movi	r6,9
   2893c:	03400a84 	movi	r13,42
   28940:	03001b04 	movi	r12,108
   28944:	84000044 	addi	r16,r16,1
   28948:	18bff804 	addi	r2,r3,-32
   2894c:	28827336 	bltu	r5,r2,2931c <___vfiprintf_internal_r+0xb54>
   28950:	100490ba 	slli	r2,r2,2
   28954:	028000f4 	movhi	r10,3
   28958:	52a25a04 	addi	r10,r10,-30360
   2895c:	1285883a 	add	r2,r2,r10
   28960:	10800017 	ldw	r2,0(r2)
   28964:	1000683a 	jmp	r2
   28968:	00029050 	cmplti	zero,zero,2625
   2896c:	0002931c 	xori	zero,zero,2636
   28970:	0002931c 	xori	zero,zero,2636
   28974:	00029070 	cmpltui	zero,zero,2625
   28978:	0002931c 	xori	zero,zero,2636
   2897c:	0002931c 	xori	zero,zero,2636
   28980:	0002931c 	xori	zero,zero,2636
   28984:	0002931c 	xori	zero,zero,2636
   28988:	0002931c 	xori	zero,zero,2636
   2898c:	0002931c 	xori	zero,zero,2636
   28990:	00029258 	cmpnei	zero,zero,2633
   28994:	00029274 	movhi	zero,2633
   28998:	0002931c 	xori	zero,zero,2636
   2899c:	00028b5c 	xori	zero,zero,2605
   289a0:	00029284 	movi	zero,2634
   289a4:	0002931c 	xori	zero,zero,2636
   289a8:	0002907c 	xorhi	zero,zero,2625
   289ac:	00029088 	cmpgei	zero,zero,2626
   289b0:	00029088 	cmpgei	zero,zero,2626
   289b4:	00029088 	cmpgei	zero,zero,2626
   289b8:	00029088 	cmpgei	zero,zero,2626
   289bc:	00029088 	cmpgei	zero,zero,2626
   289c0:	00029088 	cmpgei	zero,zero,2626
   289c4:	00029088 	cmpgei	zero,zero,2626
   289c8:	00029088 	cmpgei	zero,zero,2626
   289cc:	00029088 	cmpgei	zero,zero,2626
   289d0:	0002931c 	xori	zero,zero,2636
   289d4:	0002931c 	xori	zero,zero,2636
   289d8:	0002931c 	xori	zero,zero,2636
   289dc:	0002931c 	xori	zero,zero,2636
   289e0:	0002931c 	xori	zero,zero,2636
   289e4:	0002931c 	xori	zero,zero,2636
   289e8:	0002931c 	xori	zero,zero,2636
   289ec:	0002931c 	xori	zero,zero,2636
   289f0:	0002931c 	xori	zero,zero,2636
   289f4:	0002931c 	xori	zero,zero,2636
   289f8:	000290b4 	movhi	zero,2626
   289fc:	0002931c 	xori	zero,zero,2636
   28a00:	0002931c 	xori	zero,zero,2636
   28a04:	0002931c 	xori	zero,zero,2636
   28a08:	0002931c 	xori	zero,zero,2636
   28a0c:	0002931c 	xori	zero,zero,2636
   28a10:	0002931c 	xori	zero,zero,2636
   28a14:	0002931c 	xori	zero,zero,2636
   28a18:	0002931c 	xori	zero,zero,2636
   28a1c:	0002931c 	xori	zero,zero,2636
   28a20:	0002931c 	xori	zero,zero,2636
   28a24:	000290ec 	andhi	zero,zero,2627
   28a28:	0002931c 	xori	zero,zero,2636
   28a2c:	0002931c 	xori	zero,zero,2636
   28a30:	0002931c 	xori	zero,zero,2636
   28a34:	0002931c 	xori	zero,zero,2636
   28a38:	0002931c 	xori	zero,zero,2636
   28a3c:	00029144 	movi	zero,2629
   28a40:	0002931c 	xori	zero,zero,2636
   28a44:	0002931c 	xori	zero,zero,2636
   28a48:	000291b4 	movhi	zero,2630
   28a4c:	0002931c 	xori	zero,zero,2636
   28a50:	0002931c 	xori	zero,zero,2636
   28a54:	0002931c 	xori	zero,zero,2636
   28a58:	0002931c 	xori	zero,zero,2636
   28a5c:	0002931c 	xori	zero,zero,2636
   28a60:	0002931c 	xori	zero,zero,2636
   28a64:	0002931c 	xori	zero,zero,2636
   28a68:	0002931c 	xori	zero,zero,2636
   28a6c:	0002931c 	xori	zero,zero,2636
   28a70:	0002931c 	xori	zero,zero,2636
   28a74:	00028f60 	cmpeqi	zero,zero,2621
   28a78:	00028f8c 	andi	zero,zero,2622
   28a7c:	0002931c 	xori	zero,zero,2636
   28a80:	0002931c 	xori	zero,zero,2636
   28a84:	0002931c 	xori	zero,zero,2636
   28a88:	000292c4 	movi	zero,2635
   28a8c:	00028f8c 	andi	zero,zero,2622
   28a90:	0002931c 	xori	zero,zero,2636
   28a94:	0002931c 	xori	zero,zero,2636
   28a98:	00028e20 	cmpeqi	zero,zero,2616
   28a9c:	0002931c 	xori	zero,zero,2636
   28aa0:	00028e30 	cmpltui	zero,zero,2616
   28aa4:	00028e6c 	andhi	zero,zero,2617
   28aa8:	00028b68 	cmpgeui	zero,zero,2605
   28aac:	00028e14 	movui	zero,2616
   28ab0:	0002931c 	xori	zero,zero,2636
   28ab4:	000291f0 	cmpltui	zero,zero,2631
   28ab8:	0002931c 	xori	zero,zero,2636
   28abc:	00029248 	cmpgei	zero,zero,2633
   28ac0:	0002931c 	xori	zero,zero,2636
   28ac4:	0002931c 	xori	zero,zero,2636
   28ac8:	00028f0c 	andi	zero,zero,2620
   28acc:	42000204 	addi	r8,r8,8
   28ad0:	da802317 	ldw	r10,140(sp)
   28ad4:	5455883a 	add	r10,r10,r17
   28ad8:	da802315 	stw	r10,140(sp)
   28adc:	003f8b06 	br	2890c <__alt_data_end+0xfffe890c>
   28ae0:	d9002017 	ldw	r4,128(sp)
   28ae4:	a00b883a 	mov	r5,r20
   28ae8:	0024af40 	call	24af4 <__swsetup_r>
   28aec:	1003b11e 	bne	r2,zero,299b4 <___vfiprintf_internal_r+0x11ec>
   28af0:	a080030b 	ldhu	r2,12(r20)
   28af4:	00c00284 	movi	r3,10
   28af8:	1080068c 	andi	r2,r2,26
   28afc:	10ff541e 	bne	r2,r3,28850 <__alt_data_end+0xfffe8850>
   28b00:	a080038f 	ldh	r2,14(r20)
   28b04:	103f5216 	blt	r2,zero,28850 <__alt_data_end+0xfffe8850>
   28b08:	d9c02217 	ldw	r7,136(sp)
   28b0c:	d9002017 	ldw	r4,128(sp)
   28b10:	e00d883a 	mov	r6,fp
   28b14:	a00b883a 	mov	r5,r20
   28b18:	0029c400 	call	29c40 <__sbprintf>
   28b1c:	dfc03617 	ldw	ra,216(sp)
   28b20:	df003517 	ldw	fp,212(sp)
   28b24:	ddc03417 	ldw	r23,208(sp)
   28b28:	dd803317 	ldw	r22,204(sp)
   28b2c:	dd403217 	ldw	r21,200(sp)
   28b30:	dd003117 	ldw	r20,196(sp)
   28b34:	dcc03017 	ldw	r19,192(sp)
   28b38:	dc802f17 	ldw	r18,188(sp)
   28b3c:	dc402e17 	ldw	r17,184(sp)
   28b40:	dc002d17 	ldw	r16,180(sp)
   28b44:	dec03704 	addi	sp,sp,220
   28b48:	f800283a 	ret
   28b4c:	0020b280 	call	20b28 <__sinit>
   28b50:	003f2f06 	br	28810 <__alt_data_end+0xfffe8810>
   28b54:	0463c83a 	sub	r17,zero,r17
   28b58:	d8802215 	stw	r2,136(sp)
   28b5c:	a5000114 	ori	r20,r20,4
   28b60:	80c00007 	ldb	r3,0(r16)
   28b64:	003f7706 	br	28944 <__alt_data_end+0xfffe8944>
   28b68:	00800c04 	movi	r2,48
   28b6c:	da802217 	ldw	r10,136(sp)
   28b70:	d8801d05 	stb	r2,116(sp)
   28b74:	00801e04 	movi	r2,120
   28b78:	d8801d45 	stb	r2,117(sp)
   28b7c:	d8001d85 	stb	zero,118(sp)
   28b80:	50c00104 	addi	r3,r10,4
   28b84:	54800017 	ldw	r18,0(r10)
   28b88:	0027883a 	mov	r19,zero
   28b8c:	a0800094 	ori	r2,r20,2
   28b90:	48030b16 	blt	r9,zero,297c0 <___vfiprintf_internal_r+0xff8>
   28b94:	00bfdfc4 	movi	r2,-129
   28b98:	a096703a 	and	r11,r20,r2
   28b9c:	d8c02215 	stw	r3,136(sp)
   28ba0:	5d000094 	ori	r20,r11,2
   28ba4:	90032b1e 	bne	r18,zero,29854 <___vfiprintf_internal_r+0x108c>
   28ba8:	008000f4 	movhi	r2,3
   28bac:	10802904 	addi	r2,r2,164
   28bb0:	d8802615 	stw	r2,152(sp)
   28bb4:	0039883a 	mov	fp,zero
   28bb8:	48017b1e 	bne	r9,zero,291a8 <___vfiprintf_internal_r+0x9e0>
   28bbc:	0013883a 	mov	r9,zero
   28bc0:	0027883a 	mov	r19,zero
   28bc4:	dd401a04 	addi	r21,sp,104
   28bc8:	4825883a 	mov	r18,r9
   28bcc:	4cc0010e 	bge	r9,r19,28bd4 <___vfiprintf_internal_r+0x40c>
   28bd0:	9825883a 	mov	r18,r19
   28bd4:	e7003fcc 	andi	fp,fp,255
   28bd8:	e700201c 	xori	fp,fp,128
   28bdc:	e73fe004 	addi	fp,fp,-128
   28be0:	e0000126 	beq	fp,zero,28be8 <___vfiprintf_internal_r+0x420>
   28be4:	94800044 	addi	r18,r18,1
   28be8:	a380008c 	andi	r14,r20,2
   28bec:	70000126 	beq	r14,zero,28bf4 <___vfiprintf_internal_r+0x42c>
   28bf0:	94800084 	addi	r18,r18,2
   28bf4:	a700210c 	andi	fp,r20,132
   28bf8:	e001df1e 	bne	fp,zero,29378 <___vfiprintf_internal_r+0xbb0>
   28bfc:	8c87c83a 	sub	r3,r17,r18
   28c00:	00c1dd0e 	bge	zero,r3,29378 <___vfiprintf_internal_r+0xbb0>
   28c04:	01c00404 	movi	r7,16
   28c08:	d8801c17 	ldw	r2,112(sp)
   28c0c:	38c3ad0e 	bge	r7,r3,29ac4 <___vfiprintf_internal_r+0x12fc>
   28c10:	028000f4 	movhi	r10,3
   28c14:	52808d04 	addi	r10,r10,564
   28c18:	dc002915 	stw	r16,164(sp)
   28c1c:	d9801b17 	ldw	r6,108(sp)
   28c20:	da802415 	stw	r10,144(sp)
   28c24:	03c001c4 	movi	r15,7
   28c28:	da402515 	stw	r9,148(sp)
   28c2c:	db802815 	stw	r14,160(sp)
   28c30:	1821883a 	mov	r16,r3
   28c34:	00000506 	br	28c4c <___vfiprintf_internal_r+0x484>
   28c38:	31400084 	addi	r5,r6,2
   28c3c:	42000204 	addi	r8,r8,8
   28c40:	200d883a 	mov	r6,r4
   28c44:	843ffc04 	addi	r16,r16,-16
   28c48:	3c000d0e 	bge	r7,r16,28c80 <___vfiprintf_internal_r+0x4b8>
   28c4c:	10800404 	addi	r2,r2,16
   28c50:	31000044 	addi	r4,r6,1
   28c54:	45800015 	stw	r22,0(r8)
   28c58:	41c00115 	stw	r7,4(r8)
   28c5c:	d8801c15 	stw	r2,112(sp)
   28c60:	d9001b15 	stw	r4,108(sp)
   28c64:	793ff40e 	bge	r15,r4,28c38 <__alt_data_end+0xfffe8c38>
   28c68:	1001b51e 	bne	r2,zero,29340 <___vfiprintf_internal_r+0xb78>
   28c6c:	843ffc04 	addi	r16,r16,-16
   28c70:	000d883a 	mov	r6,zero
   28c74:	01400044 	movi	r5,1
   28c78:	d811883a 	mov	r8,sp
   28c7c:	3c3ff316 	blt	r7,r16,28c4c <__alt_data_end+0xfffe8c4c>
   28c80:	8007883a 	mov	r3,r16
   28c84:	da402517 	ldw	r9,148(sp)
   28c88:	db802817 	ldw	r14,160(sp)
   28c8c:	dc002917 	ldw	r16,164(sp)
   28c90:	da802417 	ldw	r10,144(sp)
   28c94:	1885883a 	add	r2,r3,r2
   28c98:	40c00115 	stw	r3,4(r8)
   28c9c:	42800015 	stw	r10,0(r8)
   28ca0:	d8801c15 	stw	r2,112(sp)
   28ca4:	d9401b15 	stw	r5,108(sp)
   28ca8:	00c001c4 	movi	r3,7
   28cac:	19426016 	blt	r3,r5,29630 <___vfiprintf_internal_r+0xe68>
   28cb0:	d8c01d87 	ldb	r3,118(sp)
   28cb4:	42000204 	addi	r8,r8,8
   28cb8:	29000044 	addi	r4,r5,1
   28cbc:	1801b31e 	bne	r3,zero,2938c <___vfiprintf_internal_r+0xbc4>
   28cc0:	7001c026 	beq	r14,zero,293c4 <___vfiprintf_internal_r+0xbfc>
   28cc4:	d8c01d04 	addi	r3,sp,116
   28cc8:	10800084 	addi	r2,r2,2
   28ccc:	40c00015 	stw	r3,0(r8)
   28cd0:	00c00084 	movi	r3,2
   28cd4:	40c00115 	stw	r3,4(r8)
   28cd8:	d8801c15 	stw	r2,112(sp)
   28cdc:	d9001b15 	stw	r4,108(sp)
   28ce0:	00c001c4 	movi	r3,7
   28ce4:	1902650e 	bge	r3,r4,2967c <___vfiprintf_internal_r+0xeb4>
   28ce8:	10029a1e 	bne	r2,zero,29754 <___vfiprintf_internal_r+0xf8c>
   28cec:	00c02004 	movi	r3,128
   28cf0:	01000044 	movi	r4,1
   28cf4:	000b883a 	mov	r5,zero
   28cf8:	d811883a 	mov	r8,sp
   28cfc:	e0c1b31e 	bne	fp,r3,293cc <___vfiprintf_internal_r+0xc04>
   28d00:	8cb9c83a 	sub	fp,r17,r18
   28d04:	0701b10e 	bge	zero,fp,293cc <___vfiprintf_internal_r+0xc04>
   28d08:	01c00404 	movi	r7,16
   28d0c:	3f03890e 	bge	r7,fp,29b34 <___vfiprintf_internal_r+0x136c>
   28d10:	00c000f4 	movhi	r3,3
   28d14:	18c08904 	addi	r3,r3,548
   28d18:	d8c02415 	stw	r3,144(sp)
   28d1c:	8007883a 	mov	r3,r16
   28d20:	034001c4 	movi	r13,7
   28d24:	e021883a 	mov	r16,fp
   28d28:	da402515 	stw	r9,148(sp)
   28d2c:	1839883a 	mov	fp,r3
   28d30:	00000506 	br	28d48 <___vfiprintf_internal_r+0x580>
   28d34:	29800084 	addi	r6,r5,2
   28d38:	42000204 	addi	r8,r8,8
   28d3c:	180b883a 	mov	r5,r3
   28d40:	843ffc04 	addi	r16,r16,-16
   28d44:	3c000d0e 	bge	r7,r16,28d7c <___vfiprintf_internal_r+0x5b4>
   28d48:	10800404 	addi	r2,r2,16
   28d4c:	28c00044 	addi	r3,r5,1
   28d50:	45c00015 	stw	r23,0(r8)
   28d54:	41c00115 	stw	r7,4(r8)
   28d58:	d8801c15 	stw	r2,112(sp)
   28d5c:	d8c01b15 	stw	r3,108(sp)
   28d60:	68fff40e 	bge	r13,r3,28d34 <__alt_data_end+0xfffe8d34>
   28d64:	1002241e 	bne	r2,zero,295f8 <___vfiprintf_internal_r+0xe30>
   28d68:	843ffc04 	addi	r16,r16,-16
   28d6c:	01800044 	movi	r6,1
   28d70:	000b883a 	mov	r5,zero
   28d74:	d811883a 	mov	r8,sp
   28d78:	3c3ff316 	blt	r7,r16,28d48 <__alt_data_end+0xfffe8d48>
   28d7c:	da402517 	ldw	r9,148(sp)
   28d80:	e007883a 	mov	r3,fp
   28d84:	8039883a 	mov	fp,r16
   28d88:	1821883a 	mov	r16,r3
   28d8c:	d8c02417 	ldw	r3,144(sp)
   28d90:	1705883a 	add	r2,r2,fp
   28d94:	47000115 	stw	fp,4(r8)
   28d98:	40c00015 	stw	r3,0(r8)
   28d9c:	d8801c15 	stw	r2,112(sp)
   28da0:	d9801b15 	stw	r6,108(sp)
   28da4:	00c001c4 	movi	r3,7
   28da8:	19827616 	blt	r3,r6,29784 <___vfiprintf_internal_r+0xfbc>
   28dac:	4cf9c83a 	sub	fp,r9,r19
   28db0:	42000204 	addi	r8,r8,8
   28db4:	31000044 	addi	r4,r6,1
   28db8:	300b883a 	mov	r5,r6
   28dbc:	07018516 	blt	zero,fp,293d4 <___vfiprintf_internal_r+0xc0c>
   28dc0:	9885883a 	add	r2,r19,r2
   28dc4:	45400015 	stw	r21,0(r8)
   28dc8:	44c00115 	stw	r19,4(r8)
   28dcc:	d8801c15 	stw	r2,112(sp)
   28dd0:	d9001b15 	stw	r4,108(sp)
   28dd4:	00c001c4 	movi	r3,7
   28dd8:	1901dd0e 	bge	r3,r4,29550 <___vfiprintf_internal_r+0xd88>
   28ddc:	1002401e 	bne	r2,zero,296e0 <___vfiprintf_internal_r+0xf18>
   28de0:	d8001b15 	stw	zero,108(sp)
   28de4:	a2c0010c 	andi	r11,r20,4
   28de8:	58000226 	beq	r11,zero,28df4 <___vfiprintf_internal_r+0x62c>
   28dec:	8ca7c83a 	sub	r19,r17,r18
   28df0:	04c2f216 	blt	zero,r19,299bc <___vfiprintf_internal_r+0x11f4>
   28df4:	8c80010e 	bge	r17,r18,28dfc <___vfiprintf_internal_r+0x634>
   28df8:	9023883a 	mov	r17,r18
   28dfc:	da802317 	ldw	r10,140(sp)
   28e00:	5455883a 	add	r10,r10,r17
   28e04:	da802315 	stw	r10,140(sp)
   28e08:	d8001b15 	stw	zero,108(sp)
   28e0c:	d811883a 	mov	r8,sp
   28e10:	003ea206 	br	2889c <__alt_data_end+0xfffe889c>
   28e14:	a5000814 	ori	r20,r20,32
   28e18:	80c00007 	ldb	r3,0(r16)
   28e1c:	003ec906 	br	28944 <__alt_data_end+0xfffe8944>
   28e20:	80c00007 	ldb	r3,0(r16)
   28e24:	1b030926 	beq	r3,r12,29a4c <___vfiprintf_internal_r+0x1284>
   28e28:	a5000414 	ori	r20,r20,16
   28e2c:	003ec506 	br	28944 <__alt_data_end+0xfffe8944>
   28e30:	21003fcc 	andi	r4,r4,255
   28e34:	20035e1e 	bne	r4,zero,29bb0 <___vfiprintf_internal_r+0x13e8>
   28e38:	a080080c 	andi	r2,r20,32
   28e3c:	1002a526 	beq	r2,zero,298d4 <___vfiprintf_internal_r+0x110c>
   28e40:	da802217 	ldw	r10,136(sp)
   28e44:	50800017 	ldw	r2,0(r10)
   28e48:	da802317 	ldw	r10,140(sp)
   28e4c:	5007d7fa 	srai	r3,r10,31
   28e50:	da802217 	ldw	r10,136(sp)
   28e54:	10c00115 	stw	r3,4(r2)
   28e58:	52800104 	addi	r10,r10,4
   28e5c:	da802215 	stw	r10,136(sp)
   28e60:	da802317 	ldw	r10,140(sp)
   28e64:	12800015 	stw	r10,0(r2)
   28e68:	003e8c06 	br	2889c <__alt_data_end+0xfffe889c>
   28e6c:	21003fcc 	andi	r4,r4,255
   28e70:	2003511e 	bne	r4,zero,29bb8 <___vfiprintf_internal_r+0x13f0>
   28e74:	a080080c 	andi	r2,r20,32
   28e78:	1000a126 	beq	r2,zero,29100 <___vfiprintf_internal_r+0x938>
   28e7c:	da802217 	ldw	r10,136(sp)
   28e80:	d8001d85 	stb	zero,118(sp)
   28e84:	50800204 	addi	r2,r10,8
   28e88:	54800017 	ldw	r18,0(r10)
   28e8c:	54c00117 	ldw	r19,4(r10)
   28e90:	4802b416 	blt	r9,zero,29964 <___vfiprintf_internal_r+0x119c>
   28e94:	013fdfc4 	movi	r4,-129
   28e98:	94c6b03a 	or	r3,r18,r19
   28e9c:	d8802215 	stw	r2,136(sp)
   28ea0:	a128703a 	and	r20,r20,r4
   28ea4:	1800a226 	beq	r3,zero,29130 <___vfiprintf_internal_r+0x968>
   28ea8:	0039883a 	mov	fp,zero
   28eac:	dd401a04 	addi	r21,sp,104
   28eb0:	9006d0fa 	srli	r3,r18,3
   28eb4:	9808977a 	slli	r4,r19,29
   28eb8:	9826d0fa 	srli	r19,r19,3
   28ebc:	948001cc 	andi	r18,r18,7
   28ec0:	90800c04 	addi	r2,r18,48
   28ec4:	ad7fffc4 	addi	r21,r21,-1
   28ec8:	20e4b03a 	or	r18,r4,r3
   28ecc:	a8800005 	stb	r2,0(r21)
   28ed0:	94c6b03a 	or	r3,r18,r19
   28ed4:	183ff61e 	bne	r3,zero,28eb0 <__alt_data_end+0xfffe8eb0>
   28ed8:	a0c0004c 	andi	r3,r20,1
   28edc:	18005926 	beq	r3,zero,29044 <___vfiprintf_internal_r+0x87c>
   28ee0:	10803fcc 	andi	r2,r2,255
   28ee4:	1080201c 	xori	r2,r2,128
   28ee8:	10bfe004 	addi	r2,r2,-128
   28eec:	00c00c04 	movi	r3,48
   28ef0:	10c05426 	beq	r2,r3,29044 <___vfiprintf_internal_r+0x87c>
   28ef4:	da801e17 	ldw	r10,120(sp)
   28ef8:	a8bfffc4 	addi	r2,r21,-1
   28efc:	a8ffffc5 	stb	r3,-1(r21)
   28f00:	50a7c83a 	sub	r19,r10,r2
   28f04:	102b883a 	mov	r21,r2
   28f08:	003f2f06 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   28f0c:	21003fcc 	andi	r4,r4,255
   28f10:	2003421e 	bne	r4,zero,29c1c <___vfiprintf_internal_r+0x1454>
   28f14:	008000f4 	movhi	r2,3
   28f18:	10802904 	addi	r2,r2,164
   28f1c:	d8802615 	stw	r2,152(sp)
   28f20:	a080080c 	andi	r2,r20,32
   28f24:	1000aa26 	beq	r2,zero,291d0 <___vfiprintf_internal_r+0xa08>
   28f28:	da802217 	ldw	r10,136(sp)
   28f2c:	54800017 	ldw	r18,0(r10)
   28f30:	54c00117 	ldw	r19,4(r10)
   28f34:	52800204 	addi	r10,r10,8
   28f38:	da802215 	stw	r10,136(sp)
   28f3c:	a080004c 	andi	r2,r20,1
   28f40:	1001d226 	beq	r2,zero,2968c <___vfiprintf_internal_r+0xec4>
   28f44:	94c4b03a 	or	r2,r18,r19
   28f48:	1002351e 	bne	r2,zero,29820 <___vfiprintf_internal_r+0x1058>
   28f4c:	d8001d85 	stb	zero,118(sp)
   28f50:	48022216 	blt	r9,zero,297dc <___vfiprintf_internal_r+0x1014>
   28f54:	00bfdfc4 	movi	r2,-129
   28f58:	a0a8703a 	and	r20,r20,r2
   28f5c:	003f1506 	br	28bb4 <__alt_data_end+0xfffe8bb4>
   28f60:	da802217 	ldw	r10,136(sp)
   28f64:	04800044 	movi	r18,1
   28f68:	d8001d85 	stb	zero,118(sp)
   28f6c:	50800017 	ldw	r2,0(r10)
   28f70:	52800104 	addi	r10,r10,4
   28f74:	da802215 	stw	r10,136(sp)
   28f78:	d8801005 	stb	r2,64(sp)
   28f7c:	9027883a 	mov	r19,r18
   28f80:	dd401004 	addi	r21,sp,64
   28f84:	0013883a 	mov	r9,zero
   28f88:	003f1706 	br	28be8 <__alt_data_end+0xfffe8be8>
   28f8c:	21003fcc 	andi	r4,r4,255
   28f90:	2003201e 	bne	r4,zero,29c14 <___vfiprintf_internal_r+0x144c>
   28f94:	a080080c 	andi	r2,r20,32
   28f98:	10004b26 	beq	r2,zero,290c8 <___vfiprintf_internal_r+0x900>
   28f9c:	da802217 	ldw	r10,136(sp)
   28fa0:	50800117 	ldw	r2,4(r10)
   28fa4:	54800017 	ldw	r18,0(r10)
   28fa8:	52800204 	addi	r10,r10,8
   28fac:	da802215 	stw	r10,136(sp)
   28fb0:	1027883a 	mov	r19,r2
   28fb4:	10022c16 	blt	r2,zero,29868 <___vfiprintf_internal_r+0x10a0>
   28fb8:	df001d83 	ldbu	fp,118(sp)
   28fbc:	48007216 	blt	r9,zero,29188 <___vfiprintf_internal_r+0x9c0>
   28fc0:	00ffdfc4 	movi	r3,-129
   28fc4:	94c4b03a 	or	r2,r18,r19
   28fc8:	a0e8703a 	and	r20,r20,r3
   28fcc:	1000cc26 	beq	r2,zero,29300 <___vfiprintf_internal_r+0xb38>
   28fd0:	98021026 	beq	r19,zero,29814 <___vfiprintf_internal_r+0x104c>
   28fd4:	dc402415 	stw	r17,144(sp)
   28fd8:	dc002515 	stw	r16,148(sp)
   28fdc:	9823883a 	mov	r17,r19
   28fe0:	9021883a 	mov	r16,r18
   28fe4:	dd401a04 	addi	r21,sp,104
   28fe8:	4825883a 	mov	r18,r9
   28fec:	4027883a 	mov	r19,r8
   28ff0:	8009883a 	mov	r4,r16
   28ff4:	880b883a 	mov	r5,r17
   28ff8:	01800284 	movi	r6,10
   28ffc:	000f883a 	mov	r7,zero
   29000:	002a8800 	call	2a880 <__umoddi3>
   29004:	10800c04 	addi	r2,r2,48
   29008:	ad7fffc4 	addi	r21,r21,-1
   2900c:	8009883a 	mov	r4,r16
   29010:	880b883a 	mov	r5,r17
   29014:	a8800005 	stb	r2,0(r21)
   29018:	01800284 	movi	r6,10
   2901c:	000f883a 	mov	r7,zero
   29020:	002a3080 	call	2a308 <__udivdi3>
   29024:	1021883a 	mov	r16,r2
   29028:	10c4b03a 	or	r2,r2,r3
   2902c:	1823883a 	mov	r17,r3
   29030:	103fef1e 	bne	r2,zero,28ff0 <__alt_data_end+0xfffe8ff0>
   29034:	dc402417 	ldw	r17,144(sp)
   29038:	dc002517 	ldw	r16,148(sp)
   2903c:	9013883a 	mov	r9,r18
   29040:	9811883a 	mov	r8,r19
   29044:	da801e17 	ldw	r10,120(sp)
   29048:	5567c83a 	sub	r19,r10,r21
   2904c:	003ede06 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   29050:	38803fcc 	andi	r2,r7,255
   29054:	1080201c 	xori	r2,r2,128
   29058:	10bfe004 	addi	r2,r2,-128
   2905c:	1002371e 	bne	r2,zero,2993c <___vfiprintf_internal_r+0x1174>
   29060:	01000044 	movi	r4,1
   29064:	01c00804 	movi	r7,32
   29068:	80c00007 	ldb	r3,0(r16)
   2906c:	003e3506 	br	28944 <__alt_data_end+0xfffe8944>
   29070:	a5000054 	ori	r20,r20,1
   29074:	80c00007 	ldb	r3,0(r16)
   29078:	003e3206 	br	28944 <__alt_data_end+0xfffe8944>
   2907c:	a5002014 	ori	r20,r20,128
   29080:	80c00007 	ldb	r3,0(r16)
   29084:	003e2f06 	br	28944 <__alt_data_end+0xfffe8944>
   29088:	8015883a 	mov	r10,r16
   2908c:	0023883a 	mov	r17,zero
   29090:	18bff404 	addi	r2,r3,-48
   29094:	50c00007 	ldb	r3,0(r10)
   29098:	8c4002a4 	muli	r17,r17,10
   2909c:	84000044 	addi	r16,r16,1
   290a0:	8015883a 	mov	r10,r16
   290a4:	1463883a 	add	r17,r2,r17
   290a8:	18bff404 	addi	r2,r3,-48
   290ac:	30bff92e 	bgeu	r6,r2,29094 <__alt_data_end+0xfffe9094>
   290b0:	003e2506 	br	28948 <__alt_data_end+0xfffe8948>
   290b4:	21003fcc 	andi	r4,r4,255
   290b8:	2002d41e 	bne	r4,zero,29c0c <___vfiprintf_internal_r+0x1444>
   290bc:	a5000414 	ori	r20,r20,16
   290c0:	a080080c 	andi	r2,r20,32
   290c4:	103fb51e 	bne	r2,zero,28f9c <__alt_data_end+0xfffe8f9c>
   290c8:	a080040c 	andi	r2,r20,16
   290cc:	1001f826 	beq	r2,zero,298b0 <___vfiprintf_internal_r+0x10e8>
   290d0:	da802217 	ldw	r10,136(sp)
   290d4:	54800017 	ldw	r18,0(r10)
   290d8:	52800104 	addi	r10,r10,4
   290dc:	da802215 	stw	r10,136(sp)
   290e0:	9027d7fa 	srai	r19,r18,31
   290e4:	9805883a 	mov	r2,r19
   290e8:	003fb206 	br	28fb4 <__alt_data_end+0xfffe8fb4>
   290ec:	21003fcc 	andi	r4,r4,255
   290f0:	2002c41e 	bne	r4,zero,29c04 <___vfiprintf_internal_r+0x143c>
   290f4:	a5000414 	ori	r20,r20,16
   290f8:	a080080c 	andi	r2,r20,32
   290fc:	103f5f1e 	bne	r2,zero,28e7c <__alt_data_end+0xfffe8e7c>
   29100:	a080040c 	andi	r2,r20,16
   29104:	10020f26 	beq	r2,zero,29944 <___vfiprintf_internal_r+0x117c>
   29108:	da802217 	ldw	r10,136(sp)
   2910c:	d8001d85 	stb	zero,118(sp)
   29110:	0027883a 	mov	r19,zero
   29114:	50800104 	addi	r2,r10,4
   29118:	54800017 	ldw	r18,0(r10)
   2911c:	48021116 	blt	r9,zero,29964 <___vfiprintf_internal_r+0x119c>
   29120:	00ffdfc4 	movi	r3,-129
   29124:	d8802215 	stw	r2,136(sp)
   29128:	a0e8703a 	and	r20,r20,r3
   2912c:	903f5e1e 	bne	r18,zero,28ea8 <__alt_data_end+0xfffe8ea8>
   29130:	0039883a 	mov	fp,zero
   29134:	4802a626 	beq	r9,zero,29bd0 <___vfiprintf_internal_r+0x1408>
   29138:	0025883a 	mov	r18,zero
   2913c:	0027883a 	mov	r19,zero
   29140:	003f5a06 	br	28eac <__alt_data_end+0xfffe8eac>
   29144:	21003fcc 	andi	r4,r4,255
   29148:	20029f1e 	bne	r4,zero,29bc8 <___vfiprintf_internal_r+0x1400>
   2914c:	a5000414 	ori	r20,r20,16
   29150:	a080080c 	andi	r2,r20,32
   29154:	10005e1e 	bne	r2,zero,292d0 <___vfiprintf_internal_r+0xb08>
   29158:	a080040c 	andi	r2,r20,16
   2915c:	1001a21e 	bne	r2,zero,297e8 <___vfiprintf_internal_r+0x1020>
   29160:	a080100c 	andi	r2,r20,64
   29164:	d8001d85 	stb	zero,118(sp)
   29168:	da802217 	ldw	r10,136(sp)
   2916c:	1002231e 	bne	r2,zero,299fc <___vfiprintf_internal_r+0x1234>
   29170:	50800104 	addi	r2,r10,4
   29174:	54800017 	ldw	r18,0(r10)
   29178:	0027883a 	mov	r19,zero
   2917c:	4801a00e 	bge	r9,zero,29800 <___vfiprintf_internal_r+0x1038>
   29180:	d8802215 	stw	r2,136(sp)
   29184:	0039883a 	mov	fp,zero
   29188:	94c4b03a 	or	r2,r18,r19
   2918c:	103f901e 	bne	r2,zero,28fd0 <__alt_data_end+0xfffe8fd0>
   29190:	00800044 	movi	r2,1
   29194:	10803fcc 	andi	r2,r2,255
   29198:	00c00044 	movi	r3,1
   2919c:	10c05926 	beq	r2,r3,29304 <___vfiprintf_internal_r+0xb3c>
   291a0:	00c00084 	movi	r3,2
   291a4:	10ffe41e 	bne	r2,r3,29138 <__alt_data_end+0xfffe9138>
   291a8:	0025883a 	mov	r18,zero
   291ac:	0027883a 	mov	r19,zero
   291b0:	00013d06 	br	296a8 <___vfiprintf_internal_r+0xee0>
   291b4:	21003fcc 	andi	r4,r4,255
   291b8:	2002811e 	bne	r4,zero,29bc0 <___vfiprintf_internal_r+0x13f8>
   291bc:	008000f4 	movhi	r2,3
   291c0:	10802404 	addi	r2,r2,144
   291c4:	d8802615 	stw	r2,152(sp)
   291c8:	a080080c 	andi	r2,r20,32
   291cc:	103f561e 	bne	r2,zero,28f28 <__alt_data_end+0xfffe8f28>
   291d0:	a080040c 	andi	r2,r20,16
   291d4:	1001d126 	beq	r2,zero,2991c <___vfiprintf_internal_r+0x1154>
   291d8:	da802217 	ldw	r10,136(sp)
   291dc:	0027883a 	mov	r19,zero
   291e0:	54800017 	ldw	r18,0(r10)
   291e4:	52800104 	addi	r10,r10,4
   291e8:	da802215 	stw	r10,136(sp)
   291ec:	003f5306 	br	28f3c <__alt_data_end+0xfffe8f3c>
   291f0:	da802217 	ldw	r10,136(sp)
   291f4:	d8001d85 	stb	zero,118(sp)
   291f8:	55400017 	ldw	r21,0(r10)
   291fc:	50c00104 	addi	r3,r10,4
   29200:	a8024226 	beq	r21,zero,29b0c <___vfiprintf_internal_r+0x1344>
   29204:	48021816 	blt	r9,zero,29a68 <___vfiprintf_internal_r+0x12a0>
   29208:	480d883a 	mov	r6,r9
   2920c:	000b883a 	mov	r5,zero
   29210:	a809883a 	mov	r4,r21
   29214:	d8c02a15 	stw	r3,168(sp)
   29218:	da002b15 	stw	r8,172(sp)
   2921c:	da402c15 	stw	r9,176(sp)
   29220:	0026c1c0 	call	26c1c <memchr>
   29224:	d8c02a17 	ldw	r3,168(sp)
   29228:	da002b17 	ldw	r8,172(sp)
   2922c:	da402c17 	ldw	r9,176(sp)
   29230:	10024826 	beq	r2,zero,29b54 <___vfiprintf_internal_r+0x138c>
   29234:	1567c83a 	sub	r19,r2,r21
   29238:	df001d83 	ldbu	fp,118(sp)
   2923c:	d8c02215 	stw	r3,136(sp)
   29240:	0013883a 	mov	r9,zero
   29244:	003e6006 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   29248:	21003fcc 	andi	r4,r4,255
   2924c:	203fc026 	beq	r4,zero,29150 <__alt_data_end+0xfffe9150>
   29250:	d9c01d85 	stb	r7,118(sp)
   29254:	003fbe06 	br	29150 <__alt_data_end+0xfffe9150>
   29258:	da802217 	ldw	r10,136(sp)
   2925c:	54400017 	ldw	r17,0(r10)
   29260:	50800104 	addi	r2,r10,4
   29264:	883e3b16 	blt	r17,zero,28b54 <__alt_data_end+0xfffe8b54>
   29268:	d8802215 	stw	r2,136(sp)
   2926c:	80c00007 	ldb	r3,0(r16)
   29270:	003db406 	br	28944 <__alt_data_end+0xfffe8944>
   29274:	01000044 	movi	r4,1
   29278:	01c00ac4 	movi	r7,43
   2927c:	80c00007 	ldb	r3,0(r16)
   29280:	003db006 	br	28944 <__alt_data_end+0xfffe8944>
   29284:	80c00007 	ldb	r3,0(r16)
   29288:	82800044 	addi	r10,r16,1
   2928c:	1b423c26 	beq	r3,r13,29b80 <___vfiprintf_internal_r+0x13b8>
   29290:	18bff404 	addi	r2,r3,-48
   29294:	0013883a 	mov	r9,zero
   29298:	30822b36 	bltu	r6,r2,29b48 <___vfiprintf_internal_r+0x1380>
   2929c:	50c00007 	ldb	r3,0(r10)
   292a0:	4a4002a4 	muli	r9,r9,10
   292a4:	54000044 	addi	r16,r10,1
   292a8:	8015883a 	mov	r10,r16
   292ac:	4893883a 	add	r9,r9,r2
   292b0:	18bff404 	addi	r2,r3,-48
   292b4:	30bff92e 	bgeu	r6,r2,2929c <__alt_data_end+0xfffe929c>
   292b8:	483da30e 	bge	r9,zero,28948 <__alt_data_end+0xfffe8948>
   292bc:	027fffc4 	movi	r9,-1
   292c0:	003da106 	br	28948 <__alt_data_end+0xfffe8948>
   292c4:	a5001014 	ori	r20,r20,64
   292c8:	80c00007 	ldb	r3,0(r16)
   292cc:	003d9d06 	br	28944 <__alt_data_end+0xfffe8944>
   292d0:	da802217 	ldw	r10,136(sp)
   292d4:	d8001d85 	stb	zero,118(sp)
   292d8:	50c00204 	addi	r3,r10,8
   292dc:	54800017 	ldw	r18,0(r10)
   292e0:	54c00117 	ldw	r19,4(r10)
   292e4:	4801ca16 	blt	r9,zero,29a10 <___vfiprintf_internal_r+0x1248>
   292e8:	013fdfc4 	movi	r4,-129
   292ec:	94c4b03a 	or	r2,r18,r19
   292f0:	d8c02215 	stw	r3,136(sp)
   292f4:	a128703a 	and	r20,r20,r4
   292f8:	0039883a 	mov	fp,zero
   292fc:	103f341e 	bne	r2,zero,28fd0 <__alt_data_end+0xfffe8fd0>
   29300:	483e2e26 	beq	r9,zero,28bbc <__alt_data_end+0xfffe8bbc>
   29304:	0025883a 	mov	r18,zero
   29308:	94800c04 	addi	r18,r18,48
   2930c:	dc8019c5 	stb	r18,103(sp)
   29310:	dcc02717 	ldw	r19,156(sp)
   29314:	dd4019c4 	addi	r21,sp,103
   29318:	003e2b06 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   2931c:	21003fcc 	andi	r4,r4,255
   29320:	2002361e 	bne	r4,zero,29bfc <___vfiprintf_internal_r+0x1434>
   29324:	1801c126 	beq	r3,zero,29a2c <___vfiprintf_internal_r+0x1264>
   29328:	04800044 	movi	r18,1
   2932c:	d8c01005 	stb	r3,64(sp)
   29330:	d8001d85 	stb	zero,118(sp)
   29334:	9027883a 	mov	r19,r18
   29338:	dd401004 	addi	r21,sp,64
   2933c:	003f1106 	br	28f84 <__alt_data_end+0xfffe8f84>
   29340:	d9402117 	ldw	r5,132(sp)
   29344:	d9002017 	ldw	r4,128(sp)
   29348:	d9801a04 	addi	r6,sp,104
   2934c:	d9c02b15 	stw	r7,172(sp)
   29350:	dbc02a15 	stw	r15,168(sp)
   29354:	00286b40 	call	286b4 <__sprint_r.part.0>
   29358:	d9c02b17 	ldw	r7,172(sp)
   2935c:	dbc02a17 	ldw	r15,168(sp)
   29360:	10006d1e 	bne	r2,zero,29518 <___vfiprintf_internal_r+0xd50>
   29364:	d9801b17 	ldw	r6,108(sp)
   29368:	d8801c17 	ldw	r2,112(sp)
   2936c:	d811883a 	mov	r8,sp
   29370:	31400044 	addi	r5,r6,1
   29374:	003e3306 	br	28c44 <__alt_data_end+0xfffe8c44>
   29378:	d9401b17 	ldw	r5,108(sp)
   2937c:	d8801c17 	ldw	r2,112(sp)
   29380:	29000044 	addi	r4,r5,1
   29384:	d8c01d87 	ldb	r3,118(sp)
   29388:	183e4d26 	beq	r3,zero,28cc0 <__alt_data_end+0xfffe8cc0>
   2938c:	00c00044 	movi	r3,1
   29390:	d9401d84 	addi	r5,sp,118
   29394:	10c5883a 	add	r2,r2,r3
   29398:	41400015 	stw	r5,0(r8)
   2939c:	40c00115 	stw	r3,4(r8)
   293a0:	d8801c15 	stw	r2,112(sp)
   293a4:	d9001b15 	stw	r4,108(sp)
   293a8:	014001c4 	movi	r5,7
   293ac:	2900a90e 	bge	r5,r4,29654 <___vfiprintf_internal_r+0xe8c>
   293b0:	1000da1e 	bne	r2,zero,2971c <___vfiprintf_internal_r+0xf54>
   293b4:	7000ab1e 	bne	r14,zero,29664 <___vfiprintf_internal_r+0xe9c>
   293b8:	000b883a 	mov	r5,zero
   293bc:	1809883a 	mov	r4,r3
   293c0:	d811883a 	mov	r8,sp
   293c4:	00c02004 	movi	r3,128
   293c8:	e0fe4d26 	beq	fp,r3,28d00 <__alt_data_end+0xfffe8d00>
   293cc:	4cf9c83a 	sub	fp,r9,r19
   293d0:	073e7b0e 	bge	zero,fp,28dc0 <__alt_data_end+0xfffe8dc0>
   293d4:	01c00404 	movi	r7,16
   293d8:	3f01900e 	bge	r7,fp,29a1c <___vfiprintf_internal_r+0x1254>
   293dc:	00c000f4 	movhi	r3,3
   293e0:	18c08904 	addi	r3,r3,548
   293e4:	d8c02415 	stw	r3,144(sp)
   293e8:	034001c4 	movi	r13,7
   293ec:	00000506 	br	29404 <___vfiprintf_internal_r+0xc3c>
   293f0:	29000084 	addi	r4,r5,2
   293f4:	42000204 	addi	r8,r8,8
   293f8:	180b883a 	mov	r5,r3
   293fc:	e73ffc04 	addi	fp,fp,-16
   29400:	3f000d0e 	bge	r7,fp,29438 <___vfiprintf_internal_r+0xc70>
   29404:	10800404 	addi	r2,r2,16
   29408:	28c00044 	addi	r3,r5,1
   2940c:	45c00015 	stw	r23,0(r8)
   29410:	41c00115 	stw	r7,4(r8)
   29414:	d8801c15 	stw	r2,112(sp)
   29418:	d8c01b15 	stw	r3,108(sp)
   2941c:	68fff40e 	bge	r13,r3,293f0 <__alt_data_end+0xfffe93f0>
   29420:	1000101e 	bne	r2,zero,29464 <___vfiprintf_internal_r+0xc9c>
   29424:	e73ffc04 	addi	fp,fp,-16
   29428:	01000044 	movi	r4,1
   2942c:	000b883a 	mov	r5,zero
   29430:	d811883a 	mov	r8,sp
   29434:	3f3ff316 	blt	r7,fp,29404 <__alt_data_end+0xfffe9404>
   29438:	da802417 	ldw	r10,144(sp)
   2943c:	1705883a 	add	r2,r2,fp
   29440:	47000115 	stw	fp,4(r8)
   29444:	42800015 	stw	r10,0(r8)
   29448:	d8801c15 	stw	r2,112(sp)
   2944c:	d9001b15 	stw	r4,108(sp)
   29450:	00c001c4 	movi	r3,7
   29454:	19003616 	blt	r3,r4,29530 <___vfiprintf_internal_r+0xd68>
   29458:	42000204 	addi	r8,r8,8
   2945c:	21000044 	addi	r4,r4,1
   29460:	003e5706 	br	28dc0 <__alt_data_end+0xfffe8dc0>
   29464:	d9402117 	ldw	r5,132(sp)
   29468:	d9002017 	ldw	r4,128(sp)
   2946c:	d9801a04 	addi	r6,sp,104
   29470:	d9c02b15 	stw	r7,172(sp)
   29474:	db402a15 	stw	r13,168(sp)
   29478:	00286b40 	call	286b4 <__sprint_r.part.0>
   2947c:	d9c02b17 	ldw	r7,172(sp)
   29480:	db402a17 	ldw	r13,168(sp)
   29484:	1000241e 	bne	r2,zero,29518 <___vfiprintf_internal_r+0xd50>
   29488:	d9401b17 	ldw	r5,108(sp)
   2948c:	d8801c17 	ldw	r2,112(sp)
   29490:	d811883a 	mov	r8,sp
   29494:	29000044 	addi	r4,r5,1
   29498:	003fd806 	br	293fc <__alt_data_end+0xfffe93fc>
   2949c:	d9401b17 	ldw	r5,108(sp)
   294a0:	00c000f4 	movhi	r3,3
   294a4:	18c08d04 	addi	r3,r3,564
   294a8:	d8c02415 	stw	r3,144(sp)
   294ac:	29400044 	addi	r5,r5,1
   294b0:	d8c02417 	ldw	r3,144(sp)
   294b4:	14c5883a 	add	r2,r2,r19
   294b8:	44c00115 	stw	r19,4(r8)
   294bc:	40c00015 	stw	r3,0(r8)
   294c0:	d8801c15 	stw	r2,112(sp)
   294c4:	d9401b15 	stw	r5,108(sp)
   294c8:	00c001c4 	movi	r3,7
   294cc:	1940070e 	bge	r3,r5,294ec <___vfiprintf_internal_r+0xd24>
   294d0:	103e4826 	beq	r2,zero,28df4 <__alt_data_end+0xfffe8df4>
   294d4:	d9402117 	ldw	r5,132(sp)
   294d8:	d9002017 	ldw	r4,128(sp)
   294dc:	d9801a04 	addi	r6,sp,104
   294e0:	00286b40 	call	286b4 <__sprint_r.part.0>
   294e4:	10000c1e 	bne	r2,zero,29518 <___vfiprintf_internal_r+0xd50>
   294e8:	d8801c17 	ldw	r2,112(sp)
   294ec:	8c80010e 	bge	r17,r18,294f4 <___vfiprintf_internal_r+0xd2c>
   294f0:	9023883a 	mov	r17,r18
   294f4:	da802317 	ldw	r10,140(sp)
   294f8:	5455883a 	add	r10,r10,r17
   294fc:	da802315 	stw	r10,140(sp)
   29500:	103e4126 	beq	r2,zero,28e08 <__alt_data_end+0xfffe8e08>
   29504:	d9402117 	ldw	r5,132(sp)
   29508:	d9002017 	ldw	r4,128(sp)
   2950c:	d9801a04 	addi	r6,sp,104
   29510:	00286b40 	call	286b4 <__sprint_r.part.0>
   29514:	103e3c26 	beq	r2,zero,28e08 <__alt_data_end+0xfffe8e08>
   29518:	dd002117 	ldw	r20,132(sp)
   2951c:	a080030b 	ldhu	r2,12(r20)
   29520:	1080100c 	andi	r2,r2,64
   29524:	1001231e 	bne	r2,zero,299b4 <___vfiprintf_internal_r+0x11ec>
   29528:	d8802317 	ldw	r2,140(sp)
   2952c:	003d7b06 	br	28b1c <__alt_data_end+0xfffe8b1c>
   29530:	1000991e 	bne	r2,zero,29798 <___vfiprintf_internal_r+0xfd0>
   29534:	00c00044 	movi	r3,1
   29538:	9805883a 	mov	r2,r19
   2953c:	dd400015 	stw	r21,0(sp)
   29540:	dcc00115 	stw	r19,4(sp)
   29544:	dcc01c15 	stw	r19,112(sp)
   29548:	d8c01b15 	stw	r3,108(sp)
   2954c:	d811883a 	mov	r8,sp
   29550:	42000204 	addi	r8,r8,8
   29554:	a2c0010c 	andi	r11,r20,4
   29558:	583fe426 	beq	r11,zero,294ec <__alt_data_end+0xfffe94ec>
   2955c:	8ca7c83a 	sub	r19,r17,r18
   29560:	04ffe20e 	bge	zero,r19,294ec <__alt_data_end+0xfffe94ec>
   29564:	01c00404 	movi	r7,16
   29568:	3cffcc0e 	bge	r7,r19,2949c <__alt_data_end+0xfffe949c>
   2956c:	028000f4 	movhi	r10,3
   29570:	52808d04 	addi	r10,r10,564
   29574:	d9001b17 	ldw	r4,108(sp)
   29578:	da802415 	stw	r10,144(sp)
   2957c:	382b883a 	mov	r21,r7
   29580:	050001c4 	movi	r20,7
   29584:	df002017 	ldw	fp,128(sp)
   29588:	00000506 	br	295a0 <___vfiprintf_internal_r+0xdd8>
   2958c:	21400084 	addi	r5,r4,2
   29590:	42000204 	addi	r8,r8,8
   29594:	1809883a 	mov	r4,r3
   29598:	9cfffc04 	addi	r19,r19,-16
   2959c:	acffc40e 	bge	r21,r19,294b0 <__alt_data_end+0xfffe94b0>
   295a0:	10800404 	addi	r2,r2,16
   295a4:	20c00044 	addi	r3,r4,1
   295a8:	45800015 	stw	r22,0(r8)
   295ac:	45400115 	stw	r21,4(r8)
   295b0:	d8801c15 	stw	r2,112(sp)
   295b4:	d8c01b15 	stw	r3,108(sp)
   295b8:	a0fff40e 	bge	r20,r3,2958c <__alt_data_end+0xfffe958c>
   295bc:	1000041e 	bne	r2,zero,295d0 <___vfiprintf_internal_r+0xe08>
   295c0:	01400044 	movi	r5,1
   295c4:	0009883a 	mov	r4,zero
   295c8:	d811883a 	mov	r8,sp
   295cc:	003ff206 	br	29598 <__alt_data_end+0xfffe9598>
   295d0:	d9402117 	ldw	r5,132(sp)
   295d4:	d9801a04 	addi	r6,sp,104
   295d8:	e009883a 	mov	r4,fp
   295dc:	00286b40 	call	286b4 <__sprint_r.part.0>
   295e0:	103fcd1e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   295e4:	d9001b17 	ldw	r4,108(sp)
   295e8:	d8801c17 	ldw	r2,112(sp)
   295ec:	d811883a 	mov	r8,sp
   295f0:	21400044 	addi	r5,r4,1
   295f4:	003fe806 	br	29598 <__alt_data_end+0xfffe9598>
   295f8:	d9402117 	ldw	r5,132(sp)
   295fc:	d9002017 	ldw	r4,128(sp)
   29600:	d9801a04 	addi	r6,sp,104
   29604:	d9c02b15 	stw	r7,172(sp)
   29608:	db402a15 	stw	r13,168(sp)
   2960c:	00286b40 	call	286b4 <__sprint_r.part.0>
   29610:	d9c02b17 	ldw	r7,172(sp)
   29614:	db402a17 	ldw	r13,168(sp)
   29618:	103fbf1e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   2961c:	d9401b17 	ldw	r5,108(sp)
   29620:	d8801c17 	ldw	r2,112(sp)
   29624:	d811883a 	mov	r8,sp
   29628:	29800044 	addi	r6,r5,1
   2962c:	003dc406 	br	28d40 <__alt_data_end+0xfffe8d40>
   29630:	1000d21e 	bne	r2,zero,2997c <___vfiprintf_internal_r+0x11b4>
   29634:	d8c01d87 	ldb	r3,118(sp)
   29638:	18009526 	beq	r3,zero,29890 <___vfiprintf_internal_r+0x10c8>
   2963c:	00800044 	movi	r2,1
   29640:	d8c01d84 	addi	r3,sp,118
   29644:	1009883a 	mov	r4,r2
   29648:	d8c00015 	stw	r3,0(sp)
   2964c:	d8800115 	stw	r2,4(sp)
   29650:	d811883a 	mov	r8,sp
   29654:	200b883a 	mov	r5,r4
   29658:	42000204 	addi	r8,r8,8
   2965c:	21000044 	addi	r4,r4,1
   29660:	003d9706 	br	28cc0 <__alt_data_end+0xfffe8cc0>
   29664:	d9001d04 	addi	r4,sp,116
   29668:	00800084 	movi	r2,2
   2966c:	d9000015 	stw	r4,0(sp)
   29670:	d8800115 	stw	r2,4(sp)
   29674:	1809883a 	mov	r4,r3
   29678:	d811883a 	mov	r8,sp
   2967c:	200b883a 	mov	r5,r4
   29680:	42000204 	addi	r8,r8,8
   29684:	21000044 	addi	r4,r4,1
   29688:	003f4e06 	br	293c4 <__alt_data_end+0xfffe93c4>
   2968c:	d8001d85 	stb	zero,118(sp)
   29690:	48005016 	blt	r9,zero,297d4 <___vfiprintf_internal_r+0x100c>
   29694:	00ffdfc4 	movi	r3,-129
   29698:	94c4b03a 	or	r2,r18,r19
   2969c:	a0e8703a 	and	r20,r20,r3
   296a0:	103d4426 	beq	r2,zero,28bb4 <__alt_data_end+0xfffe8bb4>
   296a4:	0039883a 	mov	fp,zero
   296a8:	d9002617 	ldw	r4,152(sp)
   296ac:	dd401a04 	addi	r21,sp,104
   296b0:	908003cc 	andi	r2,r18,15
   296b4:	9806973a 	slli	r3,r19,28
   296b8:	2085883a 	add	r2,r4,r2
   296bc:	9024d13a 	srli	r18,r18,4
   296c0:	10800003 	ldbu	r2,0(r2)
   296c4:	9826d13a 	srli	r19,r19,4
   296c8:	ad7fffc4 	addi	r21,r21,-1
   296cc:	1ca4b03a 	or	r18,r3,r18
   296d0:	a8800005 	stb	r2,0(r21)
   296d4:	94c4b03a 	or	r2,r18,r19
   296d8:	103ff51e 	bne	r2,zero,296b0 <__alt_data_end+0xfffe96b0>
   296dc:	003e5906 	br	29044 <__alt_data_end+0xfffe9044>
   296e0:	d9402117 	ldw	r5,132(sp)
   296e4:	d9002017 	ldw	r4,128(sp)
   296e8:	d9801a04 	addi	r6,sp,104
   296ec:	00286b40 	call	286b4 <__sprint_r.part.0>
   296f0:	103f891e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   296f4:	d8801c17 	ldw	r2,112(sp)
   296f8:	d811883a 	mov	r8,sp
   296fc:	003f9506 	br	29554 <__alt_data_end+0xfffe9554>
   29700:	d9402117 	ldw	r5,132(sp)
   29704:	d9002017 	ldw	r4,128(sp)
   29708:	d9801a04 	addi	r6,sp,104
   2970c:	00286b40 	call	286b4 <__sprint_r.part.0>
   29710:	103f811e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   29714:	d811883a 	mov	r8,sp
   29718:	003ced06 	br	28ad0 <__alt_data_end+0xfffe8ad0>
   2971c:	d9402117 	ldw	r5,132(sp)
   29720:	d9002017 	ldw	r4,128(sp)
   29724:	d9801a04 	addi	r6,sp,104
   29728:	da402c15 	stw	r9,176(sp)
   2972c:	db802a15 	stw	r14,168(sp)
   29730:	00286b40 	call	286b4 <__sprint_r.part.0>
   29734:	da402c17 	ldw	r9,176(sp)
   29738:	db802a17 	ldw	r14,168(sp)
   2973c:	103f761e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   29740:	d9401b17 	ldw	r5,108(sp)
   29744:	d8801c17 	ldw	r2,112(sp)
   29748:	d811883a 	mov	r8,sp
   2974c:	29000044 	addi	r4,r5,1
   29750:	003d5b06 	br	28cc0 <__alt_data_end+0xfffe8cc0>
   29754:	d9402117 	ldw	r5,132(sp)
   29758:	d9002017 	ldw	r4,128(sp)
   2975c:	d9801a04 	addi	r6,sp,104
   29760:	da402c15 	stw	r9,176(sp)
   29764:	00286b40 	call	286b4 <__sprint_r.part.0>
   29768:	da402c17 	ldw	r9,176(sp)
   2976c:	103f6a1e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   29770:	d9401b17 	ldw	r5,108(sp)
   29774:	d8801c17 	ldw	r2,112(sp)
   29778:	d811883a 	mov	r8,sp
   2977c:	29000044 	addi	r4,r5,1
   29780:	003f1006 	br	293c4 <__alt_data_end+0xfffe93c4>
   29784:	1000c31e 	bne	r2,zero,29a94 <___vfiprintf_internal_r+0x12cc>
   29788:	01000044 	movi	r4,1
   2978c:	000b883a 	mov	r5,zero
   29790:	d811883a 	mov	r8,sp
   29794:	003f0d06 	br	293cc <__alt_data_end+0xfffe93cc>
   29798:	d9402117 	ldw	r5,132(sp)
   2979c:	d9002017 	ldw	r4,128(sp)
   297a0:	d9801a04 	addi	r6,sp,104
   297a4:	00286b40 	call	286b4 <__sprint_r.part.0>
   297a8:	103f5b1e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   297ac:	d9001b17 	ldw	r4,108(sp)
   297b0:	d8801c17 	ldw	r2,112(sp)
   297b4:	d811883a 	mov	r8,sp
   297b8:	21000044 	addi	r4,r4,1
   297bc:	003d8006 	br	28dc0 <__alt_data_end+0xfffe8dc0>
   297c0:	010000f4 	movhi	r4,3
   297c4:	21002904 	addi	r4,r4,164
   297c8:	d9002615 	stw	r4,152(sp)
   297cc:	d8c02215 	stw	r3,136(sp)
   297d0:	1029883a 	mov	r20,r2
   297d4:	94c4b03a 	or	r2,r18,r19
   297d8:	103fb21e 	bne	r2,zero,296a4 <__alt_data_end+0xfffe96a4>
   297dc:	0039883a 	mov	fp,zero
   297e0:	00800084 	movi	r2,2
   297e4:	003e6b06 	br	29194 <__alt_data_end+0xfffe9194>
   297e8:	da802217 	ldw	r10,136(sp)
   297ec:	d8001d85 	stb	zero,118(sp)
   297f0:	0027883a 	mov	r19,zero
   297f4:	50800104 	addi	r2,r10,4
   297f8:	54800017 	ldw	r18,0(r10)
   297fc:	483e6016 	blt	r9,zero,29180 <__alt_data_end+0xfffe9180>
   29800:	00ffdfc4 	movi	r3,-129
   29804:	d8802215 	stw	r2,136(sp)
   29808:	a0e8703a 	and	r20,r20,r3
   2980c:	0039883a 	mov	fp,zero
   29810:	903ebb26 	beq	r18,zero,29300 <__alt_data_end+0xfffe9300>
   29814:	00800244 	movi	r2,9
   29818:	14bdee36 	bltu	r2,r18,28fd4 <__alt_data_end+0xfffe8fd4>
   2981c:	003eba06 	br	29308 <__alt_data_end+0xfffe9308>
   29820:	00800c04 	movi	r2,48
   29824:	d8c01d45 	stb	r3,117(sp)
   29828:	d8801d05 	stb	r2,116(sp)
   2982c:	d8001d85 	stb	zero,118(sp)
   29830:	a0c00094 	ori	r3,r20,2
   29834:	4800a916 	blt	r9,zero,29adc <___vfiprintf_internal_r+0x1314>
   29838:	00bfdfc4 	movi	r2,-129
   2983c:	a096703a 	and	r11,r20,r2
   29840:	5d000094 	ori	r20,r11,2
   29844:	0039883a 	mov	fp,zero
   29848:	003f9706 	br	296a8 <__alt_data_end+0xfffe96a8>
   2984c:	8025883a 	mov	r18,r16
   29850:	003c2e06 	br	2890c <__alt_data_end+0xfffe890c>
   29854:	008000f4 	movhi	r2,3
   29858:	10802904 	addi	r2,r2,164
   2985c:	0039883a 	mov	fp,zero
   29860:	d8802615 	stw	r2,152(sp)
   29864:	003f9006 	br	296a8 <__alt_data_end+0xfffe96a8>
   29868:	04a5c83a 	sub	r18,zero,r18
   2986c:	07000b44 	movi	fp,45
   29870:	9004c03a 	cmpne	r2,r18,zero
   29874:	04e7c83a 	sub	r19,zero,r19
   29878:	df001d85 	stb	fp,118(sp)
   2987c:	98a7c83a 	sub	r19,r19,r2
   29880:	48009f16 	blt	r9,zero,29b00 <___vfiprintf_internal_r+0x1338>
   29884:	00bfdfc4 	movi	r2,-129
   29888:	a0a8703a 	and	r20,r20,r2
   2988c:	003dd006 	br	28fd0 <__alt_data_end+0xfffe8fd0>
   29890:	70004c26 	beq	r14,zero,299c4 <___vfiprintf_internal_r+0x11fc>
   29894:	00800084 	movi	r2,2
   29898:	d8c01d04 	addi	r3,sp,116
   2989c:	d8c00015 	stw	r3,0(sp)
   298a0:	d8800115 	stw	r2,4(sp)
   298a4:	01000044 	movi	r4,1
   298a8:	d811883a 	mov	r8,sp
   298ac:	003f7306 	br	2967c <__alt_data_end+0xfffe967c>
   298b0:	a080100c 	andi	r2,r20,64
   298b4:	da802217 	ldw	r10,136(sp)
   298b8:	103e0626 	beq	r2,zero,290d4 <__alt_data_end+0xfffe90d4>
   298bc:	5480000f 	ldh	r18,0(r10)
   298c0:	52800104 	addi	r10,r10,4
   298c4:	da802215 	stw	r10,136(sp)
   298c8:	9027d7fa 	srai	r19,r18,31
   298cc:	9805883a 	mov	r2,r19
   298d0:	003db806 	br	28fb4 <__alt_data_end+0xfffe8fb4>
   298d4:	a080040c 	andi	r2,r20,16
   298d8:	1000091e 	bne	r2,zero,29900 <___vfiprintf_internal_r+0x1138>
   298dc:	a2c0100c 	andi	r11,r20,64
   298e0:	58000726 	beq	r11,zero,29900 <___vfiprintf_internal_r+0x1138>
   298e4:	da802217 	ldw	r10,136(sp)
   298e8:	50800017 	ldw	r2,0(r10)
   298ec:	52800104 	addi	r10,r10,4
   298f0:	da802215 	stw	r10,136(sp)
   298f4:	da802317 	ldw	r10,140(sp)
   298f8:	1280000d 	sth	r10,0(r2)
   298fc:	003be706 	br	2889c <__alt_data_end+0xfffe889c>
   29900:	da802217 	ldw	r10,136(sp)
   29904:	50800017 	ldw	r2,0(r10)
   29908:	52800104 	addi	r10,r10,4
   2990c:	da802215 	stw	r10,136(sp)
   29910:	da802317 	ldw	r10,140(sp)
   29914:	12800015 	stw	r10,0(r2)
   29918:	003be006 	br	2889c <__alt_data_end+0xfffe889c>
   2991c:	a080100c 	andi	r2,r20,64
   29920:	da802217 	ldw	r10,136(sp)
   29924:	10003026 	beq	r2,zero,299e8 <___vfiprintf_internal_r+0x1220>
   29928:	5480000b 	ldhu	r18,0(r10)
   2992c:	52800104 	addi	r10,r10,4
   29930:	0027883a 	mov	r19,zero
   29934:	da802215 	stw	r10,136(sp)
   29938:	003d8006 	br	28f3c <__alt_data_end+0xfffe8f3c>
   2993c:	80c00007 	ldb	r3,0(r16)
   29940:	003c0006 	br	28944 <__alt_data_end+0xfffe8944>
   29944:	a080100c 	andi	r2,r20,64
   29948:	d8001d85 	stb	zero,118(sp)
   2994c:	da802217 	ldw	r10,136(sp)
   29950:	1000201e 	bne	r2,zero,299d4 <___vfiprintf_internal_r+0x120c>
   29954:	50800104 	addi	r2,r10,4
   29958:	54800017 	ldw	r18,0(r10)
   2995c:	0027883a 	mov	r19,zero
   29960:	483def0e 	bge	r9,zero,29120 <__alt_data_end+0xfffe9120>
   29964:	94c6b03a 	or	r3,r18,r19
   29968:	d8802215 	stw	r2,136(sp)
   2996c:	183d4e1e 	bne	r3,zero,28ea8 <__alt_data_end+0xfffe8ea8>
   29970:	0039883a 	mov	fp,zero
   29974:	0005883a 	mov	r2,zero
   29978:	003e0606 	br	29194 <__alt_data_end+0xfffe9194>
   2997c:	d9402117 	ldw	r5,132(sp)
   29980:	d9002017 	ldw	r4,128(sp)
   29984:	d9801a04 	addi	r6,sp,104
   29988:	da402c15 	stw	r9,176(sp)
   2998c:	db802a15 	stw	r14,168(sp)
   29990:	00286b40 	call	286b4 <__sprint_r.part.0>
   29994:	da402c17 	ldw	r9,176(sp)
   29998:	db802a17 	ldw	r14,168(sp)
   2999c:	103ede1e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   299a0:	d9401b17 	ldw	r5,108(sp)
   299a4:	d8801c17 	ldw	r2,112(sp)
   299a8:	d811883a 	mov	r8,sp
   299ac:	29000044 	addi	r4,r5,1
   299b0:	003e7406 	br	29384 <__alt_data_end+0xfffe9384>
   299b4:	00bfffc4 	movi	r2,-1
   299b8:	003c5806 	br	28b1c <__alt_data_end+0xfffe8b1c>
   299bc:	d811883a 	mov	r8,sp
   299c0:	003ee806 	br	29564 <__alt_data_end+0xfffe9564>
   299c4:	000b883a 	mov	r5,zero
   299c8:	01000044 	movi	r4,1
   299cc:	d811883a 	mov	r8,sp
   299d0:	003e7c06 	br	293c4 <__alt_data_end+0xfffe93c4>
   299d4:	50800104 	addi	r2,r10,4
   299d8:	5480000b 	ldhu	r18,0(r10)
   299dc:	0027883a 	mov	r19,zero
   299e0:	483dcf0e 	bge	r9,zero,29120 <__alt_data_end+0xfffe9120>
   299e4:	003fdf06 	br	29964 <__alt_data_end+0xfffe9964>
   299e8:	54800017 	ldw	r18,0(r10)
   299ec:	52800104 	addi	r10,r10,4
   299f0:	0027883a 	mov	r19,zero
   299f4:	da802215 	stw	r10,136(sp)
   299f8:	003d5006 	br	28f3c <__alt_data_end+0xfffe8f3c>
   299fc:	50800104 	addi	r2,r10,4
   29a00:	5480000b 	ldhu	r18,0(r10)
   29a04:	0027883a 	mov	r19,zero
   29a08:	483f7d0e 	bge	r9,zero,29800 <__alt_data_end+0xfffe9800>
   29a0c:	003ddc06 	br	29180 <__alt_data_end+0xfffe9180>
   29a10:	d8c02215 	stw	r3,136(sp)
   29a14:	0039883a 	mov	fp,zero
   29a18:	003ddb06 	br	29188 <__alt_data_end+0xfffe9188>
   29a1c:	028000f4 	movhi	r10,3
   29a20:	52808904 	addi	r10,r10,548
   29a24:	da802415 	stw	r10,144(sp)
   29a28:	003e8306 	br	29438 <__alt_data_end+0xfffe9438>
   29a2c:	d8801c17 	ldw	r2,112(sp)
   29a30:	dd002117 	ldw	r20,132(sp)
   29a34:	103eb926 	beq	r2,zero,2951c <__alt_data_end+0xfffe951c>
   29a38:	d9002017 	ldw	r4,128(sp)
   29a3c:	d9801a04 	addi	r6,sp,104
   29a40:	a00b883a 	mov	r5,r20
   29a44:	00286b40 	call	286b4 <__sprint_r.part.0>
   29a48:	003eb406 	br	2951c <__alt_data_end+0xfffe951c>
   29a4c:	80c00043 	ldbu	r3,1(r16)
   29a50:	a5000814 	ori	r20,r20,32
   29a54:	84000044 	addi	r16,r16,1
   29a58:	18c03fcc 	andi	r3,r3,255
   29a5c:	18c0201c 	xori	r3,r3,128
   29a60:	18ffe004 	addi	r3,r3,-128
   29a64:	003bb706 	br	28944 <__alt_data_end+0xfffe8944>
   29a68:	a809883a 	mov	r4,r21
   29a6c:	d8c02a15 	stw	r3,168(sp)
   29a70:	da002b15 	stw	r8,172(sp)
   29a74:	002272c0 	call	2272c <strlen>
   29a78:	d8c02a17 	ldw	r3,168(sp)
   29a7c:	1027883a 	mov	r19,r2
   29a80:	df001d83 	ldbu	fp,118(sp)
   29a84:	d8c02215 	stw	r3,136(sp)
   29a88:	0013883a 	mov	r9,zero
   29a8c:	da002b17 	ldw	r8,172(sp)
   29a90:	003c4d06 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   29a94:	d9402117 	ldw	r5,132(sp)
   29a98:	d9002017 	ldw	r4,128(sp)
   29a9c:	d9801a04 	addi	r6,sp,104
   29aa0:	da402c15 	stw	r9,176(sp)
   29aa4:	00286b40 	call	286b4 <__sprint_r.part.0>
   29aa8:	da402c17 	ldw	r9,176(sp)
   29aac:	103e9a1e 	bne	r2,zero,29518 <__alt_data_end+0xfffe9518>
   29ab0:	d9401b17 	ldw	r5,108(sp)
   29ab4:	d8801c17 	ldw	r2,112(sp)
   29ab8:	d811883a 	mov	r8,sp
   29abc:	29000044 	addi	r4,r5,1
   29ac0:	003e4206 	br	293cc <__alt_data_end+0xfffe93cc>
   29ac4:	d9401b17 	ldw	r5,108(sp)
   29ac8:	010000f4 	movhi	r4,3
   29acc:	21008d04 	addi	r4,r4,564
   29ad0:	d9002415 	stw	r4,144(sp)
   29ad4:	29400044 	addi	r5,r5,1
   29ad8:	003c6d06 	br	28c90 <__alt_data_end+0xfffe8c90>
   29adc:	0039883a 	mov	fp,zero
   29ae0:	00800084 	movi	r2,2
   29ae4:	10803fcc 	andi	r2,r2,255
   29ae8:	01000044 	movi	r4,1
   29aec:	11001e26 	beq	r2,r4,29b68 <___vfiprintf_internal_r+0x13a0>
   29af0:	01000084 	movi	r4,2
   29af4:	11001e1e 	bne	r2,r4,29b70 <___vfiprintf_internal_r+0x13a8>
   29af8:	1829883a 	mov	r20,r3
   29afc:	003eea06 	br	296a8 <__alt_data_end+0xfffe96a8>
   29b00:	a007883a 	mov	r3,r20
   29b04:	00800044 	movi	r2,1
   29b08:	003ff606 	br	29ae4 <__alt_data_end+0xfffe9ae4>
   29b0c:	00800184 	movi	r2,6
   29b10:	1240012e 	bgeu	r2,r9,29b18 <___vfiprintf_internal_r+0x1350>
   29b14:	1013883a 	mov	r9,r2
   29b18:	4827883a 	mov	r19,r9
   29b1c:	4825883a 	mov	r18,r9
   29b20:	48001516 	blt	r9,zero,29b78 <___vfiprintf_internal_r+0x13b0>
   29b24:	054000f4 	movhi	r21,3
   29b28:	d8c02215 	stw	r3,136(sp)
   29b2c:	ad402e04 	addi	r21,r21,184
   29b30:	003d1406 	br	28f84 <__alt_data_end+0xfffe8f84>
   29b34:	028000f4 	movhi	r10,3
   29b38:	52808904 	addi	r10,r10,548
   29b3c:	da802415 	stw	r10,144(sp)
   29b40:	200d883a 	mov	r6,r4
   29b44:	003c9106 	br	28d8c <__alt_data_end+0xfffe8d8c>
   29b48:	5021883a 	mov	r16,r10
   29b4c:	0013883a 	mov	r9,zero
   29b50:	003b7d06 	br	28948 <__alt_data_end+0xfffe8948>
   29b54:	4827883a 	mov	r19,r9
   29b58:	df001d83 	ldbu	fp,118(sp)
   29b5c:	d8c02215 	stw	r3,136(sp)
   29b60:	0013883a 	mov	r9,zero
   29b64:	003c1806 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   29b68:	1829883a 	mov	r20,r3
   29b6c:	003d1806 	br	28fd0 <__alt_data_end+0xfffe8fd0>
   29b70:	1829883a 	mov	r20,r3
   29b74:	003ccd06 	br	28eac <__alt_data_end+0xfffe8eac>
   29b78:	0025883a 	mov	r18,zero
   29b7c:	003fe906 	br	29b24 <__alt_data_end+0xfffe9b24>
   29b80:	d8802217 	ldw	r2,136(sp)
   29b84:	80c00043 	ldbu	r3,1(r16)
   29b88:	5021883a 	mov	r16,r10
   29b8c:	12400017 	ldw	r9,0(r2)
   29b90:	10800104 	addi	r2,r2,4
   29b94:	d8802215 	stw	r2,136(sp)
   29b98:	483faf0e 	bge	r9,zero,29a58 <__alt_data_end+0xfffe9a58>
   29b9c:	18c03fcc 	andi	r3,r3,255
   29ba0:	18c0201c 	xori	r3,r3,128
   29ba4:	027fffc4 	movi	r9,-1
   29ba8:	18ffe004 	addi	r3,r3,-128
   29bac:	003b6506 	br	28944 <__alt_data_end+0xfffe8944>
   29bb0:	d9c01d85 	stb	r7,118(sp)
   29bb4:	003ca006 	br	28e38 <__alt_data_end+0xfffe8e38>
   29bb8:	d9c01d85 	stb	r7,118(sp)
   29bbc:	003cad06 	br	28e74 <__alt_data_end+0xfffe8e74>
   29bc0:	d9c01d85 	stb	r7,118(sp)
   29bc4:	003d7d06 	br	291bc <__alt_data_end+0xfffe91bc>
   29bc8:	d9c01d85 	stb	r7,118(sp)
   29bcc:	003d5f06 	br	2914c <__alt_data_end+0xfffe914c>
   29bd0:	a080004c 	andi	r2,r20,1
   29bd4:	0039883a 	mov	fp,zero
   29bd8:	10000526 	beq	r2,zero,29bf0 <___vfiprintf_internal_r+0x1428>
   29bdc:	00800c04 	movi	r2,48
   29be0:	d88019c5 	stb	r2,103(sp)
   29be4:	dcc02717 	ldw	r19,156(sp)
   29be8:	dd4019c4 	addi	r21,sp,103
   29bec:	003bf606 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   29bf0:	0027883a 	mov	r19,zero
   29bf4:	dd401a04 	addi	r21,sp,104
   29bf8:	003bf306 	br	28bc8 <__alt_data_end+0xfffe8bc8>
   29bfc:	d9c01d85 	stb	r7,118(sp)
   29c00:	003dc806 	br	29324 <__alt_data_end+0xfffe9324>
   29c04:	d9c01d85 	stb	r7,118(sp)
   29c08:	003d3a06 	br	290f4 <__alt_data_end+0xfffe90f4>
   29c0c:	d9c01d85 	stb	r7,118(sp)
   29c10:	003d2a06 	br	290bc <__alt_data_end+0xfffe90bc>
   29c14:	d9c01d85 	stb	r7,118(sp)
   29c18:	003cde06 	br	28f94 <__alt_data_end+0xfffe8f94>
   29c1c:	d9c01d85 	stb	r7,118(sp)
   29c20:	003cbc06 	br	28f14 <__alt_data_end+0xfffe8f14>

00029c24 <__vfiprintf_internal>:
   29c24:	008000f4 	movhi	r2,3
   29c28:	10879904 	addi	r2,r2,7780
   29c2c:	300f883a 	mov	r7,r6
   29c30:	280d883a 	mov	r6,r5
   29c34:	200b883a 	mov	r5,r4
   29c38:	11000017 	ldw	r4,0(r2)
   29c3c:	00287c81 	jmpi	287c8 <___vfiprintf_internal_r>

00029c40 <__sbprintf>:
   29c40:	2880030b 	ldhu	r2,12(r5)
   29c44:	2ac01917 	ldw	r11,100(r5)
   29c48:	2a80038b 	ldhu	r10,14(r5)
   29c4c:	2a400717 	ldw	r9,28(r5)
   29c50:	2a000917 	ldw	r8,36(r5)
   29c54:	defee204 	addi	sp,sp,-1144
   29c58:	00c10004 	movi	r3,1024
   29c5c:	dc011a15 	stw	r16,1128(sp)
   29c60:	10bfff4c 	andi	r2,r2,65533
   29c64:	2821883a 	mov	r16,r5
   29c68:	d8cb883a 	add	r5,sp,r3
   29c6c:	dc811c15 	stw	r18,1136(sp)
   29c70:	dc411b15 	stw	r17,1132(sp)
   29c74:	dfc11d15 	stw	ra,1140(sp)
   29c78:	2025883a 	mov	r18,r4
   29c7c:	d881030d 	sth	r2,1036(sp)
   29c80:	dac11915 	stw	r11,1124(sp)
   29c84:	da81038d 	sth	r10,1038(sp)
   29c88:	da410715 	stw	r9,1052(sp)
   29c8c:	da010915 	stw	r8,1060(sp)
   29c90:	dec10015 	stw	sp,1024(sp)
   29c94:	dec10415 	stw	sp,1040(sp)
   29c98:	d8c10215 	stw	r3,1032(sp)
   29c9c:	d8c10515 	stw	r3,1044(sp)
   29ca0:	d8010615 	stw	zero,1048(sp)
   29ca4:	00287c80 	call	287c8 <___vfiprintf_internal_r>
   29ca8:	1023883a 	mov	r17,r2
   29cac:	10000416 	blt	r2,zero,29cc0 <__sbprintf+0x80>
   29cb0:	d9410004 	addi	r5,sp,1024
   29cb4:	9009883a 	mov	r4,r18
   29cb8:	002074c0 	call	2074c <_fflush_r>
   29cbc:	10000d1e 	bne	r2,zero,29cf4 <__sbprintf+0xb4>
   29cc0:	d881030b 	ldhu	r2,1036(sp)
   29cc4:	1080100c 	andi	r2,r2,64
   29cc8:	10000326 	beq	r2,zero,29cd8 <__sbprintf+0x98>
   29ccc:	8080030b 	ldhu	r2,12(r16)
   29cd0:	10801014 	ori	r2,r2,64
   29cd4:	8080030d 	sth	r2,12(r16)
   29cd8:	8805883a 	mov	r2,r17
   29cdc:	dfc11d17 	ldw	ra,1140(sp)
   29ce0:	dc811c17 	ldw	r18,1136(sp)
   29ce4:	dc411b17 	ldw	r17,1132(sp)
   29ce8:	dc011a17 	ldw	r16,1128(sp)
   29cec:	dec11e04 	addi	sp,sp,1144
   29cf0:	f800283a 	ret
   29cf4:	047fffc4 	movi	r17,-1
   29cf8:	003ff106 	br	29cc0 <__alt_data_end+0xfffe9cc0>

00029cfc <_calloc_r>:
   29cfc:	298b383a 	mul	r5,r5,r6
   29d00:	defffe04 	addi	sp,sp,-8
   29d04:	dfc00115 	stw	ra,4(sp)
   29d08:	dc000015 	stw	r16,0(sp)
   29d0c:	00218d80 	call	218d8 <_malloc_r>
   29d10:	10002926 	beq	r2,zero,29db8 <_calloc_r+0xbc>
   29d14:	11bfff17 	ldw	r6,-4(r2)
   29d18:	1021883a 	mov	r16,r2
   29d1c:	00bfff04 	movi	r2,-4
   29d20:	308c703a 	and	r6,r6,r2
   29d24:	00c00904 	movi	r3,36
   29d28:	308d883a 	add	r6,r6,r2
   29d2c:	19801636 	bltu	r3,r6,29d88 <_calloc_r+0x8c>
   29d30:	008004c4 	movi	r2,19
   29d34:	11800b2e 	bgeu	r2,r6,29d64 <_calloc_r+0x68>
   29d38:	80000015 	stw	zero,0(r16)
   29d3c:	80000115 	stw	zero,4(r16)
   29d40:	008006c4 	movi	r2,27
   29d44:	11801a2e 	bgeu	r2,r6,29db0 <_calloc_r+0xb4>
   29d48:	80000215 	stw	zero,8(r16)
   29d4c:	80000315 	stw	zero,12(r16)
   29d50:	30c0151e 	bne	r6,r3,29da8 <_calloc_r+0xac>
   29d54:	80000415 	stw	zero,16(r16)
   29d58:	80800604 	addi	r2,r16,24
   29d5c:	80000515 	stw	zero,20(r16)
   29d60:	00000106 	br	29d68 <_calloc_r+0x6c>
   29d64:	8005883a 	mov	r2,r16
   29d68:	10000015 	stw	zero,0(r2)
   29d6c:	10000115 	stw	zero,4(r2)
   29d70:	10000215 	stw	zero,8(r2)
   29d74:	8005883a 	mov	r2,r16
   29d78:	dfc00117 	ldw	ra,4(sp)
   29d7c:	dc000017 	ldw	r16,0(sp)
   29d80:	dec00204 	addi	sp,sp,8
   29d84:	f800283a 	ret
   29d88:	000b883a 	mov	r5,zero
   29d8c:	8009883a 	mov	r4,r16
   29d90:	00220e40 	call	220e4 <memset>
   29d94:	8005883a 	mov	r2,r16
   29d98:	dfc00117 	ldw	ra,4(sp)
   29d9c:	dc000017 	ldw	r16,0(sp)
   29da0:	dec00204 	addi	sp,sp,8
   29da4:	f800283a 	ret
   29da8:	80800404 	addi	r2,r16,16
   29dac:	003fee06 	br	29d68 <__alt_data_end+0xfffe9d68>
   29db0:	80800204 	addi	r2,r16,8
   29db4:	003fec06 	br	29d68 <__alt_data_end+0xfffe9d68>
   29db8:	0005883a 	mov	r2,zero
   29dbc:	003fee06 	br	29d78 <__alt_data_end+0xfffe9d78>

00029dc0 <__fputwc>:
   29dc0:	defff804 	addi	sp,sp,-32
   29dc4:	dcc00415 	stw	r19,16(sp)
   29dc8:	dc800315 	stw	r18,12(sp)
   29dcc:	dc000115 	stw	r16,4(sp)
   29dd0:	dfc00715 	stw	ra,28(sp)
   29dd4:	dd400615 	stw	r21,24(sp)
   29dd8:	dd000515 	stw	r20,20(sp)
   29ddc:	dc400215 	stw	r17,8(sp)
   29de0:	2027883a 	mov	r19,r4
   29de4:	2825883a 	mov	r18,r5
   29de8:	3021883a 	mov	r16,r6
   29dec:	0026b680 	call	26b68 <__locale_mb_cur_max>
   29df0:	00c00044 	movi	r3,1
   29df4:	10c03e26 	beq	r2,r3,29ef0 <__fputwc+0x130>
   29df8:	81c01704 	addi	r7,r16,92
   29dfc:	900d883a 	mov	r6,r18
   29e00:	d80b883a 	mov	r5,sp
   29e04:	9809883a 	mov	r4,r19
   29e08:	002a1200 	call	2a120 <_wcrtomb_r>
   29e0c:	1029883a 	mov	r20,r2
   29e10:	00bfffc4 	movi	r2,-1
   29e14:	a0802026 	beq	r20,r2,29e98 <__fputwc+0xd8>
   29e18:	d9400003 	ldbu	r5,0(sp)
   29e1c:	a0001c26 	beq	r20,zero,29e90 <__fputwc+0xd0>
   29e20:	0023883a 	mov	r17,zero
   29e24:	05400284 	movi	r21,10
   29e28:	00000906 	br	29e50 <__fputwc+0x90>
   29e2c:	80800017 	ldw	r2,0(r16)
   29e30:	11400005 	stb	r5,0(r2)
   29e34:	80c00017 	ldw	r3,0(r16)
   29e38:	18c00044 	addi	r3,r3,1
   29e3c:	80c00015 	stw	r3,0(r16)
   29e40:	8c400044 	addi	r17,r17,1
   29e44:	dc45883a 	add	r2,sp,r17
   29e48:	8d00112e 	bgeu	r17,r20,29e90 <__fputwc+0xd0>
   29e4c:	11400003 	ldbu	r5,0(r2)
   29e50:	80c00217 	ldw	r3,8(r16)
   29e54:	18ffffc4 	addi	r3,r3,-1
   29e58:	80c00215 	stw	r3,8(r16)
   29e5c:	183ff30e 	bge	r3,zero,29e2c <__alt_data_end+0xfffe9e2c>
   29e60:	80800617 	ldw	r2,24(r16)
   29e64:	18801916 	blt	r3,r2,29ecc <__fputwc+0x10c>
   29e68:	80800017 	ldw	r2,0(r16)
   29e6c:	11400005 	stb	r5,0(r2)
   29e70:	80800017 	ldw	r2,0(r16)
   29e74:	10c00003 	ldbu	r3,0(r2)
   29e78:	10800044 	addi	r2,r2,1
   29e7c:	1d402326 	beq	r3,r21,29f0c <__fputwc+0x14c>
   29e80:	80800015 	stw	r2,0(r16)
   29e84:	8c400044 	addi	r17,r17,1
   29e88:	dc45883a 	add	r2,sp,r17
   29e8c:	8d3fef36 	bltu	r17,r20,29e4c <__alt_data_end+0xfffe9e4c>
   29e90:	9005883a 	mov	r2,r18
   29e94:	00000406 	br	29ea8 <__fputwc+0xe8>
   29e98:	80c0030b 	ldhu	r3,12(r16)
   29e9c:	a005883a 	mov	r2,r20
   29ea0:	18c01014 	ori	r3,r3,64
   29ea4:	80c0030d 	sth	r3,12(r16)
   29ea8:	dfc00717 	ldw	ra,28(sp)
   29eac:	dd400617 	ldw	r21,24(sp)
   29eb0:	dd000517 	ldw	r20,20(sp)
   29eb4:	dcc00417 	ldw	r19,16(sp)
   29eb8:	dc800317 	ldw	r18,12(sp)
   29ebc:	dc400217 	ldw	r17,8(sp)
   29ec0:	dc000117 	ldw	r16,4(sp)
   29ec4:	dec00804 	addi	sp,sp,32
   29ec8:	f800283a 	ret
   29ecc:	800d883a 	mov	r6,r16
   29ed0:	29403fcc 	andi	r5,r5,255
   29ed4:	9809883a 	mov	r4,r19
   29ed8:	0029fc80 	call	29fc8 <__swbuf_r>
   29edc:	10bfffe0 	cmpeqi	r2,r2,-1
   29ee0:	10803fcc 	andi	r2,r2,255
   29ee4:	103fd626 	beq	r2,zero,29e40 <__alt_data_end+0xfffe9e40>
   29ee8:	00bfffc4 	movi	r2,-1
   29eec:	003fee06 	br	29ea8 <__alt_data_end+0xfffe9ea8>
   29ef0:	90ffffc4 	addi	r3,r18,-1
   29ef4:	01003f84 	movi	r4,254
   29ef8:	20ffbf36 	bltu	r4,r3,29df8 <__alt_data_end+0xfffe9df8>
   29efc:	900b883a 	mov	r5,r18
   29f00:	dc800005 	stb	r18,0(sp)
   29f04:	1029883a 	mov	r20,r2
   29f08:	003fc506 	br	29e20 <__alt_data_end+0xfffe9e20>
   29f0c:	800d883a 	mov	r6,r16
   29f10:	a80b883a 	mov	r5,r21
   29f14:	9809883a 	mov	r4,r19
   29f18:	0029fc80 	call	29fc8 <__swbuf_r>
   29f1c:	10bfffe0 	cmpeqi	r2,r2,-1
   29f20:	003fef06 	br	29ee0 <__alt_data_end+0xfffe9ee0>

00029f24 <_fputwc_r>:
   29f24:	3080030b 	ldhu	r2,12(r6)
   29f28:	10c8000c 	andi	r3,r2,8192
   29f2c:	1800051e 	bne	r3,zero,29f44 <_fputwc_r+0x20>
   29f30:	30c01917 	ldw	r3,100(r6)
   29f34:	10880014 	ori	r2,r2,8192
   29f38:	3080030d 	sth	r2,12(r6)
   29f3c:	18880014 	ori	r2,r3,8192
   29f40:	30801915 	stw	r2,100(r6)
   29f44:	0029dc01 	jmpi	29dc0 <__fputwc>

00029f48 <fputwc>:
   29f48:	008000f4 	movhi	r2,3
   29f4c:	defffc04 	addi	sp,sp,-16
   29f50:	10879904 	addi	r2,r2,7780
   29f54:	dc000115 	stw	r16,4(sp)
   29f58:	14000017 	ldw	r16,0(r2)
   29f5c:	dc400215 	stw	r17,8(sp)
   29f60:	dfc00315 	stw	ra,12(sp)
   29f64:	2023883a 	mov	r17,r4
   29f68:	80000226 	beq	r16,zero,29f74 <fputwc+0x2c>
   29f6c:	80800e17 	ldw	r2,56(r16)
   29f70:	10001026 	beq	r2,zero,29fb4 <fputwc+0x6c>
   29f74:	2880030b 	ldhu	r2,12(r5)
   29f78:	10c8000c 	andi	r3,r2,8192
   29f7c:	1800051e 	bne	r3,zero,29f94 <fputwc+0x4c>
   29f80:	28c01917 	ldw	r3,100(r5)
   29f84:	10880014 	ori	r2,r2,8192
   29f88:	2880030d 	sth	r2,12(r5)
   29f8c:	18880014 	ori	r2,r3,8192
   29f90:	28801915 	stw	r2,100(r5)
   29f94:	280d883a 	mov	r6,r5
   29f98:	8009883a 	mov	r4,r16
   29f9c:	880b883a 	mov	r5,r17
   29fa0:	dfc00317 	ldw	ra,12(sp)
   29fa4:	dc400217 	ldw	r17,8(sp)
   29fa8:	dc000117 	ldw	r16,4(sp)
   29fac:	dec00404 	addi	sp,sp,16
   29fb0:	0029dc01 	jmpi	29dc0 <__fputwc>
   29fb4:	8009883a 	mov	r4,r16
   29fb8:	d9400015 	stw	r5,0(sp)
   29fbc:	0020b280 	call	20b28 <__sinit>
   29fc0:	d9400017 	ldw	r5,0(sp)
   29fc4:	003feb06 	br	29f74 <__alt_data_end+0xfffe9f74>

00029fc8 <__swbuf_r>:
   29fc8:	defffb04 	addi	sp,sp,-20
   29fcc:	dcc00315 	stw	r19,12(sp)
   29fd0:	dc800215 	stw	r18,8(sp)
   29fd4:	dc000015 	stw	r16,0(sp)
   29fd8:	dfc00415 	stw	ra,16(sp)
   29fdc:	dc400115 	stw	r17,4(sp)
   29fe0:	2025883a 	mov	r18,r4
   29fe4:	2827883a 	mov	r19,r5
   29fe8:	3021883a 	mov	r16,r6
   29fec:	20000226 	beq	r4,zero,29ff8 <__swbuf_r+0x30>
   29ff0:	20800e17 	ldw	r2,56(r4)
   29ff4:	10004226 	beq	r2,zero,2a100 <__swbuf_r+0x138>
   29ff8:	80800617 	ldw	r2,24(r16)
   29ffc:	8100030b 	ldhu	r4,12(r16)
   2a000:	80800215 	stw	r2,8(r16)
   2a004:	2080020c 	andi	r2,r4,8
   2a008:	10003626 	beq	r2,zero,2a0e4 <__swbuf_r+0x11c>
   2a00c:	80c00417 	ldw	r3,16(r16)
   2a010:	18003426 	beq	r3,zero,2a0e4 <__swbuf_r+0x11c>
   2a014:	2088000c 	andi	r2,r4,8192
   2a018:	9c403fcc 	andi	r17,r19,255
   2a01c:	10001a26 	beq	r2,zero,2a088 <__swbuf_r+0xc0>
   2a020:	80800017 	ldw	r2,0(r16)
   2a024:	81000517 	ldw	r4,20(r16)
   2a028:	10c7c83a 	sub	r3,r2,r3
   2a02c:	1900200e 	bge	r3,r4,2a0b0 <__swbuf_r+0xe8>
   2a030:	18c00044 	addi	r3,r3,1
   2a034:	81000217 	ldw	r4,8(r16)
   2a038:	11400044 	addi	r5,r2,1
   2a03c:	81400015 	stw	r5,0(r16)
   2a040:	213fffc4 	addi	r4,r4,-1
   2a044:	81000215 	stw	r4,8(r16)
   2a048:	14c00005 	stb	r19,0(r2)
   2a04c:	80800517 	ldw	r2,20(r16)
   2a050:	10c01e26 	beq	r2,r3,2a0cc <__swbuf_r+0x104>
   2a054:	8080030b 	ldhu	r2,12(r16)
   2a058:	1080004c 	andi	r2,r2,1
   2a05c:	10000226 	beq	r2,zero,2a068 <__swbuf_r+0xa0>
   2a060:	00800284 	movi	r2,10
   2a064:	88801926 	beq	r17,r2,2a0cc <__swbuf_r+0x104>
   2a068:	8805883a 	mov	r2,r17
   2a06c:	dfc00417 	ldw	ra,16(sp)
   2a070:	dcc00317 	ldw	r19,12(sp)
   2a074:	dc800217 	ldw	r18,8(sp)
   2a078:	dc400117 	ldw	r17,4(sp)
   2a07c:	dc000017 	ldw	r16,0(sp)
   2a080:	dec00504 	addi	sp,sp,20
   2a084:	f800283a 	ret
   2a088:	81401917 	ldw	r5,100(r16)
   2a08c:	00b7ffc4 	movi	r2,-8193
   2a090:	21080014 	ori	r4,r4,8192
   2a094:	2884703a 	and	r2,r5,r2
   2a098:	80801915 	stw	r2,100(r16)
   2a09c:	80800017 	ldw	r2,0(r16)
   2a0a0:	8100030d 	sth	r4,12(r16)
   2a0a4:	81000517 	ldw	r4,20(r16)
   2a0a8:	10c7c83a 	sub	r3,r2,r3
   2a0ac:	193fe016 	blt	r3,r4,2a030 <__alt_data_end+0xfffea030>
   2a0b0:	800b883a 	mov	r5,r16
   2a0b4:	9009883a 	mov	r4,r18
   2a0b8:	002074c0 	call	2074c <_fflush_r>
   2a0bc:	1000071e 	bne	r2,zero,2a0dc <__swbuf_r+0x114>
   2a0c0:	80800017 	ldw	r2,0(r16)
   2a0c4:	00c00044 	movi	r3,1
   2a0c8:	003fda06 	br	2a034 <__alt_data_end+0xfffea034>
   2a0cc:	800b883a 	mov	r5,r16
   2a0d0:	9009883a 	mov	r4,r18
   2a0d4:	002074c0 	call	2074c <_fflush_r>
   2a0d8:	103fe326 	beq	r2,zero,2a068 <__alt_data_end+0xfffea068>
   2a0dc:	00bfffc4 	movi	r2,-1
   2a0e0:	003fe206 	br	2a06c <__alt_data_end+0xfffea06c>
   2a0e4:	800b883a 	mov	r5,r16
   2a0e8:	9009883a 	mov	r4,r18
   2a0ec:	0024af40 	call	24af4 <__swsetup_r>
   2a0f0:	103ffa1e 	bne	r2,zero,2a0dc <__alt_data_end+0xfffea0dc>
   2a0f4:	8100030b 	ldhu	r4,12(r16)
   2a0f8:	80c00417 	ldw	r3,16(r16)
   2a0fc:	003fc506 	br	2a014 <__alt_data_end+0xfffea014>
   2a100:	0020b280 	call	20b28 <__sinit>
   2a104:	003fbc06 	br	29ff8 <__alt_data_end+0xfffe9ff8>

0002a108 <__swbuf>:
   2a108:	008000f4 	movhi	r2,3
   2a10c:	10879904 	addi	r2,r2,7780
   2a110:	280d883a 	mov	r6,r5
   2a114:	200b883a 	mov	r5,r4
   2a118:	11000017 	ldw	r4,0(r2)
   2a11c:	0029fc81 	jmpi	29fc8 <__swbuf_r>

0002a120 <_wcrtomb_r>:
   2a120:	defff604 	addi	sp,sp,-40
   2a124:	008000f4 	movhi	r2,3
   2a128:	dc800815 	stw	r18,32(sp)
   2a12c:	dc400715 	stw	r17,28(sp)
   2a130:	dc000615 	stw	r16,24(sp)
   2a134:	10879d04 	addi	r2,r2,7796
   2a138:	dfc00915 	stw	ra,36(sp)
   2a13c:	2021883a 	mov	r16,r4
   2a140:	3823883a 	mov	r17,r7
   2a144:	14800017 	ldw	r18,0(r2)
   2a148:	28001426 	beq	r5,zero,2a19c <_wcrtomb_r+0x7c>
   2a14c:	d9400415 	stw	r5,16(sp)
   2a150:	d9800515 	stw	r6,20(sp)
   2a154:	0026b5c0 	call	26b5c <__locale_charset>
   2a158:	d9800517 	ldw	r6,20(sp)
   2a15c:	d9400417 	ldw	r5,16(sp)
   2a160:	100f883a 	mov	r7,r2
   2a164:	dc400015 	stw	r17,0(sp)
   2a168:	8009883a 	mov	r4,r16
   2a16c:	903ee83a 	callr	r18
   2a170:	00ffffc4 	movi	r3,-1
   2a174:	10c0031e 	bne	r2,r3,2a184 <_wcrtomb_r+0x64>
   2a178:	88000015 	stw	zero,0(r17)
   2a17c:	00c02284 	movi	r3,138
   2a180:	80c00015 	stw	r3,0(r16)
   2a184:	dfc00917 	ldw	ra,36(sp)
   2a188:	dc800817 	ldw	r18,32(sp)
   2a18c:	dc400717 	ldw	r17,28(sp)
   2a190:	dc000617 	ldw	r16,24(sp)
   2a194:	dec00a04 	addi	sp,sp,40
   2a198:	f800283a 	ret
   2a19c:	0026b5c0 	call	26b5c <__locale_charset>
   2a1a0:	100f883a 	mov	r7,r2
   2a1a4:	dc400015 	stw	r17,0(sp)
   2a1a8:	000d883a 	mov	r6,zero
   2a1ac:	d9400104 	addi	r5,sp,4
   2a1b0:	8009883a 	mov	r4,r16
   2a1b4:	903ee83a 	callr	r18
   2a1b8:	003fed06 	br	2a170 <__alt_data_end+0xfffea170>

0002a1bc <wcrtomb>:
   2a1bc:	defff604 	addi	sp,sp,-40
   2a1c0:	008000f4 	movhi	r2,3
   2a1c4:	dc800615 	stw	r18,24(sp)
   2a1c8:	dc400515 	stw	r17,20(sp)
   2a1cc:	10879904 	addi	r2,r2,7780
   2a1d0:	dfc00915 	stw	ra,36(sp)
   2a1d4:	dd000815 	stw	r20,32(sp)
   2a1d8:	dcc00715 	stw	r19,28(sp)
   2a1dc:	dc000415 	stw	r16,16(sp)
   2a1e0:	3025883a 	mov	r18,r6
   2a1e4:	14400017 	ldw	r17,0(r2)
   2a1e8:	20001926 	beq	r4,zero,2a250 <wcrtomb+0x94>
   2a1ec:	008000f4 	movhi	r2,3
   2a1f0:	10879d04 	addi	r2,r2,7796
   2a1f4:	15000017 	ldw	r20,0(r2)
   2a1f8:	2021883a 	mov	r16,r4
   2a1fc:	2827883a 	mov	r19,r5
   2a200:	0026b5c0 	call	26b5c <__locale_charset>
   2a204:	100f883a 	mov	r7,r2
   2a208:	dc800015 	stw	r18,0(sp)
   2a20c:	980d883a 	mov	r6,r19
   2a210:	800b883a 	mov	r5,r16
   2a214:	8809883a 	mov	r4,r17
   2a218:	a03ee83a 	callr	r20
   2a21c:	00ffffc4 	movi	r3,-1
   2a220:	10c0031e 	bne	r2,r3,2a230 <wcrtomb+0x74>
   2a224:	90000015 	stw	zero,0(r18)
   2a228:	00c02284 	movi	r3,138
   2a22c:	88c00015 	stw	r3,0(r17)
   2a230:	dfc00917 	ldw	ra,36(sp)
   2a234:	dd000817 	ldw	r20,32(sp)
   2a238:	dcc00717 	ldw	r19,28(sp)
   2a23c:	dc800617 	ldw	r18,24(sp)
   2a240:	dc400517 	ldw	r17,20(sp)
   2a244:	dc000417 	ldw	r16,16(sp)
   2a248:	dec00a04 	addi	sp,sp,40
   2a24c:	f800283a 	ret
   2a250:	008000f4 	movhi	r2,3
   2a254:	10879d04 	addi	r2,r2,7796
   2a258:	14000017 	ldw	r16,0(r2)
   2a25c:	0026b5c0 	call	26b5c <__locale_charset>
   2a260:	100f883a 	mov	r7,r2
   2a264:	dc800015 	stw	r18,0(sp)
   2a268:	000d883a 	mov	r6,zero
   2a26c:	d9400104 	addi	r5,sp,4
   2a270:	8809883a 	mov	r4,r17
   2a274:	803ee83a 	callr	r16
   2a278:	003fe806 	br	2a21c <__alt_data_end+0xfffea21c>

0002a27c <__ascii_wctomb>:
   2a27c:	28000526 	beq	r5,zero,2a294 <__ascii_wctomb+0x18>
   2a280:	00803fc4 	movi	r2,255
   2a284:	11800536 	bltu	r2,r6,2a29c <__ascii_wctomb+0x20>
   2a288:	29800005 	stb	r6,0(r5)
   2a28c:	00800044 	movi	r2,1
   2a290:	f800283a 	ret
   2a294:	0005883a 	mov	r2,zero
   2a298:	f800283a 	ret
   2a29c:	00802284 	movi	r2,138
   2a2a0:	20800015 	stw	r2,0(r4)
   2a2a4:	00bfffc4 	movi	r2,-1
   2a2a8:	f800283a 	ret

0002a2ac <_wctomb_r>:
   2a2ac:	008000f4 	movhi	r2,3
   2a2b0:	defff904 	addi	sp,sp,-28
   2a2b4:	10879d04 	addi	r2,r2,7796
   2a2b8:	dfc00615 	stw	ra,24(sp)
   2a2bc:	dc400515 	stw	r17,20(sp)
   2a2c0:	dc000415 	stw	r16,16(sp)
   2a2c4:	3823883a 	mov	r17,r7
   2a2c8:	14000017 	ldw	r16,0(r2)
   2a2cc:	d9000115 	stw	r4,4(sp)
   2a2d0:	d9400215 	stw	r5,8(sp)
   2a2d4:	d9800315 	stw	r6,12(sp)
   2a2d8:	0026b5c0 	call	26b5c <__locale_charset>
   2a2dc:	d9800317 	ldw	r6,12(sp)
   2a2e0:	d9400217 	ldw	r5,8(sp)
   2a2e4:	d9000117 	ldw	r4,4(sp)
   2a2e8:	100f883a 	mov	r7,r2
   2a2ec:	dc400015 	stw	r17,0(sp)
   2a2f0:	803ee83a 	callr	r16
   2a2f4:	dfc00617 	ldw	ra,24(sp)
   2a2f8:	dc400517 	ldw	r17,20(sp)
   2a2fc:	dc000417 	ldw	r16,16(sp)
   2a300:	dec00704 	addi	sp,sp,28
   2a304:	f800283a 	ret

0002a308 <__udivdi3>:
   2a308:	defff504 	addi	sp,sp,-44
   2a30c:	dcc00415 	stw	r19,16(sp)
   2a310:	dc000115 	stw	r16,4(sp)
   2a314:	dfc00a15 	stw	ra,40(sp)
   2a318:	df000915 	stw	fp,36(sp)
   2a31c:	ddc00815 	stw	r23,32(sp)
   2a320:	dd800715 	stw	r22,28(sp)
   2a324:	dd400615 	stw	r21,24(sp)
   2a328:	dd000515 	stw	r20,20(sp)
   2a32c:	dc800315 	stw	r18,12(sp)
   2a330:	dc400215 	stw	r17,8(sp)
   2a334:	2027883a 	mov	r19,r4
   2a338:	2821883a 	mov	r16,r5
   2a33c:	3800411e 	bne	r7,zero,2a444 <__udivdi3+0x13c>
   2a340:	3023883a 	mov	r17,r6
   2a344:	2025883a 	mov	r18,r4
   2a348:	2980522e 	bgeu	r5,r6,2a494 <__udivdi3+0x18c>
   2a34c:	00bfffd4 	movui	r2,65535
   2a350:	282d883a 	mov	r22,r5
   2a354:	1180a836 	bltu	r2,r6,2a5f8 <__udivdi3+0x2f0>
   2a358:	00803fc4 	movi	r2,255
   2a35c:	1185803a 	cmpltu	r2,r2,r6
   2a360:	100490fa 	slli	r2,r2,3
   2a364:	3086d83a 	srl	r3,r6,r2
   2a368:	010000f4 	movhi	r4,3
   2a36c:	21009104 	addi	r4,r4,580
   2a370:	20c7883a 	add	r3,r4,r3
   2a374:	18c00003 	ldbu	r3,0(r3)
   2a378:	1885883a 	add	r2,r3,r2
   2a37c:	00c00804 	movi	r3,32
   2a380:	1887c83a 	sub	r3,r3,r2
   2a384:	18000526 	beq	r3,zero,2a39c <__udivdi3+0x94>
   2a388:	80e0983a 	sll	r16,r16,r3
   2a38c:	9884d83a 	srl	r2,r19,r2
   2a390:	30e2983a 	sll	r17,r6,r3
   2a394:	98e4983a 	sll	r18,r19,r3
   2a398:	142cb03a 	or	r22,r2,r16
   2a39c:	882ad43a 	srli	r21,r17,16
   2a3a0:	b009883a 	mov	r4,r22
   2a3a4:	8d3fffcc 	andi	r20,r17,65535
   2a3a8:	a80b883a 	mov	r5,r21
   2a3ac:	002af140 	call	2af14 <__umodsi3>
   2a3b0:	b009883a 	mov	r4,r22
   2a3b4:	a80b883a 	mov	r5,r21
   2a3b8:	1027883a 	mov	r19,r2
   2a3bc:	002aeb00 	call	2aeb0 <__udivsi3>
   2a3c0:	102d883a 	mov	r22,r2
   2a3c4:	9826943a 	slli	r19,r19,16
   2a3c8:	9004d43a 	srli	r2,r18,16
   2a3cc:	a5a1383a 	mul	r16,r20,r22
   2a3d0:	14c4b03a 	or	r2,r2,r19
   2a3d4:	1400052e 	bgeu	r2,r16,2a3ec <__udivdi3+0xe4>
   2a3d8:	1445883a 	add	r2,r2,r17
   2a3dc:	b0ffffc4 	addi	r3,r22,-1
   2a3e0:	14400136 	bltu	r2,r17,2a3e8 <__udivdi3+0xe0>
   2a3e4:	14012336 	bltu	r2,r16,2a874 <__udivdi3+0x56c>
   2a3e8:	182d883a 	mov	r22,r3
   2a3ec:	1421c83a 	sub	r16,r2,r16
   2a3f0:	a80b883a 	mov	r5,r21
   2a3f4:	8009883a 	mov	r4,r16
   2a3f8:	002af140 	call	2af14 <__umodsi3>
   2a3fc:	1027883a 	mov	r19,r2
   2a400:	a80b883a 	mov	r5,r21
   2a404:	8009883a 	mov	r4,r16
   2a408:	002aeb00 	call	2aeb0 <__udivsi3>
   2a40c:	9826943a 	slli	r19,r19,16
   2a410:	a0a9383a 	mul	r20,r20,r2
   2a414:	94bfffcc 	andi	r18,r18,65535
   2a418:	94e4b03a 	or	r18,r18,r19
   2a41c:	9500052e 	bgeu	r18,r20,2a434 <__udivdi3+0x12c>
   2a420:	8ca5883a 	add	r18,r17,r18
   2a424:	10ffffc4 	addi	r3,r2,-1
   2a428:	9440f136 	bltu	r18,r17,2a7f0 <__udivdi3+0x4e8>
   2a42c:	9500f02e 	bgeu	r18,r20,2a7f0 <__udivdi3+0x4e8>
   2a430:	10bfff84 	addi	r2,r2,-2
   2a434:	b00c943a 	slli	r6,r22,16
   2a438:	0007883a 	mov	r3,zero
   2a43c:	3084b03a 	or	r2,r6,r2
   2a440:	00005906 	br	2a5a8 <__udivdi3+0x2a0>
   2a444:	29c05636 	bltu	r5,r7,2a5a0 <__udivdi3+0x298>
   2a448:	00bfffd4 	movui	r2,65535
   2a44c:	11c0622e 	bgeu	r2,r7,2a5d8 <__udivdi3+0x2d0>
   2a450:	00804034 	movhi	r2,256
   2a454:	10bfffc4 	addi	r2,r2,-1
   2a458:	11c0ee36 	bltu	r2,r7,2a814 <__udivdi3+0x50c>
   2a45c:	00800404 	movi	r2,16
   2a460:	3886d83a 	srl	r3,r7,r2
   2a464:	010000f4 	movhi	r4,3
   2a468:	21009104 	addi	r4,r4,580
   2a46c:	20c7883a 	add	r3,r4,r3
   2a470:	18c00003 	ldbu	r3,0(r3)
   2a474:	05400804 	movi	r21,32
   2a478:	1885883a 	add	r2,r3,r2
   2a47c:	a8abc83a 	sub	r21,r21,r2
   2a480:	a800621e 	bne	r21,zero,2a60c <__udivdi3+0x304>
   2a484:	3c00e936 	bltu	r7,r16,2a82c <__udivdi3+0x524>
   2a488:	9985403a 	cmpgeu	r2,r19,r6
   2a48c:	0007883a 	mov	r3,zero
   2a490:	00004506 	br	2a5a8 <__udivdi3+0x2a0>
   2a494:	3000041e 	bne	r6,zero,2a4a8 <__udivdi3+0x1a0>
   2a498:	000b883a 	mov	r5,zero
   2a49c:	01000044 	movi	r4,1
   2a4a0:	002aeb00 	call	2aeb0 <__udivsi3>
   2a4a4:	1023883a 	mov	r17,r2
   2a4a8:	00bfffd4 	movui	r2,65535
   2a4ac:	14404e2e 	bgeu	r2,r17,2a5e8 <__udivdi3+0x2e0>
   2a4b0:	00804034 	movhi	r2,256
   2a4b4:	10bfffc4 	addi	r2,r2,-1
   2a4b8:	1440d836 	bltu	r2,r17,2a81c <__udivdi3+0x514>
   2a4bc:	00800404 	movi	r2,16
   2a4c0:	8886d83a 	srl	r3,r17,r2
   2a4c4:	010000f4 	movhi	r4,3
   2a4c8:	21009104 	addi	r4,r4,580
   2a4cc:	20c7883a 	add	r3,r4,r3
   2a4d0:	18c00003 	ldbu	r3,0(r3)
   2a4d4:	1885883a 	add	r2,r3,r2
   2a4d8:	00c00804 	movi	r3,32
   2a4dc:	1887c83a 	sub	r3,r3,r2
   2a4e0:	18008f1e 	bne	r3,zero,2a720 <__udivdi3+0x418>
   2a4e4:	882ad43a 	srli	r21,r17,16
   2a4e8:	8461c83a 	sub	r16,r16,r17
   2a4ec:	8d3fffcc 	andi	r20,r17,65535
   2a4f0:	00c00044 	movi	r3,1
   2a4f4:	8009883a 	mov	r4,r16
   2a4f8:	a80b883a 	mov	r5,r21
   2a4fc:	d8c00015 	stw	r3,0(sp)
   2a500:	002af140 	call	2af14 <__umodsi3>
   2a504:	8009883a 	mov	r4,r16
   2a508:	a80b883a 	mov	r5,r21
   2a50c:	1027883a 	mov	r19,r2
   2a510:	002aeb00 	call	2aeb0 <__udivsi3>
   2a514:	9826943a 	slli	r19,r19,16
   2a518:	9008d43a 	srli	r4,r18,16
   2a51c:	1521383a 	mul	r16,r2,r20
   2a520:	102d883a 	mov	r22,r2
   2a524:	24c8b03a 	or	r4,r4,r19
   2a528:	d8c00017 	ldw	r3,0(sp)
   2a52c:	2400052e 	bgeu	r4,r16,2a544 <__udivdi3+0x23c>
   2a530:	2449883a 	add	r4,r4,r17
   2a534:	b0bfffc4 	addi	r2,r22,-1
   2a538:	24400136 	bltu	r4,r17,2a540 <__udivdi3+0x238>
   2a53c:	2400ca36 	bltu	r4,r16,2a868 <__udivdi3+0x560>
   2a540:	102d883a 	mov	r22,r2
   2a544:	2421c83a 	sub	r16,r4,r16
   2a548:	a80b883a 	mov	r5,r21
   2a54c:	8009883a 	mov	r4,r16
   2a550:	d8c00015 	stw	r3,0(sp)
   2a554:	002af140 	call	2af14 <__umodsi3>
   2a558:	1027883a 	mov	r19,r2
   2a55c:	a80b883a 	mov	r5,r21
   2a560:	8009883a 	mov	r4,r16
   2a564:	002aeb00 	call	2aeb0 <__udivsi3>
   2a568:	9826943a 	slli	r19,r19,16
   2a56c:	1529383a 	mul	r20,r2,r20
   2a570:	94bfffcc 	andi	r18,r18,65535
   2a574:	94e4b03a 	or	r18,r18,r19
   2a578:	d8c00017 	ldw	r3,0(sp)
   2a57c:	9500052e 	bgeu	r18,r20,2a594 <__udivdi3+0x28c>
   2a580:	8ca5883a 	add	r18,r17,r18
   2a584:	113fffc4 	addi	r4,r2,-1
   2a588:	94409736 	bltu	r18,r17,2a7e8 <__udivdi3+0x4e0>
   2a58c:	9500962e 	bgeu	r18,r20,2a7e8 <__udivdi3+0x4e0>
   2a590:	10bfff84 	addi	r2,r2,-2
   2a594:	b00c943a 	slli	r6,r22,16
   2a598:	3084b03a 	or	r2,r6,r2
   2a59c:	00000206 	br	2a5a8 <__udivdi3+0x2a0>
   2a5a0:	0007883a 	mov	r3,zero
   2a5a4:	0005883a 	mov	r2,zero
   2a5a8:	dfc00a17 	ldw	ra,40(sp)
   2a5ac:	df000917 	ldw	fp,36(sp)
   2a5b0:	ddc00817 	ldw	r23,32(sp)
   2a5b4:	dd800717 	ldw	r22,28(sp)
   2a5b8:	dd400617 	ldw	r21,24(sp)
   2a5bc:	dd000517 	ldw	r20,20(sp)
   2a5c0:	dcc00417 	ldw	r19,16(sp)
   2a5c4:	dc800317 	ldw	r18,12(sp)
   2a5c8:	dc400217 	ldw	r17,8(sp)
   2a5cc:	dc000117 	ldw	r16,4(sp)
   2a5d0:	dec00b04 	addi	sp,sp,44
   2a5d4:	f800283a 	ret
   2a5d8:	00803fc4 	movi	r2,255
   2a5dc:	11c5803a 	cmpltu	r2,r2,r7
   2a5e0:	100490fa 	slli	r2,r2,3
   2a5e4:	003f9e06 	br	2a460 <__alt_data_end+0xfffea460>
   2a5e8:	00803fc4 	movi	r2,255
   2a5ec:	1445803a 	cmpltu	r2,r2,r17
   2a5f0:	100490fa 	slli	r2,r2,3
   2a5f4:	003fb206 	br	2a4c0 <__alt_data_end+0xfffea4c0>
   2a5f8:	00804034 	movhi	r2,256
   2a5fc:	10bfffc4 	addi	r2,r2,-1
   2a600:	11808836 	bltu	r2,r6,2a824 <__udivdi3+0x51c>
   2a604:	00800404 	movi	r2,16
   2a608:	003f5606 	br	2a364 <__alt_data_end+0xfffea364>
   2a60c:	30aed83a 	srl	r23,r6,r2
   2a610:	3d4e983a 	sll	r7,r7,r21
   2a614:	80acd83a 	srl	r22,r16,r2
   2a618:	9884d83a 	srl	r2,r19,r2
   2a61c:	3deeb03a 	or	r23,r7,r23
   2a620:	b824d43a 	srli	r18,r23,16
   2a624:	8560983a 	sll	r16,r16,r21
   2a628:	b009883a 	mov	r4,r22
   2a62c:	900b883a 	mov	r5,r18
   2a630:	3568983a 	sll	r20,r6,r21
   2a634:	1420b03a 	or	r16,r2,r16
   2a638:	002af140 	call	2af14 <__umodsi3>
   2a63c:	b009883a 	mov	r4,r22
   2a640:	900b883a 	mov	r5,r18
   2a644:	1023883a 	mov	r17,r2
   2a648:	002aeb00 	call	2aeb0 <__udivsi3>
   2a64c:	8808943a 	slli	r4,r17,16
   2a650:	bf3fffcc 	andi	fp,r23,65535
   2a654:	8006d43a 	srli	r3,r16,16
   2a658:	e0a3383a 	mul	r17,fp,r2
   2a65c:	100d883a 	mov	r6,r2
   2a660:	1906b03a 	or	r3,r3,r4
   2a664:	1c40042e 	bgeu	r3,r17,2a678 <__udivdi3+0x370>
   2a668:	1dc7883a 	add	r3,r3,r23
   2a66c:	10bfffc4 	addi	r2,r2,-1
   2a670:	1dc0752e 	bgeu	r3,r23,2a848 <__udivdi3+0x540>
   2a674:	100d883a 	mov	r6,r2
   2a678:	1c63c83a 	sub	r17,r3,r17
   2a67c:	900b883a 	mov	r5,r18
   2a680:	8809883a 	mov	r4,r17
   2a684:	d9800015 	stw	r6,0(sp)
   2a688:	002af140 	call	2af14 <__umodsi3>
   2a68c:	102d883a 	mov	r22,r2
   2a690:	8809883a 	mov	r4,r17
   2a694:	900b883a 	mov	r5,r18
   2a698:	002aeb00 	call	2aeb0 <__udivsi3>
   2a69c:	b02c943a 	slli	r22,r22,16
   2a6a0:	e089383a 	mul	r4,fp,r2
   2a6a4:	843fffcc 	andi	r16,r16,65535
   2a6a8:	85a0b03a 	or	r16,r16,r22
   2a6ac:	d9800017 	ldw	r6,0(sp)
   2a6b0:	8100042e 	bgeu	r16,r4,2a6c4 <__udivdi3+0x3bc>
   2a6b4:	85e1883a 	add	r16,r16,r23
   2a6b8:	10ffffc4 	addi	r3,r2,-1
   2a6bc:	85c05e2e 	bgeu	r16,r23,2a838 <__udivdi3+0x530>
   2a6c0:	1805883a 	mov	r2,r3
   2a6c4:	300c943a 	slli	r6,r6,16
   2a6c8:	a17fffcc 	andi	r5,r20,65535
   2a6cc:	a028d43a 	srli	r20,r20,16
   2a6d0:	3084b03a 	or	r2,r6,r2
   2a6d4:	10ffffcc 	andi	r3,r2,65535
   2a6d8:	100cd43a 	srli	r6,r2,16
   2a6dc:	194f383a 	mul	r7,r3,r5
   2a6e0:	1d07383a 	mul	r3,r3,r20
   2a6e4:	314b383a 	mul	r5,r6,r5
   2a6e8:	3810d43a 	srli	r8,r7,16
   2a6ec:	8121c83a 	sub	r16,r16,r4
   2a6f0:	1947883a 	add	r3,r3,r5
   2a6f4:	40c7883a 	add	r3,r8,r3
   2a6f8:	350d383a 	mul	r6,r6,r20
   2a6fc:	1940022e 	bgeu	r3,r5,2a708 <__udivdi3+0x400>
   2a700:	01000074 	movhi	r4,1
   2a704:	310d883a 	add	r6,r6,r4
   2a708:	1828d43a 	srli	r20,r3,16
   2a70c:	a18d883a 	add	r6,r20,r6
   2a710:	81803e36 	bltu	r16,r6,2a80c <__udivdi3+0x504>
   2a714:	81803826 	beq	r16,r6,2a7f8 <__udivdi3+0x4f0>
   2a718:	0007883a 	mov	r3,zero
   2a71c:	003fa206 	br	2a5a8 <__alt_data_end+0xfffea5a8>
   2a720:	88e2983a 	sll	r17,r17,r3
   2a724:	80a8d83a 	srl	r20,r16,r2
   2a728:	80e0983a 	sll	r16,r16,r3
   2a72c:	882ad43a 	srli	r21,r17,16
   2a730:	9884d83a 	srl	r2,r19,r2
   2a734:	a009883a 	mov	r4,r20
   2a738:	a80b883a 	mov	r5,r21
   2a73c:	142eb03a 	or	r23,r2,r16
   2a740:	98e4983a 	sll	r18,r19,r3
   2a744:	002af140 	call	2af14 <__umodsi3>
   2a748:	a009883a 	mov	r4,r20
   2a74c:	a80b883a 	mov	r5,r21
   2a750:	1021883a 	mov	r16,r2
   2a754:	002aeb00 	call	2aeb0 <__udivsi3>
   2a758:	1039883a 	mov	fp,r2
   2a75c:	8d3fffcc 	andi	r20,r17,65535
   2a760:	8020943a 	slli	r16,r16,16
   2a764:	b804d43a 	srli	r2,r23,16
   2a768:	a72d383a 	mul	r22,r20,fp
   2a76c:	1404b03a 	or	r2,r2,r16
   2a770:	1580062e 	bgeu	r2,r22,2a78c <__udivdi3+0x484>
   2a774:	1445883a 	add	r2,r2,r17
   2a778:	e0ffffc4 	addi	r3,fp,-1
   2a77c:	14403836 	bltu	r2,r17,2a860 <__udivdi3+0x558>
   2a780:	1580372e 	bgeu	r2,r22,2a860 <__udivdi3+0x558>
   2a784:	e73fff84 	addi	fp,fp,-2
   2a788:	1445883a 	add	r2,r2,r17
   2a78c:	15adc83a 	sub	r22,r2,r22
   2a790:	a80b883a 	mov	r5,r21
   2a794:	b009883a 	mov	r4,r22
   2a798:	002af140 	call	2af14 <__umodsi3>
   2a79c:	1027883a 	mov	r19,r2
   2a7a0:	b009883a 	mov	r4,r22
   2a7a4:	a80b883a 	mov	r5,r21
   2a7a8:	002aeb00 	call	2aeb0 <__udivsi3>
   2a7ac:	9826943a 	slli	r19,r19,16
   2a7b0:	a0a1383a 	mul	r16,r20,r2
   2a7b4:	b93fffcc 	andi	r4,r23,65535
   2a7b8:	24c8b03a 	or	r4,r4,r19
   2a7bc:	2400062e 	bgeu	r4,r16,2a7d8 <__udivdi3+0x4d0>
   2a7c0:	2449883a 	add	r4,r4,r17
   2a7c4:	10ffffc4 	addi	r3,r2,-1
   2a7c8:	24402336 	bltu	r4,r17,2a858 <__udivdi3+0x550>
   2a7cc:	2400222e 	bgeu	r4,r16,2a858 <__udivdi3+0x550>
   2a7d0:	10bfff84 	addi	r2,r2,-2
   2a7d4:	2449883a 	add	r4,r4,r17
   2a7d8:	e038943a 	slli	fp,fp,16
   2a7dc:	2421c83a 	sub	r16,r4,r16
   2a7e0:	e086b03a 	or	r3,fp,r2
   2a7e4:	003f4306 	br	2a4f4 <__alt_data_end+0xfffea4f4>
   2a7e8:	2005883a 	mov	r2,r4
   2a7ec:	003f6906 	br	2a594 <__alt_data_end+0xfffea594>
   2a7f0:	1805883a 	mov	r2,r3
   2a7f4:	003f0f06 	br	2a434 <__alt_data_end+0xfffea434>
   2a7f8:	1806943a 	slli	r3,r3,16
   2a7fc:	9d66983a 	sll	r19,r19,r21
   2a800:	39ffffcc 	andi	r7,r7,65535
   2a804:	19c7883a 	add	r3,r3,r7
   2a808:	98ffc32e 	bgeu	r19,r3,2a718 <__alt_data_end+0xfffea718>
   2a80c:	10bfffc4 	addi	r2,r2,-1
   2a810:	003fc106 	br	2a718 <__alt_data_end+0xfffea718>
   2a814:	00800604 	movi	r2,24
   2a818:	003f1106 	br	2a460 <__alt_data_end+0xfffea460>
   2a81c:	00800604 	movi	r2,24
   2a820:	003f2706 	br	2a4c0 <__alt_data_end+0xfffea4c0>
   2a824:	00800604 	movi	r2,24
   2a828:	003ece06 	br	2a364 <__alt_data_end+0xfffea364>
   2a82c:	0007883a 	mov	r3,zero
   2a830:	00800044 	movi	r2,1
   2a834:	003f5c06 	br	2a5a8 <__alt_data_end+0xfffea5a8>
   2a838:	813fa12e 	bgeu	r16,r4,2a6c0 <__alt_data_end+0xfffea6c0>
   2a83c:	10bfff84 	addi	r2,r2,-2
   2a840:	85e1883a 	add	r16,r16,r23
   2a844:	003f9f06 	br	2a6c4 <__alt_data_end+0xfffea6c4>
   2a848:	1c7f8a2e 	bgeu	r3,r17,2a674 <__alt_data_end+0xfffea674>
   2a84c:	31bfff84 	addi	r6,r6,-2
   2a850:	1dc7883a 	add	r3,r3,r23
   2a854:	003f8806 	br	2a678 <__alt_data_end+0xfffea678>
   2a858:	1805883a 	mov	r2,r3
   2a85c:	003fde06 	br	2a7d8 <__alt_data_end+0xfffea7d8>
   2a860:	1839883a 	mov	fp,r3
   2a864:	003fc906 	br	2a78c <__alt_data_end+0xfffea78c>
   2a868:	b5bfff84 	addi	r22,r22,-2
   2a86c:	2449883a 	add	r4,r4,r17
   2a870:	003f3406 	br	2a544 <__alt_data_end+0xfffea544>
   2a874:	b5bfff84 	addi	r22,r22,-2
   2a878:	1445883a 	add	r2,r2,r17
   2a87c:	003edb06 	br	2a3ec <__alt_data_end+0xfffea3ec>

0002a880 <__umoddi3>:
   2a880:	defff404 	addi	sp,sp,-48
   2a884:	df000a15 	stw	fp,40(sp)
   2a888:	dc400315 	stw	r17,12(sp)
   2a88c:	dc000215 	stw	r16,8(sp)
   2a890:	dfc00b15 	stw	ra,44(sp)
   2a894:	ddc00915 	stw	r23,36(sp)
   2a898:	dd800815 	stw	r22,32(sp)
   2a89c:	dd400715 	stw	r21,28(sp)
   2a8a0:	dd000615 	stw	r20,24(sp)
   2a8a4:	dcc00515 	stw	r19,20(sp)
   2a8a8:	dc800415 	stw	r18,16(sp)
   2a8ac:	2021883a 	mov	r16,r4
   2a8b0:	2823883a 	mov	r17,r5
   2a8b4:	2839883a 	mov	fp,r5
   2a8b8:	38003c1e 	bne	r7,zero,2a9ac <__umoddi3+0x12c>
   2a8bc:	3027883a 	mov	r19,r6
   2a8c0:	2029883a 	mov	r20,r4
   2a8c4:	2980512e 	bgeu	r5,r6,2aa0c <__umoddi3+0x18c>
   2a8c8:	00bfffd4 	movui	r2,65535
   2a8cc:	11809a36 	bltu	r2,r6,2ab38 <__umoddi3+0x2b8>
   2a8d0:	01003fc4 	movi	r4,255
   2a8d4:	2189803a 	cmpltu	r4,r4,r6
   2a8d8:	200890fa 	slli	r4,r4,3
   2a8dc:	3104d83a 	srl	r2,r6,r4
   2a8e0:	00c000f4 	movhi	r3,3
   2a8e4:	18c09104 	addi	r3,r3,580
   2a8e8:	1885883a 	add	r2,r3,r2
   2a8ec:	10c00003 	ldbu	r3,0(r2)
   2a8f0:	00800804 	movi	r2,32
   2a8f4:	1909883a 	add	r4,r3,r4
   2a8f8:	1125c83a 	sub	r18,r2,r4
   2a8fc:	90000526 	beq	r18,zero,2a914 <__umoddi3+0x94>
   2a900:	8ca2983a 	sll	r17,r17,r18
   2a904:	8108d83a 	srl	r4,r16,r4
   2a908:	34a6983a 	sll	r19,r6,r18
   2a90c:	84a8983a 	sll	r20,r16,r18
   2a910:	2478b03a 	or	fp,r4,r17
   2a914:	982ed43a 	srli	r23,r19,16
   2a918:	e009883a 	mov	r4,fp
   2a91c:	9dbfffcc 	andi	r22,r19,65535
   2a920:	b80b883a 	mov	r5,r23
   2a924:	002af140 	call	2af14 <__umodsi3>
   2a928:	e009883a 	mov	r4,fp
   2a92c:	b80b883a 	mov	r5,r23
   2a930:	102b883a 	mov	r21,r2
   2a934:	002aeb00 	call	2aeb0 <__udivsi3>
   2a938:	a806943a 	slli	r3,r21,16
   2a93c:	a008d43a 	srli	r4,r20,16
   2a940:	b085383a 	mul	r2,r22,r2
   2a944:	20c8b03a 	or	r4,r4,r3
   2a948:	2080032e 	bgeu	r4,r2,2a958 <__umoddi3+0xd8>
   2a94c:	24c9883a 	add	r4,r4,r19
   2a950:	24c00136 	bltu	r4,r19,2a958 <__umoddi3+0xd8>
   2a954:	20811036 	bltu	r4,r2,2ad98 <__umoddi3+0x518>
   2a958:	20abc83a 	sub	r21,r4,r2
   2a95c:	b80b883a 	mov	r5,r23
   2a960:	a809883a 	mov	r4,r21
   2a964:	002af140 	call	2af14 <__umodsi3>
   2a968:	1023883a 	mov	r17,r2
   2a96c:	b80b883a 	mov	r5,r23
   2a970:	a809883a 	mov	r4,r21
   2a974:	002aeb00 	call	2aeb0 <__udivsi3>
   2a978:	8822943a 	slli	r17,r17,16
   2a97c:	b085383a 	mul	r2,r22,r2
   2a980:	a0ffffcc 	andi	r3,r20,65535
   2a984:	1c46b03a 	or	r3,r3,r17
   2a988:	1880042e 	bgeu	r3,r2,2a99c <__umoddi3+0x11c>
   2a98c:	1cc7883a 	add	r3,r3,r19
   2a990:	1cc00236 	bltu	r3,r19,2a99c <__umoddi3+0x11c>
   2a994:	1880012e 	bgeu	r3,r2,2a99c <__umoddi3+0x11c>
   2a998:	1cc7883a 	add	r3,r3,r19
   2a99c:	1885c83a 	sub	r2,r3,r2
   2a9a0:	1484d83a 	srl	r2,r2,r18
   2a9a4:	0007883a 	mov	r3,zero
   2a9a8:	00004f06 	br	2aae8 <__umoddi3+0x268>
   2a9ac:	29c04c36 	bltu	r5,r7,2aae0 <__umoddi3+0x260>
   2a9b0:	00bfffd4 	movui	r2,65535
   2a9b4:	11c0582e 	bgeu	r2,r7,2ab18 <__umoddi3+0x298>
   2a9b8:	00804034 	movhi	r2,256
   2a9bc:	10bfffc4 	addi	r2,r2,-1
   2a9c0:	11c0e736 	bltu	r2,r7,2ad60 <__umoddi3+0x4e0>
   2a9c4:	01000404 	movi	r4,16
   2a9c8:	3904d83a 	srl	r2,r7,r4
   2a9cc:	00c000f4 	movhi	r3,3
   2a9d0:	18c09104 	addi	r3,r3,580
   2a9d4:	1885883a 	add	r2,r3,r2
   2a9d8:	14c00003 	ldbu	r19,0(r2)
   2a9dc:	00c00804 	movi	r3,32
   2a9e0:	9927883a 	add	r19,r19,r4
   2a9e4:	1ce9c83a 	sub	r20,r3,r19
   2a9e8:	a000581e 	bne	r20,zero,2ab4c <__umoddi3+0x2cc>
   2a9ec:	3c400136 	bltu	r7,r17,2a9f4 <__umoddi3+0x174>
   2a9f0:	8180eb36 	bltu	r16,r6,2ada0 <__umoddi3+0x520>
   2a9f4:	8185c83a 	sub	r2,r16,r6
   2a9f8:	89e3c83a 	sub	r17,r17,r7
   2a9fc:	8089803a 	cmpltu	r4,r16,r2
   2aa00:	8939c83a 	sub	fp,r17,r4
   2aa04:	e007883a 	mov	r3,fp
   2aa08:	00003706 	br	2aae8 <__umoddi3+0x268>
   2aa0c:	3000041e 	bne	r6,zero,2aa20 <__umoddi3+0x1a0>
   2aa10:	000b883a 	mov	r5,zero
   2aa14:	01000044 	movi	r4,1
   2aa18:	002aeb00 	call	2aeb0 <__udivsi3>
   2aa1c:	1027883a 	mov	r19,r2
   2aa20:	00bfffd4 	movui	r2,65535
   2aa24:	14c0402e 	bgeu	r2,r19,2ab28 <__umoddi3+0x2a8>
   2aa28:	00804034 	movhi	r2,256
   2aa2c:	10bfffc4 	addi	r2,r2,-1
   2aa30:	14c0cd36 	bltu	r2,r19,2ad68 <__umoddi3+0x4e8>
   2aa34:	00800404 	movi	r2,16
   2aa38:	9886d83a 	srl	r3,r19,r2
   2aa3c:	010000f4 	movhi	r4,3
   2aa40:	21009104 	addi	r4,r4,580
   2aa44:	20c7883a 	add	r3,r4,r3
   2aa48:	18c00003 	ldbu	r3,0(r3)
   2aa4c:	1887883a 	add	r3,r3,r2
   2aa50:	00800804 	movi	r2,32
   2aa54:	10e5c83a 	sub	r18,r2,r3
   2aa58:	9000901e 	bne	r18,zero,2ac9c <__umoddi3+0x41c>
   2aa5c:	982cd43a 	srli	r22,r19,16
   2aa60:	8ce3c83a 	sub	r17,r17,r19
   2aa64:	9d7fffcc 	andi	r21,r19,65535
   2aa68:	b00b883a 	mov	r5,r22
   2aa6c:	8809883a 	mov	r4,r17
   2aa70:	002af140 	call	2af14 <__umodsi3>
   2aa74:	8809883a 	mov	r4,r17
   2aa78:	b00b883a 	mov	r5,r22
   2aa7c:	1021883a 	mov	r16,r2
   2aa80:	002aeb00 	call	2aeb0 <__udivsi3>
   2aa84:	8006943a 	slli	r3,r16,16
   2aa88:	a008d43a 	srli	r4,r20,16
   2aa8c:	1545383a 	mul	r2,r2,r21
   2aa90:	20c8b03a 	or	r4,r4,r3
   2aa94:	2080042e 	bgeu	r4,r2,2aaa8 <__umoddi3+0x228>
   2aa98:	24c9883a 	add	r4,r4,r19
   2aa9c:	24c00236 	bltu	r4,r19,2aaa8 <__umoddi3+0x228>
   2aaa0:	2080012e 	bgeu	r4,r2,2aaa8 <__umoddi3+0x228>
   2aaa4:	24c9883a 	add	r4,r4,r19
   2aaa8:	20a1c83a 	sub	r16,r4,r2
   2aaac:	b00b883a 	mov	r5,r22
   2aab0:	8009883a 	mov	r4,r16
   2aab4:	002af140 	call	2af14 <__umodsi3>
   2aab8:	1023883a 	mov	r17,r2
   2aabc:	b00b883a 	mov	r5,r22
   2aac0:	8009883a 	mov	r4,r16
   2aac4:	002aeb00 	call	2aeb0 <__udivsi3>
   2aac8:	8822943a 	slli	r17,r17,16
   2aacc:	1545383a 	mul	r2,r2,r21
   2aad0:	a53fffcc 	andi	r20,r20,65535
   2aad4:	a446b03a 	or	r3,r20,r17
   2aad8:	18bfb02e 	bgeu	r3,r2,2a99c <__alt_data_end+0xfffea99c>
   2aadc:	003fab06 	br	2a98c <__alt_data_end+0xfffea98c>
   2aae0:	2005883a 	mov	r2,r4
   2aae4:	2807883a 	mov	r3,r5
   2aae8:	dfc00b17 	ldw	ra,44(sp)
   2aaec:	df000a17 	ldw	fp,40(sp)
   2aaf0:	ddc00917 	ldw	r23,36(sp)
   2aaf4:	dd800817 	ldw	r22,32(sp)
   2aaf8:	dd400717 	ldw	r21,28(sp)
   2aafc:	dd000617 	ldw	r20,24(sp)
   2ab00:	dcc00517 	ldw	r19,20(sp)
   2ab04:	dc800417 	ldw	r18,16(sp)
   2ab08:	dc400317 	ldw	r17,12(sp)
   2ab0c:	dc000217 	ldw	r16,8(sp)
   2ab10:	dec00c04 	addi	sp,sp,48
   2ab14:	f800283a 	ret
   2ab18:	04c03fc4 	movi	r19,255
   2ab1c:	99c9803a 	cmpltu	r4,r19,r7
   2ab20:	200890fa 	slli	r4,r4,3
   2ab24:	003fa806 	br	2a9c8 <__alt_data_end+0xfffea9c8>
   2ab28:	00803fc4 	movi	r2,255
   2ab2c:	14c5803a 	cmpltu	r2,r2,r19
   2ab30:	100490fa 	slli	r2,r2,3
   2ab34:	003fc006 	br	2aa38 <__alt_data_end+0xfffeaa38>
   2ab38:	00804034 	movhi	r2,256
   2ab3c:	10bfffc4 	addi	r2,r2,-1
   2ab40:	11808b36 	bltu	r2,r6,2ad70 <__umoddi3+0x4f0>
   2ab44:	01000404 	movi	r4,16
   2ab48:	003f6406 	br	2a8dc <__alt_data_end+0xfffea8dc>
   2ab4c:	34c4d83a 	srl	r2,r6,r19
   2ab50:	3d0e983a 	sll	r7,r7,r20
   2ab54:	8cf8d83a 	srl	fp,r17,r19
   2ab58:	8d10983a 	sll	r8,r17,r20
   2ab5c:	38aab03a 	or	r21,r7,r2
   2ab60:	a82cd43a 	srli	r22,r21,16
   2ab64:	84e2d83a 	srl	r17,r16,r19
   2ab68:	e009883a 	mov	r4,fp
   2ab6c:	b00b883a 	mov	r5,r22
   2ab70:	8a22b03a 	or	r17,r17,r8
   2ab74:	3524983a 	sll	r18,r6,r20
   2ab78:	002af140 	call	2af14 <__umodsi3>
   2ab7c:	e009883a 	mov	r4,fp
   2ab80:	b00b883a 	mov	r5,r22
   2ab84:	102f883a 	mov	r23,r2
   2ab88:	002aeb00 	call	2aeb0 <__udivsi3>
   2ab8c:	100d883a 	mov	r6,r2
   2ab90:	b808943a 	slli	r4,r23,16
   2ab94:	aa3fffcc 	andi	r8,r21,65535
   2ab98:	8804d43a 	srli	r2,r17,16
   2ab9c:	41af383a 	mul	r23,r8,r6
   2aba0:	8520983a 	sll	r16,r16,r20
   2aba4:	1104b03a 	or	r2,r2,r4
   2aba8:	15c0042e 	bgeu	r2,r23,2abbc <__umoddi3+0x33c>
   2abac:	1545883a 	add	r2,r2,r21
   2abb0:	30ffffc4 	addi	r3,r6,-1
   2abb4:	1540742e 	bgeu	r2,r21,2ad88 <__umoddi3+0x508>
   2abb8:	180d883a 	mov	r6,r3
   2abbc:	15efc83a 	sub	r23,r2,r23
   2abc0:	b00b883a 	mov	r5,r22
   2abc4:	b809883a 	mov	r4,r23
   2abc8:	d9800115 	stw	r6,4(sp)
   2abcc:	da000015 	stw	r8,0(sp)
   2abd0:	002af140 	call	2af14 <__umodsi3>
   2abd4:	b00b883a 	mov	r5,r22
   2abd8:	b809883a 	mov	r4,r23
   2abdc:	1039883a 	mov	fp,r2
   2abe0:	002aeb00 	call	2aeb0 <__udivsi3>
   2abe4:	da000017 	ldw	r8,0(sp)
   2abe8:	e038943a 	slli	fp,fp,16
   2abec:	100b883a 	mov	r5,r2
   2abf0:	4089383a 	mul	r4,r8,r2
   2abf4:	8a3fffcc 	andi	r8,r17,65535
   2abf8:	4710b03a 	or	r8,r8,fp
   2abfc:	d9800117 	ldw	r6,4(sp)
   2ac00:	4100042e 	bgeu	r8,r4,2ac14 <__umoddi3+0x394>
   2ac04:	4551883a 	add	r8,r8,r21
   2ac08:	10bfffc4 	addi	r2,r2,-1
   2ac0c:	45405a2e 	bgeu	r8,r21,2ad78 <__umoddi3+0x4f8>
   2ac10:	100b883a 	mov	r5,r2
   2ac14:	300c943a 	slli	r6,r6,16
   2ac18:	91ffffcc 	andi	r7,r18,65535
   2ac1c:	9004d43a 	srli	r2,r18,16
   2ac20:	314cb03a 	or	r6,r6,r5
   2ac24:	317fffcc 	andi	r5,r6,65535
   2ac28:	300cd43a 	srli	r6,r6,16
   2ac2c:	29d3383a 	mul	r9,r5,r7
   2ac30:	288b383a 	mul	r5,r5,r2
   2ac34:	31cf383a 	mul	r7,r6,r7
   2ac38:	4806d43a 	srli	r3,r9,16
   2ac3c:	4111c83a 	sub	r8,r8,r4
   2ac40:	29cb883a 	add	r5,r5,r7
   2ac44:	194b883a 	add	r5,r3,r5
   2ac48:	3085383a 	mul	r2,r6,r2
   2ac4c:	29c0022e 	bgeu	r5,r7,2ac58 <__umoddi3+0x3d8>
   2ac50:	00c00074 	movhi	r3,1
   2ac54:	10c5883a 	add	r2,r2,r3
   2ac58:	2808d43a 	srli	r4,r5,16
   2ac5c:	280a943a 	slli	r5,r5,16
   2ac60:	4a7fffcc 	andi	r9,r9,65535
   2ac64:	2085883a 	add	r2,r4,r2
   2ac68:	2a4b883a 	add	r5,r5,r9
   2ac6c:	40803636 	bltu	r8,r2,2ad48 <__umoddi3+0x4c8>
   2ac70:	40804d26 	beq	r8,r2,2ada8 <__umoddi3+0x528>
   2ac74:	4089c83a 	sub	r4,r8,r2
   2ac78:	280f883a 	mov	r7,r5
   2ac7c:	81cfc83a 	sub	r7,r16,r7
   2ac80:	81c7803a 	cmpltu	r3,r16,r7
   2ac84:	20c7c83a 	sub	r3,r4,r3
   2ac88:	1cc4983a 	sll	r2,r3,r19
   2ac8c:	3d0ed83a 	srl	r7,r7,r20
   2ac90:	1d06d83a 	srl	r3,r3,r20
   2ac94:	11c4b03a 	or	r2,r2,r7
   2ac98:	003f9306 	br	2aae8 <__alt_data_end+0xfffeaae8>
   2ac9c:	9ca6983a 	sll	r19,r19,r18
   2aca0:	88e8d83a 	srl	r20,r17,r3
   2aca4:	80c4d83a 	srl	r2,r16,r3
   2aca8:	982cd43a 	srli	r22,r19,16
   2acac:	8ca2983a 	sll	r17,r17,r18
   2acb0:	a009883a 	mov	r4,r20
   2acb4:	b00b883a 	mov	r5,r22
   2acb8:	1478b03a 	or	fp,r2,r17
   2acbc:	002af140 	call	2af14 <__umodsi3>
   2acc0:	a009883a 	mov	r4,r20
   2acc4:	b00b883a 	mov	r5,r22
   2acc8:	1023883a 	mov	r17,r2
   2accc:	002aeb00 	call	2aeb0 <__udivsi3>
   2acd0:	9d7fffcc 	andi	r21,r19,65535
   2acd4:	880a943a 	slli	r5,r17,16
   2acd8:	e008d43a 	srli	r4,fp,16
   2acdc:	a885383a 	mul	r2,r21,r2
   2ace0:	84a8983a 	sll	r20,r16,r18
   2ace4:	2148b03a 	or	r4,r4,r5
   2ace8:	2080042e 	bgeu	r4,r2,2acfc <__umoddi3+0x47c>
   2acec:	24c9883a 	add	r4,r4,r19
   2acf0:	24c00236 	bltu	r4,r19,2acfc <__umoddi3+0x47c>
   2acf4:	2080012e 	bgeu	r4,r2,2acfc <__umoddi3+0x47c>
   2acf8:	24c9883a 	add	r4,r4,r19
   2acfc:	20a3c83a 	sub	r17,r4,r2
   2ad00:	b00b883a 	mov	r5,r22
   2ad04:	8809883a 	mov	r4,r17
   2ad08:	002af140 	call	2af14 <__umodsi3>
   2ad0c:	102f883a 	mov	r23,r2
   2ad10:	8809883a 	mov	r4,r17
   2ad14:	b00b883a 	mov	r5,r22
   2ad18:	002aeb00 	call	2aeb0 <__udivsi3>
   2ad1c:	b82e943a 	slli	r23,r23,16
   2ad20:	a885383a 	mul	r2,r21,r2
   2ad24:	e13fffcc 	andi	r4,fp,65535
   2ad28:	25c8b03a 	or	r4,r4,r23
   2ad2c:	2080042e 	bgeu	r4,r2,2ad40 <__umoddi3+0x4c0>
   2ad30:	24c9883a 	add	r4,r4,r19
   2ad34:	24c00236 	bltu	r4,r19,2ad40 <__umoddi3+0x4c0>
   2ad38:	2080012e 	bgeu	r4,r2,2ad40 <__umoddi3+0x4c0>
   2ad3c:	24c9883a 	add	r4,r4,r19
   2ad40:	20a3c83a 	sub	r17,r4,r2
   2ad44:	003f4806 	br	2aa68 <__alt_data_end+0xfffeaa68>
   2ad48:	2c8fc83a 	sub	r7,r5,r18
   2ad4c:	1545c83a 	sub	r2,r2,r21
   2ad50:	29cb803a 	cmpltu	r5,r5,r7
   2ad54:	1145c83a 	sub	r2,r2,r5
   2ad58:	4089c83a 	sub	r4,r8,r2
   2ad5c:	003fc706 	br	2ac7c <__alt_data_end+0xfffeac7c>
   2ad60:	01000604 	movi	r4,24
   2ad64:	003f1806 	br	2a9c8 <__alt_data_end+0xfffea9c8>
   2ad68:	00800604 	movi	r2,24
   2ad6c:	003f3206 	br	2aa38 <__alt_data_end+0xfffeaa38>
   2ad70:	01000604 	movi	r4,24
   2ad74:	003ed906 	br	2a8dc <__alt_data_end+0xfffea8dc>
   2ad78:	413fa52e 	bgeu	r8,r4,2ac10 <__alt_data_end+0xfffeac10>
   2ad7c:	297fff84 	addi	r5,r5,-2
   2ad80:	4551883a 	add	r8,r8,r21
   2ad84:	003fa306 	br	2ac14 <__alt_data_end+0xfffeac14>
   2ad88:	15ff8b2e 	bgeu	r2,r23,2abb8 <__alt_data_end+0xfffeabb8>
   2ad8c:	31bfff84 	addi	r6,r6,-2
   2ad90:	1545883a 	add	r2,r2,r21
   2ad94:	003f8906 	br	2abbc <__alt_data_end+0xfffeabbc>
   2ad98:	24c9883a 	add	r4,r4,r19
   2ad9c:	003eee06 	br	2a958 <__alt_data_end+0xfffea958>
   2ada0:	8005883a 	mov	r2,r16
   2ada4:	003f1706 	br	2aa04 <__alt_data_end+0xfffeaa04>
   2ada8:	817fe736 	bltu	r16,r5,2ad48 <__alt_data_end+0xfffead48>
   2adac:	280f883a 	mov	r7,r5
   2adb0:	0009883a 	mov	r4,zero
   2adb4:	003fb106 	br	2ac7c <__alt_data_end+0xfffeac7c>

0002adb8 <__divsi3>:
   2adb8:	20001b16 	blt	r4,zero,2ae28 <__divsi3+0x70>
   2adbc:	000f883a 	mov	r7,zero
   2adc0:	28001616 	blt	r5,zero,2ae1c <__divsi3+0x64>
   2adc4:	200d883a 	mov	r6,r4
   2adc8:	29001a2e 	bgeu	r5,r4,2ae34 <__divsi3+0x7c>
   2adcc:	00800804 	movi	r2,32
   2add0:	00c00044 	movi	r3,1
   2add4:	00000106 	br	2addc <__divsi3+0x24>
   2add8:	10000d26 	beq	r2,zero,2ae10 <__divsi3+0x58>
   2addc:	294b883a 	add	r5,r5,r5
   2ade0:	10bfffc4 	addi	r2,r2,-1
   2ade4:	18c7883a 	add	r3,r3,r3
   2ade8:	293ffb36 	bltu	r5,r4,2add8 <__alt_data_end+0xfffeadd8>
   2adec:	0005883a 	mov	r2,zero
   2adf0:	18000726 	beq	r3,zero,2ae10 <__divsi3+0x58>
   2adf4:	0005883a 	mov	r2,zero
   2adf8:	31400236 	bltu	r6,r5,2ae04 <__divsi3+0x4c>
   2adfc:	314dc83a 	sub	r6,r6,r5
   2ae00:	10c4b03a 	or	r2,r2,r3
   2ae04:	1806d07a 	srli	r3,r3,1
   2ae08:	280ad07a 	srli	r5,r5,1
   2ae0c:	183ffa1e 	bne	r3,zero,2adf8 <__alt_data_end+0xfffeadf8>
   2ae10:	38000126 	beq	r7,zero,2ae18 <__divsi3+0x60>
   2ae14:	0085c83a 	sub	r2,zero,r2
   2ae18:	f800283a 	ret
   2ae1c:	014bc83a 	sub	r5,zero,r5
   2ae20:	39c0005c 	xori	r7,r7,1
   2ae24:	003fe706 	br	2adc4 <__alt_data_end+0xfffeadc4>
   2ae28:	0109c83a 	sub	r4,zero,r4
   2ae2c:	01c00044 	movi	r7,1
   2ae30:	003fe306 	br	2adc0 <__alt_data_end+0xfffeadc0>
   2ae34:	00c00044 	movi	r3,1
   2ae38:	003fee06 	br	2adf4 <__alt_data_end+0xfffeadf4>

0002ae3c <__modsi3>:
   2ae3c:	20001716 	blt	r4,zero,2ae9c <__modsi3+0x60>
   2ae40:	000f883a 	mov	r7,zero
   2ae44:	2005883a 	mov	r2,r4
   2ae48:	28001216 	blt	r5,zero,2ae94 <__modsi3+0x58>
   2ae4c:	2900162e 	bgeu	r5,r4,2aea8 <__modsi3+0x6c>
   2ae50:	01800804 	movi	r6,32
   2ae54:	00c00044 	movi	r3,1
   2ae58:	00000106 	br	2ae60 <__modsi3+0x24>
   2ae5c:	30000a26 	beq	r6,zero,2ae88 <__modsi3+0x4c>
   2ae60:	294b883a 	add	r5,r5,r5
   2ae64:	31bfffc4 	addi	r6,r6,-1
   2ae68:	18c7883a 	add	r3,r3,r3
   2ae6c:	293ffb36 	bltu	r5,r4,2ae5c <__alt_data_end+0xfffeae5c>
   2ae70:	18000526 	beq	r3,zero,2ae88 <__modsi3+0x4c>
   2ae74:	1806d07a 	srli	r3,r3,1
   2ae78:	11400136 	bltu	r2,r5,2ae80 <__modsi3+0x44>
   2ae7c:	1145c83a 	sub	r2,r2,r5
   2ae80:	280ad07a 	srli	r5,r5,1
   2ae84:	183ffb1e 	bne	r3,zero,2ae74 <__alt_data_end+0xfffeae74>
   2ae88:	38000126 	beq	r7,zero,2ae90 <__modsi3+0x54>
   2ae8c:	0085c83a 	sub	r2,zero,r2
   2ae90:	f800283a 	ret
   2ae94:	014bc83a 	sub	r5,zero,r5
   2ae98:	003fec06 	br	2ae4c <__alt_data_end+0xfffeae4c>
   2ae9c:	0109c83a 	sub	r4,zero,r4
   2aea0:	01c00044 	movi	r7,1
   2aea4:	003fe706 	br	2ae44 <__alt_data_end+0xfffeae44>
   2aea8:	00c00044 	movi	r3,1
   2aeac:	003ff106 	br	2ae74 <__alt_data_end+0xfffeae74>

0002aeb0 <__udivsi3>:
   2aeb0:	200d883a 	mov	r6,r4
   2aeb4:	2900152e 	bgeu	r5,r4,2af0c <__udivsi3+0x5c>
   2aeb8:	28001416 	blt	r5,zero,2af0c <__udivsi3+0x5c>
   2aebc:	00800804 	movi	r2,32
   2aec0:	00c00044 	movi	r3,1
   2aec4:	00000206 	br	2aed0 <__udivsi3+0x20>
   2aec8:	10000e26 	beq	r2,zero,2af04 <__udivsi3+0x54>
   2aecc:	28000516 	blt	r5,zero,2aee4 <__udivsi3+0x34>
   2aed0:	294b883a 	add	r5,r5,r5
   2aed4:	10bfffc4 	addi	r2,r2,-1
   2aed8:	18c7883a 	add	r3,r3,r3
   2aedc:	293ffa36 	bltu	r5,r4,2aec8 <__alt_data_end+0xfffeaec8>
   2aee0:	18000826 	beq	r3,zero,2af04 <__udivsi3+0x54>
   2aee4:	0005883a 	mov	r2,zero
   2aee8:	31400236 	bltu	r6,r5,2aef4 <__udivsi3+0x44>
   2aeec:	314dc83a 	sub	r6,r6,r5
   2aef0:	10c4b03a 	or	r2,r2,r3
   2aef4:	1806d07a 	srli	r3,r3,1
   2aef8:	280ad07a 	srli	r5,r5,1
   2aefc:	183ffa1e 	bne	r3,zero,2aee8 <__alt_data_end+0xfffeaee8>
   2af00:	f800283a 	ret
   2af04:	0005883a 	mov	r2,zero
   2af08:	f800283a 	ret
   2af0c:	00c00044 	movi	r3,1
   2af10:	003ff406 	br	2aee4 <__alt_data_end+0xfffeaee4>

0002af14 <__umodsi3>:
   2af14:	2005883a 	mov	r2,r4
   2af18:	2900122e 	bgeu	r5,r4,2af64 <__umodsi3+0x50>
   2af1c:	28001116 	blt	r5,zero,2af64 <__umodsi3+0x50>
   2af20:	01800804 	movi	r6,32
   2af24:	00c00044 	movi	r3,1
   2af28:	00000206 	br	2af34 <__umodsi3+0x20>
   2af2c:	30000c26 	beq	r6,zero,2af60 <__umodsi3+0x4c>
   2af30:	28000516 	blt	r5,zero,2af48 <__umodsi3+0x34>
   2af34:	294b883a 	add	r5,r5,r5
   2af38:	31bfffc4 	addi	r6,r6,-1
   2af3c:	18c7883a 	add	r3,r3,r3
   2af40:	293ffa36 	bltu	r5,r4,2af2c <__alt_data_end+0xfffeaf2c>
   2af44:	18000626 	beq	r3,zero,2af60 <__umodsi3+0x4c>
   2af48:	1806d07a 	srli	r3,r3,1
   2af4c:	11400136 	bltu	r2,r5,2af54 <__umodsi3+0x40>
   2af50:	1145c83a 	sub	r2,r2,r5
   2af54:	280ad07a 	srli	r5,r5,1
   2af58:	183ffb1e 	bne	r3,zero,2af48 <__alt_data_end+0xfffeaf48>
   2af5c:	f800283a 	ret
   2af60:	f800283a 	ret
   2af64:	00c00044 	movi	r3,1
   2af68:	003ff706 	br	2af48 <__alt_data_end+0xfffeaf48>

0002af6c <__adddf3>:
   2af6c:	02c00434 	movhi	r11,16
   2af70:	5affffc4 	addi	r11,r11,-1
   2af74:	2806d7fa 	srli	r3,r5,31
   2af78:	2ad4703a 	and	r10,r5,r11
   2af7c:	3ad2703a 	and	r9,r7,r11
   2af80:	3804d53a 	srli	r2,r7,20
   2af84:	3018d77a 	srli	r12,r6,29
   2af88:	280ad53a 	srli	r5,r5,20
   2af8c:	501490fa 	slli	r10,r10,3
   2af90:	2010d77a 	srli	r8,r4,29
   2af94:	481290fa 	slli	r9,r9,3
   2af98:	380ed7fa 	srli	r7,r7,31
   2af9c:	defffb04 	addi	sp,sp,-20
   2afa0:	dc800215 	stw	r18,8(sp)
   2afa4:	dc400115 	stw	r17,4(sp)
   2afa8:	dc000015 	stw	r16,0(sp)
   2afac:	dfc00415 	stw	ra,16(sp)
   2afb0:	dcc00315 	stw	r19,12(sp)
   2afb4:	1c803fcc 	andi	r18,r3,255
   2afb8:	2c01ffcc 	andi	r16,r5,2047
   2afbc:	5210b03a 	or	r8,r10,r8
   2afc0:	202290fa 	slli	r17,r4,3
   2afc4:	1081ffcc 	andi	r2,r2,2047
   2afc8:	4b12b03a 	or	r9,r9,r12
   2afcc:	300c90fa 	slli	r6,r6,3
   2afd0:	91c07526 	beq	r18,r7,2b1a8 <__adddf3+0x23c>
   2afd4:	8087c83a 	sub	r3,r16,r2
   2afd8:	00c0ab0e 	bge	zero,r3,2b288 <__adddf3+0x31c>
   2afdc:	10002a1e 	bne	r2,zero,2b088 <__adddf3+0x11c>
   2afe0:	4984b03a 	or	r2,r9,r6
   2afe4:	1000961e 	bne	r2,zero,2b240 <__adddf3+0x2d4>
   2afe8:	888001cc 	andi	r2,r17,7
   2afec:	10000726 	beq	r2,zero,2b00c <__adddf3+0xa0>
   2aff0:	888003cc 	andi	r2,r17,15
   2aff4:	00c00104 	movi	r3,4
   2aff8:	10c00426 	beq	r2,r3,2b00c <__adddf3+0xa0>
   2affc:	88c7883a 	add	r3,r17,r3
   2b000:	1c63803a 	cmpltu	r17,r3,r17
   2b004:	4451883a 	add	r8,r8,r17
   2b008:	1823883a 	mov	r17,r3
   2b00c:	4080202c 	andhi	r2,r8,128
   2b010:	10005926 	beq	r2,zero,2b178 <__adddf3+0x20c>
   2b014:	84000044 	addi	r16,r16,1
   2b018:	0081ffc4 	movi	r2,2047
   2b01c:	8080ba26 	beq	r16,r2,2b308 <__adddf3+0x39c>
   2b020:	00bfe034 	movhi	r2,65408
   2b024:	10bfffc4 	addi	r2,r2,-1
   2b028:	4090703a 	and	r8,r8,r2
   2b02c:	4004977a 	slli	r2,r8,29
   2b030:	4010927a 	slli	r8,r8,9
   2b034:	8822d0fa 	srli	r17,r17,3
   2b038:	8401ffcc 	andi	r16,r16,2047
   2b03c:	4010d33a 	srli	r8,r8,12
   2b040:	9007883a 	mov	r3,r18
   2b044:	1444b03a 	or	r2,r2,r17
   2b048:	8401ffcc 	andi	r16,r16,2047
   2b04c:	8020953a 	slli	r16,r16,20
   2b050:	18c03fcc 	andi	r3,r3,255
   2b054:	01000434 	movhi	r4,16
   2b058:	213fffc4 	addi	r4,r4,-1
   2b05c:	180697fa 	slli	r3,r3,31
   2b060:	4110703a 	and	r8,r8,r4
   2b064:	4410b03a 	or	r8,r8,r16
   2b068:	40c6b03a 	or	r3,r8,r3
   2b06c:	dfc00417 	ldw	ra,16(sp)
   2b070:	dcc00317 	ldw	r19,12(sp)
   2b074:	dc800217 	ldw	r18,8(sp)
   2b078:	dc400117 	ldw	r17,4(sp)
   2b07c:	dc000017 	ldw	r16,0(sp)
   2b080:	dec00504 	addi	sp,sp,20
   2b084:	f800283a 	ret
   2b088:	0081ffc4 	movi	r2,2047
   2b08c:	80bfd626 	beq	r16,r2,2afe8 <__alt_data_end+0xfffeafe8>
   2b090:	4a402034 	orhi	r9,r9,128
   2b094:	00800e04 	movi	r2,56
   2b098:	10c09f16 	blt	r2,r3,2b318 <__adddf3+0x3ac>
   2b09c:	008007c4 	movi	r2,31
   2b0a0:	10c0c216 	blt	r2,r3,2b3ac <__adddf3+0x440>
   2b0a4:	00800804 	movi	r2,32
   2b0a8:	10c5c83a 	sub	r2,r2,r3
   2b0ac:	488a983a 	sll	r5,r9,r2
   2b0b0:	30c8d83a 	srl	r4,r6,r3
   2b0b4:	3084983a 	sll	r2,r6,r2
   2b0b8:	48c6d83a 	srl	r3,r9,r3
   2b0bc:	290cb03a 	or	r6,r5,r4
   2b0c0:	1004c03a 	cmpne	r2,r2,zero
   2b0c4:	308cb03a 	or	r6,r6,r2
   2b0c8:	898dc83a 	sub	r6,r17,r6
   2b0cc:	89a3803a 	cmpltu	r17,r17,r6
   2b0d0:	40d1c83a 	sub	r8,r8,r3
   2b0d4:	4451c83a 	sub	r8,r8,r17
   2b0d8:	3023883a 	mov	r17,r6
   2b0dc:	4080202c 	andhi	r2,r8,128
   2b0e0:	10002326 	beq	r2,zero,2b170 <__adddf3+0x204>
   2b0e4:	04c02034 	movhi	r19,128
   2b0e8:	9cffffc4 	addi	r19,r19,-1
   2b0ec:	44e6703a 	and	r19,r8,r19
   2b0f0:	98007626 	beq	r19,zero,2b2cc <__adddf3+0x360>
   2b0f4:	9809883a 	mov	r4,r19
   2b0f8:	002d5700 	call	2d570 <__clzsi2>
   2b0fc:	10fffe04 	addi	r3,r2,-8
   2b100:	010007c4 	movi	r4,31
   2b104:	20c07716 	blt	r4,r3,2b2e4 <__adddf3+0x378>
   2b108:	00800804 	movi	r2,32
   2b10c:	10c5c83a 	sub	r2,r2,r3
   2b110:	8884d83a 	srl	r2,r17,r2
   2b114:	98d0983a 	sll	r8,r19,r3
   2b118:	88e2983a 	sll	r17,r17,r3
   2b11c:	1204b03a 	or	r2,r2,r8
   2b120:	1c007416 	blt	r3,r16,2b2f4 <__adddf3+0x388>
   2b124:	1c21c83a 	sub	r16,r3,r16
   2b128:	82000044 	addi	r8,r16,1
   2b12c:	00c007c4 	movi	r3,31
   2b130:	1a009116 	blt	r3,r8,2b378 <__adddf3+0x40c>
   2b134:	00c00804 	movi	r3,32
   2b138:	1a07c83a 	sub	r3,r3,r8
   2b13c:	8a08d83a 	srl	r4,r17,r8
   2b140:	88e2983a 	sll	r17,r17,r3
   2b144:	10c6983a 	sll	r3,r2,r3
   2b148:	1210d83a 	srl	r8,r2,r8
   2b14c:	8804c03a 	cmpne	r2,r17,zero
   2b150:	1906b03a 	or	r3,r3,r4
   2b154:	18a2b03a 	or	r17,r3,r2
   2b158:	0021883a 	mov	r16,zero
   2b15c:	003fa206 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b160:	1890b03a 	or	r8,r3,r2
   2b164:	40017d26 	beq	r8,zero,2b75c <__adddf3+0x7f0>
   2b168:	1011883a 	mov	r8,r2
   2b16c:	1823883a 	mov	r17,r3
   2b170:	888001cc 	andi	r2,r17,7
   2b174:	103f9e1e 	bne	r2,zero,2aff0 <__alt_data_end+0xfffeaff0>
   2b178:	4004977a 	slli	r2,r8,29
   2b17c:	8822d0fa 	srli	r17,r17,3
   2b180:	4010d0fa 	srli	r8,r8,3
   2b184:	9007883a 	mov	r3,r18
   2b188:	1444b03a 	or	r2,r2,r17
   2b18c:	0101ffc4 	movi	r4,2047
   2b190:	81002426 	beq	r16,r4,2b224 <__adddf3+0x2b8>
   2b194:	8120703a 	and	r16,r16,r4
   2b198:	01000434 	movhi	r4,16
   2b19c:	213fffc4 	addi	r4,r4,-1
   2b1a0:	4110703a 	and	r8,r8,r4
   2b1a4:	003fa806 	br	2b048 <__alt_data_end+0xfffeb048>
   2b1a8:	8089c83a 	sub	r4,r16,r2
   2b1ac:	01005e0e 	bge	zero,r4,2b328 <__adddf3+0x3bc>
   2b1b0:	10002b26 	beq	r2,zero,2b260 <__adddf3+0x2f4>
   2b1b4:	0081ffc4 	movi	r2,2047
   2b1b8:	80bf8b26 	beq	r16,r2,2afe8 <__alt_data_end+0xfffeafe8>
   2b1bc:	4a402034 	orhi	r9,r9,128
   2b1c0:	00800e04 	movi	r2,56
   2b1c4:	1100a40e 	bge	r2,r4,2b458 <__adddf3+0x4ec>
   2b1c8:	498cb03a 	or	r6,r9,r6
   2b1cc:	300ac03a 	cmpne	r5,r6,zero
   2b1d0:	0013883a 	mov	r9,zero
   2b1d4:	2c4b883a 	add	r5,r5,r17
   2b1d8:	2c63803a 	cmpltu	r17,r5,r17
   2b1dc:	4a11883a 	add	r8,r9,r8
   2b1e0:	8a11883a 	add	r8,r17,r8
   2b1e4:	2823883a 	mov	r17,r5
   2b1e8:	4080202c 	andhi	r2,r8,128
   2b1ec:	103fe026 	beq	r2,zero,2b170 <__alt_data_end+0xfffeb170>
   2b1f0:	84000044 	addi	r16,r16,1
   2b1f4:	0081ffc4 	movi	r2,2047
   2b1f8:	8080d226 	beq	r16,r2,2b544 <__adddf3+0x5d8>
   2b1fc:	00bfe034 	movhi	r2,65408
   2b200:	10bfffc4 	addi	r2,r2,-1
   2b204:	4090703a 	and	r8,r8,r2
   2b208:	880ad07a 	srli	r5,r17,1
   2b20c:	400897fa 	slli	r4,r8,31
   2b210:	88c0004c 	andi	r3,r17,1
   2b214:	28e2b03a 	or	r17,r5,r3
   2b218:	4010d07a 	srli	r8,r8,1
   2b21c:	2462b03a 	or	r17,r4,r17
   2b220:	003f7106 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b224:	4088b03a 	or	r4,r8,r2
   2b228:	20014526 	beq	r4,zero,2b740 <__adddf3+0x7d4>
   2b22c:	01000434 	movhi	r4,16
   2b230:	42000234 	orhi	r8,r8,8
   2b234:	213fffc4 	addi	r4,r4,-1
   2b238:	4110703a 	and	r8,r8,r4
   2b23c:	003f8206 	br	2b048 <__alt_data_end+0xfffeb048>
   2b240:	18ffffc4 	addi	r3,r3,-1
   2b244:	1800491e 	bne	r3,zero,2b36c <__adddf3+0x400>
   2b248:	898bc83a 	sub	r5,r17,r6
   2b24c:	8963803a 	cmpltu	r17,r17,r5
   2b250:	4251c83a 	sub	r8,r8,r9
   2b254:	4451c83a 	sub	r8,r8,r17
   2b258:	2823883a 	mov	r17,r5
   2b25c:	003f9f06 	br	2b0dc <__alt_data_end+0xfffeb0dc>
   2b260:	4984b03a 	or	r2,r9,r6
   2b264:	103f6026 	beq	r2,zero,2afe8 <__alt_data_end+0xfffeafe8>
   2b268:	213fffc4 	addi	r4,r4,-1
   2b26c:	2000931e 	bne	r4,zero,2b4bc <__adddf3+0x550>
   2b270:	898d883a 	add	r6,r17,r6
   2b274:	3463803a 	cmpltu	r17,r6,r17
   2b278:	4251883a 	add	r8,r8,r9
   2b27c:	8a11883a 	add	r8,r17,r8
   2b280:	3023883a 	mov	r17,r6
   2b284:	003fd806 	br	2b1e8 <__alt_data_end+0xfffeb1e8>
   2b288:	1800541e 	bne	r3,zero,2b3dc <__adddf3+0x470>
   2b28c:	80800044 	addi	r2,r16,1
   2b290:	1081ffcc 	andi	r2,r2,2047
   2b294:	00c00044 	movi	r3,1
   2b298:	1880a00e 	bge	r3,r2,2b51c <__adddf3+0x5b0>
   2b29c:	8989c83a 	sub	r4,r17,r6
   2b2a0:	8905803a 	cmpltu	r2,r17,r4
   2b2a4:	4267c83a 	sub	r19,r8,r9
   2b2a8:	98a7c83a 	sub	r19,r19,r2
   2b2ac:	9880202c 	andhi	r2,r19,128
   2b2b0:	10006326 	beq	r2,zero,2b440 <__adddf3+0x4d4>
   2b2b4:	3463c83a 	sub	r17,r6,r17
   2b2b8:	4a07c83a 	sub	r3,r9,r8
   2b2bc:	344d803a 	cmpltu	r6,r6,r17
   2b2c0:	19a7c83a 	sub	r19,r3,r6
   2b2c4:	3825883a 	mov	r18,r7
   2b2c8:	983f8a1e 	bne	r19,zero,2b0f4 <__alt_data_end+0xfffeb0f4>
   2b2cc:	8809883a 	mov	r4,r17
   2b2d0:	002d5700 	call	2d570 <__clzsi2>
   2b2d4:	10800804 	addi	r2,r2,32
   2b2d8:	10fffe04 	addi	r3,r2,-8
   2b2dc:	010007c4 	movi	r4,31
   2b2e0:	20ff890e 	bge	r4,r3,2b108 <__alt_data_end+0xfffeb108>
   2b2e4:	10bff604 	addi	r2,r2,-40
   2b2e8:	8884983a 	sll	r2,r17,r2
   2b2ec:	0023883a 	mov	r17,zero
   2b2f0:	1c3f8c0e 	bge	r3,r16,2b124 <__alt_data_end+0xfffeb124>
   2b2f4:	023fe034 	movhi	r8,65408
   2b2f8:	423fffc4 	addi	r8,r8,-1
   2b2fc:	80e1c83a 	sub	r16,r16,r3
   2b300:	1210703a 	and	r8,r2,r8
   2b304:	003f3806 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b308:	9007883a 	mov	r3,r18
   2b30c:	0011883a 	mov	r8,zero
   2b310:	0005883a 	mov	r2,zero
   2b314:	003f4c06 	br	2b048 <__alt_data_end+0xfffeb048>
   2b318:	498cb03a 	or	r6,r9,r6
   2b31c:	300cc03a 	cmpne	r6,r6,zero
   2b320:	0007883a 	mov	r3,zero
   2b324:	003f6806 	br	2b0c8 <__alt_data_end+0xfffeb0c8>
   2b328:	20009c1e 	bne	r4,zero,2b59c <__adddf3+0x630>
   2b32c:	80800044 	addi	r2,r16,1
   2b330:	1141ffcc 	andi	r5,r2,2047
   2b334:	01000044 	movi	r4,1
   2b338:	2140670e 	bge	r4,r5,2b4d8 <__adddf3+0x56c>
   2b33c:	0101ffc4 	movi	r4,2047
   2b340:	11007f26 	beq	r2,r4,2b540 <__adddf3+0x5d4>
   2b344:	898d883a 	add	r6,r17,r6
   2b348:	4247883a 	add	r3,r8,r9
   2b34c:	3451803a 	cmpltu	r8,r6,r17
   2b350:	40d1883a 	add	r8,r8,r3
   2b354:	402297fa 	slli	r17,r8,31
   2b358:	300cd07a 	srli	r6,r6,1
   2b35c:	4010d07a 	srli	r8,r8,1
   2b360:	1021883a 	mov	r16,r2
   2b364:	89a2b03a 	or	r17,r17,r6
   2b368:	003f1f06 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b36c:	0081ffc4 	movi	r2,2047
   2b370:	80bf481e 	bne	r16,r2,2b094 <__alt_data_end+0xfffeb094>
   2b374:	003f1c06 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b378:	843ff844 	addi	r16,r16,-31
   2b37c:	01000804 	movi	r4,32
   2b380:	1406d83a 	srl	r3,r2,r16
   2b384:	41005026 	beq	r8,r4,2b4c8 <__adddf3+0x55c>
   2b388:	01001004 	movi	r4,64
   2b38c:	2211c83a 	sub	r8,r4,r8
   2b390:	1204983a 	sll	r2,r2,r8
   2b394:	88a2b03a 	or	r17,r17,r2
   2b398:	8822c03a 	cmpne	r17,r17,zero
   2b39c:	1c62b03a 	or	r17,r3,r17
   2b3a0:	0011883a 	mov	r8,zero
   2b3a4:	0021883a 	mov	r16,zero
   2b3a8:	003f7106 	br	2b170 <__alt_data_end+0xfffeb170>
   2b3ac:	193ff804 	addi	r4,r3,-32
   2b3b0:	00800804 	movi	r2,32
   2b3b4:	4908d83a 	srl	r4,r9,r4
   2b3b8:	18804526 	beq	r3,r2,2b4d0 <__adddf3+0x564>
   2b3bc:	00801004 	movi	r2,64
   2b3c0:	10c5c83a 	sub	r2,r2,r3
   2b3c4:	4886983a 	sll	r3,r9,r2
   2b3c8:	198cb03a 	or	r6,r3,r6
   2b3cc:	300cc03a 	cmpne	r6,r6,zero
   2b3d0:	218cb03a 	or	r6,r4,r6
   2b3d4:	0007883a 	mov	r3,zero
   2b3d8:	003f3b06 	br	2b0c8 <__alt_data_end+0xfffeb0c8>
   2b3dc:	80002a26 	beq	r16,zero,2b488 <__adddf3+0x51c>
   2b3e0:	0101ffc4 	movi	r4,2047
   2b3e4:	11006826 	beq	r2,r4,2b588 <__adddf3+0x61c>
   2b3e8:	00c7c83a 	sub	r3,zero,r3
   2b3ec:	42002034 	orhi	r8,r8,128
   2b3f0:	01000e04 	movi	r4,56
   2b3f4:	20c07c16 	blt	r4,r3,2b5e8 <__adddf3+0x67c>
   2b3f8:	010007c4 	movi	r4,31
   2b3fc:	20c0da16 	blt	r4,r3,2b768 <__adddf3+0x7fc>
   2b400:	01000804 	movi	r4,32
   2b404:	20c9c83a 	sub	r4,r4,r3
   2b408:	4114983a 	sll	r10,r8,r4
   2b40c:	88cad83a 	srl	r5,r17,r3
   2b410:	8908983a 	sll	r4,r17,r4
   2b414:	40c6d83a 	srl	r3,r8,r3
   2b418:	5162b03a 	or	r17,r10,r5
   2b41c:	2008c03a 	cmpne	r4,r4,zero
   2b420:	8922b03a 	or	r17,r17,r4
   2b424:	3463c83a 	sub	r17,r6,r17
   2b428:	48c7c83a 	sub	r3,r9,r3
   2b42c:	344d803a 	cmpltu	r6,r6,r17
   2b430:	1991c83a 	sub	r8,r3,r6
   2b434:	1021883a 	mov	r16,r2
   2b438:	3825883a 	mov	r18,r7
   2b43c:	003f2706 	br	2b0dc <__alt_data_end+0xfffeb0dc>
   2b440:	24d0b03a 	or	r8,r4,r19
   2b444:	40001b1e 	bne	r8,zero,2b4b4 <__adddf3+0x548>
   2b448:	0005883a 	mov	r2,zero
   2b44c:	0007883a 	mov	r3,zero
   2b450:	0021883a 	mov	r16,zero
   2b454:	003f4d06 	br	2b18c <__alt_data_end+0xfffeb18c>
   2b458:	008007c4 	movi	r2,31
   2b45c:	11003c16 	blt	r2,r4,2b550 <__adddf3+0x5e4>
   2b460:	00800804 	movi	r2,32
   2b464:	1105c83a 	sub	r2,r2,r4
   2b468:	488e983a 	sll	r7,r9,r2
   2b46c:	310ad83a 	srl	r5,r6,r4
   2b470:	3084983a 	sll	r2,r6,r2
   2b474:	4912d83a 	srl	r9,r9,r4
   2b478:	394ab03a 	or	r5,r7,r5
   2b47c:	1004c03a 	cmpne	r2,r2,zero
   2b480:	288ab03a 	or	r5,r5,r2
   2b484:	003f5306 	br	2b1d4 <__alt_data_end+0xfffeb1d4>
   2b488:	4448b03a 	or	r4,r8,r17
   2b48c:	20003e26 	beq	r4,zero,2b588 <__adddf3+0x61c>
   2b490:	00c6303a 	nor	r3,zero,r3
   2b494:	18003a1e 	bne	r3,zero,2b580 <__adddf3+0x614>
   2b498:	3463c83a 	sub	r17,r6,r17
   2b49c:	4a07c83a 	sub	r3,r9,r8
   2b4a0:	344d803a 	cmpltu	r6,r6,r17
   2b4a4:	1991c83a 	sub	r8,r3,r6
   2b4a8:	1021883a 	mov	r16,r2
   2b4ac:	3825883a 	mov	r18,r7
   2b4b0:	003f0a06 	br	2b0dc <__alt_data_end+0xfffeb0dc>
   2b4b4:	2023883a 	mov	r17,r4
   2b4b8:	003f0d06 	br	2b0f0 <__alt_data_end+0xfffeb0f0>
   2b4bc:	0081ffc4 	movi	r2,2047
   2b4c0:	80bf3f1e 	bne	r16,r2,2b1c0 <__alt_data_end+0xfffeb1c0>
   2b4c4:	003ec806 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b4c8:	0005883a 	mov	r2,zero
   2b4cc:	003fb106 	br	2b394 <__alt_data_end+0xfffeb394>
   2b4d0:	0007883a 	mov	r3,zero
   2b4d4:	003fbc06 	br	2b3c8 <__alt_data_end+0xfffeb3c8>
   2b4d8:	4444b03a 	or	r2,r8,r17
   2b4dc:	8000871e 	bne	r16,zero,2b6fc <__adddf3+0x790>
   2b4e0:	1000ba26 	beq	r2,zero,2b7cc <__adddf3+0x860>
   2b4e4:	4984b03a 	or	r2,r9,r6
   2b4e8:	103ebf26 	beq	r2,zero,2afe8 <__alt_data_end+0xfffeafe8>
   2b4ec:	8985883a 	add	r2,r17,r6
   2b4f0:	4247883a 	add	r3,r8,r9
   2b4f4:	1451803a 	cmpltu	r8,r2,r17
   2b4f8:	40d1883a 	add	r8,r8,r3
   2b4fc:	40c0202c 	andhi	r3,r8,128
   2b500:	1023883a 	mov	r17,r2
   2b504:	183f1a26 	beq	r3,zero,2b170 <__alt_data_end+0xfffeb170>
   2b508:	00bfe034 	movhi	r2,65408
   2b50c:	10bfffc4 	addi	r2,r2,-1
   2b510:	2021883a 	mov	r16,r4
   2b514:	4090703a 	and	r8,r8,r2
   2b518:	003eb306 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b51c:	4444b03a 	or	r2,r8,r17
   2b520:	8000291e 	bne	r16,zero,2b5c8 <__adddf3+0x65c>
   2b524:	10004b1e 	bne	r2,zero,2b654 <__adddf3+0x6e8>
   2b528:	4990b03a 	or	r8,r9,r6
   2b52c:	40008b26 	beq	r8,zero,2b75c <__adddf3+0x7f0>
   2b530:	4811883a 	mov	r8,r9
   2b534:	3023883a 	mov	r17,r6
   2b538:	3825883a 	mov	r18,r7
   2b53c:	003eaa06 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b540:	1021883a 	mov	r16,r2
   2b544:	0011883a 	mov	r8,zero
   2b548:	0005883a 	mov	r2,zero
   2b54c:	003f0f06 	br	2b18c <__alt_data_end+0xfffeb18c>
   2b550:	217ff804 	addi	r5,r4,-32
   2b554:	00800804 	movi	r2,32
   2b558:	494ad83a 	srl	r5,r9,r5
   2b55c:	20807d26 	beq	r4,r2,2b754 <__adddf3+0x7e8>
   2b560:	00801004 	movi	r2,64
   2b564:	1109c83a 	sub	r4,r2,r4
   2b568:	4912983a 	sll	r9,r9,r4
   2b56c:	498cb03a 	or	r6,r9,r6
   2b570:	300cc03a 	cmpne	r6,r6,zero
   2b574:	298ab03a 	or	r5,r5,r6
   2b578:	0013883a 	mov	r9,zero
   2b57c:	003f1506 	br	2b1d4 <__alt_data_end+0xfffeb1d4>
   2b580:	0101ffc4 	movi	r4,2047
   2b584:	113f9a1e 	bne	r2,r4,2b3f0 <__alt_data_end+0xfffeb3f0>
   2b588:	4811883a 	mov	r8,r9
   2b58c:	3023883a 	mov	r17,r6
   2b590:	1021883a 	mov	r16,r2
   2b594:	3825883a 	mov	r18,r7
   2b598:	003e9306 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b59c:	8000161e 	bne	r16,zero,2b5f8 <__adddf3+0x68c>
   2b5a0:	444ab03a 	or	r5,r8,r17
   2b5a4:	28005126 	beq	r5,zero,2b6ec <__adddf3+0x780>
   2b5a8:	0108303a 	nor	r4,zero,r4
   2b5ac:	20004d1e 	bne	r4,zero,2b6e4 <__adddf3+0x778>
   2b5b0:	89a3883a 	add	r17,r17,r6
   2b5b4:	4253883a 	add	r9,r8,r9
   2b5b8:	898d803a 	cmpltu	r6,r17,r6
   2b5bc:	3251883a 	add	r8,r6,r9
   2b5c0:	1021883a 	mov	r16,r2
   2b5c4:	003f0806 	br	2b1e8 <__alt_data_end+0xfffeb1e8>
   2b5c8:	1000301e 	bne	r2,zero,2b68c <__adddf3+0x720>
   2b5cc:	4984b03a 	or	r2,r9,r6
   2b5d0:	10007126 	beq	r2,zero,2b798 <__adddf3+0x82c>
   2b5d4:	4811883a 	mov	r8,r9
   2b5d8:	3023883a 	mov	r17,r6
   2b5dc:	3825883a 	mov	r18,r7
   2b5e0:	0401ffc4 	movi	r16,2047
   2b5e4:	003e8006 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b5e8:	4462b03a 	or	r17,r8,r17
   2b5ec:	8822c03a 	cmpne	r17,r17,zero
   2b5f0:	0007883a 	mov	r3,zero
   2b5f4:	003f8b06 	br	2b424 <__alt_data_end+0xfffeb424>
   2b5f8:	0141ffc4 	movi	r5,2047
   2b5fc:	11403b26 	beq	r2,r5,2b6ec <__adddf3+0x780>
   2b600:	0109c83a 	sub	r4,zero,r4
   2b604:	42002034 	orhi	r8,r8,128
   2b608:	01400e04 	movi	r5,56
   2b60c:	29006716 	blt	r5,r4,2b7ac <__adddf3+0x840>
   2b610:	014007c4 	movi	r5,31
   2b614:	29007016 	blt	r5,r4,2b7d8 <__adddf3+0x86c>
   2b618:	01400804 	movi	r5,32
   2b61c:	290bc83a 	sub	r5,r5,r4
   2b620:	4154983a 	sll	r10,r8,r5
   2b624:	890ed83a 	srl	r7,r17,r4
   2b628:	894a983a 	sll	r5,r17,r5
   2b62c:	4108d83a 	srl	r4,r8,r4
   2b630:	51e2b03a 	or	r17,r10,r7
   2b634:	280ac03a 	cmpne	r5,r5,zero
   2b638:	8962b03a 	or	r17,r17,r5
   2b63c:	89a3883a 	add	r17,r17,r6
   2b640:	2253883a 	add	r9,r4,r9
   2b644:	898d803a 	cmpltu	r6,r17,r6
   2b648:	3251883a 	add	r8,r6,r9
   2b64c:	1021883a 	mov	r16,r2
   2b650:	003ee506 	br	2b1e8 <__alt_data_end+0xfffeb1e8>
   2b654:	4984b03a 	or	r2,r9,r6
   2b658:	103e6326 	beq	r2,zero,2afe8 <__alt_data_end+0xfffeafe8>
   2b65c:	8987c83a 	sub	r3,r17,r6
   2b660:	88c9803a 	cmpltu	r4,r17,r3
   2b664:	4245c83a 	sub	r2,r8,r9
   2b668:	1105c83a 	sub	r2,r2,r4
   2b66c:	1100202c 	andhi	r4,r2,128
   2b670:	203ebb26 	beq	r4,zero,2b160 <__alt_data_end+0xfffeb160>
   2b674:	3463c83a 	sub	r17,r6,r17
   2b678:	4a07c83a 	sub	r3,r9,r8
   2b67c:	344d803a 	cmpltu	r6,r6,r17
   2b680:	1991c83a 	sub	r8,r3,r6
   2b684:	3825883a 	mov	r18,r7
   2b688:	003e5706 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b68c:	4984b03a 	or	r2,r9,r6
   2b690:	10002e26 	beq	r2,zero,2b74c <__adddf3+0x7e0>
   2b694:	4004d0fa 	srli	r2,r8,3
   2b698:	8822d0fa 	srli	r17,r17,3
   2b69c:	4010977a 	slli	r8,r8,29
   2b6a0:	10c0022c 	andhi	r3,r2,8
   2b6a4:	4462b03a 	or	r17,r8,r17
   2b6a8:	18000826 	beq	r3,zero,2b6cc <__adddf3+0x760>
   2b6ac:	4808d0fa 	srli	r4,r9,3
   2b6b0:	20c0022c 	andhi	r3,r4,8
   2b6b4:	1800051e 	bne	r3,zero,2b6cc <__adddf3+0x760>
   2b6b8:	300cd0fa 	srli	r6,r6,3
   2b6bc:	4806977a 	slli	r3,r9,29
   2b6c0:	2005883a 	mov	r2,r4
   2b6c4:	3825883a 	mov	r18,r7
   2b6c8:	19a2b03a 	or	r17,r3,r6
   2b6cc:	8810d77a 	srli	r8,r17,29
   2b6d0:	100490fa 	slli	r2,r2,3
   2b6d4:	882290fa 	slli	r17,r17,3
   2b6d8:	0401ffc4 	movi	r16,2047
   2b6dc:	4090b03a 	or	r8,r8,r2
   2b6e0:	003e4106 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b6e4:	0141ffc4 	movi	r5,2047
   2b6e8:	117fc71e 	bne	r2,r5,2b608 <__alt_data_end+0xfffeb608>
   2b6ec:	4811883a 	mov	r8,r9
   2b6f0:	3023883a 	mov	r17,r6
   2b6f4:	1021883a 	mov	r16,r2
   2b6f8:	003e3b06 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b6fc:	10002f26 	beq	r2,zero,2b7bc <__adddf3+0x850>
   2b700:	4984b03a 	or	r2,r9,r6
   2b704:	10001126 	beq	r2,zero,2b74c <__adddf3+0x7e0>
   2b708:	4004d0fa 	srli	r2,r8,3
   2b70c:	8822d0fa 	srli	r17,r17,3
   2b710:	4010977a 	slli	r8,r8,29
   2b714:	10c0022c 	andhi	r3,r2,8
   2b718:	4462b03a 	or	r17,r8,r17
   2b71c:	183feb26 	beq	r3,zero,2b6cc <__alt_data_end+0xfffeb6cc>
   2b720:	4808d0fa 	srli	r4,r9,3
   2b724:	20c0022c 	andhi	r3,r4,8
   2b728:	183fe81e 	bne	r3,zero,2b6cc <__alt_data_end+0xfffeb6cc>
   2b72c:	300cd0fa 	srli	r6,r6,3
   2b730:	4806977a 	slli	r3,r9,29
   2b734:	2005883a 	mov	r2,r4
   2b738:	19a2b03a 	or	r17,r3,r6
   2b73c:	003fe306 	br	2b6cc <__alt_data_end+0xfffeb6cc>
   2b740:	0011883a 	mov	r8,zero
   2b744:	0005883a 	mov	r2,zero
   2b748:	003e3f06 	br	2b048 <__alt_data_end+0xfffeb048>
   2b74c:	0401ffc4 	movi	r16,2047
   2b750:	003e2506 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b754:	0013883a 	mov	r9,zero
   2b758:	003f8406 	br	2b56c <__alt_data_end+0xfffeb56c>
   2b75c:	0005883a 	mov	r2,zero
   2b760:	0007883a 	mov	r3,zero
   2b764:	003e8906 	br	2b18c <__alt_data_end+0xfffeb18c>
   2b768:	197ff804 	addi	r5,r3,-32
   2b76c:	01000804 	movi	r4,32
   2b770:	414ad83a 	srl	r5,r8,r5
   2b774:	19002426 	beq	r3,r4,2b808 <__adddf3+0x89c>
   2b778:	01001004 	movi	r4,64
   2b77c:	20c7c83a 	sub	r3,r4,r3
   2b780:	40c6983a 	sll	r3,r8,r3
   2b784:	1c46b03a 	or	r3,r3,r17
   2b788:	1806c03a 	cmpne	r3,r3,zero
   2b78c:	28e2b03a 	or	r17,r5,r3
   2b790:	0007883a 	mov	r3,zero
   2b794:	003f2306 	br	2b424 <__alt_data_end+0xfffeb424>
   2b798:	0007883a 	mov	r3,zero
   2b79c:	5811883a 	mov	r8,r11
   2b7a0:	00bfffc4 	movi	r2,-1
   2b7a4:	0401ffc4 	movi	r16,2047
   2b7a8:	003e7806 	br	2b18c <__alt_data_end+0xfffeb18c>
   2b7ac:	4462b03a 	or	r17,r8,r17
   2b7b0:	8822c03a 	cmpne	r17,r17,zero
   2b7b4:	0009883a 	mov	r4,zero
   2b7b8:	003fa006 	br	2b63c <__alt_data_end+0xfffeb63c>
   2b7bc:	4811883a 	mov	r8,r9
   2b7c0:	3023883a 	mov	r17,r6
   2b7c4:	0401ffc4 	movi	r16,2047
   2b7c8:	003e0706 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b7cc:	4811883a 	mov	r8,r9
   2b7d0:	3023883a 	mov	r17,r6
   2b7d4:	003e0406 	br	2afe8 <__alt_data_end+0xfffeafe8>
   2b7d8:	21fff804 	addi	r7,r4,-32
   2b7dc:	01400804 	movi	r5,32
   2b7e0:	41ced83a 	srl	r7,r8,r7
   2b7e4:	21400a26 	beq	r4,r5,2b810 <__adddf3+0x8a4>
   2b7e8:	01401004 	movi	r5,64
   2b7ec:	2909c83a 	sub	r4,r5,r4
   2b7f0:	4108983a 	sll	r4,r8,r4
   2b7f4:	2448b03a 	or	r4,r4,r17
   2b7f8:	2008c03a 	cmpne	r4,r4,zero
   2b7fc:	3922b03a 	or	r17,r7,r4
   2b800:	0009883a 	mov	r4,zero
   2b804:	003f8d06 	br	2b63c <__alt_data_end+0xfffeb63c>
   2b808:	0007883a 	mov	r3,zero
   2b80c:	003fdd06 	br	2b784 <__alt_data_end+0xfffeb784>
   2b810:	0009883a 	mov	r4,zero
   2b814:	003ff706 	br	2b7f4 <__alt_data_end+0xfffeb7f4>

0002b818 <__divdf3>:
   2b818:	defff204 	addi	sp,sp,-56
   2b81c:	dd400915 	stw	r21,36(sp)
   2b820:	282ad53a 	srli	r21,r5,20
   2b824:	dd000815 	stw	r20,32(sp)
   2b828:	2828d7fa 	srli	r20,r5,31
   2b82c:	dc000415 	stw	r16,16(sp)
   2b830:	04000434 	movhi	r16,16
   2b834:	df000c15 	stw	fp,48(sp)
   2b838:	843fffc4 	addi	r16,r16,-1
   2b83c:	dfc00d15 	stw	ra,52(sp)
   2b840:	ddc00b15 	stw	r23,44(sp)
   2b844:	dd800a15 	stw	r22,40(sp)
   2b848:	dcc00715 	stw	r19,28(sp)
   2b84c:	dc800615 	stw	r18,24(sp)
   2b850:	dc400515 	stw	r17,20(sp)
   2b854:	ad41ffcc 	andi	r21,r21,2047
   2b858:	2c20703a 	and	r16,r5,r16
   2b85c:	a7003fcc 	andi	fp,r20,255
   2b860:	a8006126 	beq	r21,zero,2b9e8 <__divdf3+0x1d0>
   2b864:	0081ffc4 	movi	r2,2047
   2b868:	2025883a 	mov	r18,r4
   2b86c:	a8803726 	beq	r21,r2,2b94c <__divdf3+0x134>
   2b870:	80800434 	orhi	r2,r16,16
   2b874:	100490fa 	slli	r2,r2,3
   2b878:	2020d77a 	srli	r16,r4,29
   2b87c:	202490fa 	slli	r18,r4,3
   2b880:	ad7f0044 	addi	r21,r21,-1023
   2b884:	80a0b03a 	or	r16,r16,r2
   2b888:	0027883a 	mov	r19,zero
   2b88c:	0013883a 	mov	r9,zero
   2b890:	3804d53a 	srli	r2,r7,20
   2b894:	382cd7fa 	srli	r22,r7,31
   2b898:	04400434 	movhi	r17,16
   2b89c:	8c7fffc4 	addi	r17,r17,-1
   2b8a0:	1081ffcc 	andi	r2,r2,2047
   2b8a4:	3011883a 	mov	r8,r6
   2b8a8:	3c62703a 	and	r17,r7,r17
   2b8ac:	b5c03fcc 	andi	r23,r22,255
   2b8b0:	10006c26 	beq	r2,zero,2ba64 <__divdf3+0x24c>
   2b8b4:	00c1ffc4 	movi	r3,2047
   2b8b8:	10c06426 	beq	r2,r3,2ba4c <__divdf3+0x234>
   2b8bc:	88c00434 	orhi	r3,r17,16
   2b8c0:	180690fa 	slli	r3,r3,3
   2b8c4:	3022d77a 	srli	r17,r6,29
   2b8c8:	301090fa 	slli	r8,r6,3
   2b8cc:	10bf0044 	addi	r2,r2,-1023
   2b8d0:	88e2b03a 	or	r17,r17,r3
   2b8d4:	000f883a 	mov	r7,zero
   2b8d8:	a58cf03a 	xor	r6,r20,r22
   2b8dc:	3cc8b03a 	or	r4,r7,r19
   2b8e0:	a8abc83a 	sub	r21,r21,r2
   2b8e4:	008003c4 	movi	r2,15
   2b8e8:	3007883a 	mov	r3,r6
   2b8ec:	34c03fcc 	andi	r19,r6,255
   2b8f0:	11009036 	bltu	r2,r4,2bb34 <__divdf3+0x31c>
   2b8f4:	200890ba 	slli	r4,r4,2
   2b8f8:	008000f4 	movhi	r2,3
   2b8fc:	10ae4304 	addi	r2,r2,-18164
   2b900:	2089883a 	add	r4,r4,r2
   2b904:	20800017 	ldw	r2,0(r4)
   2b908:	1000683a 	jmp	r2
   2b90c:	0002bb34 	movhi	zero,2796
   2b910:	0002b984 	movi	zero,2790
   2b914:	0002bb24 	muli	zero,zero,2796
   2b918:	0002b978 	rdprs	zero,zero,2789
   2b91c:	0002bb24 	muli	zero,zero,2796
   2b920:	0002baf8 	rdprs	zero,zero,2795
   2b924:	0002bb24 	muli	zero,zero,2796
   2b928:	0002b978 	rdprs	zero,zero,2789
   2b92c:	0002b984 	movi	zero,2790
   2b930:	0002b984 	movi	zero,2790
   2b934:	0002baf8 	rdprs	zero,zero,2795
   2b938:	0002b978 	rdprs	zero,zero,2789
   2b93c:	0002b968 	cmpgeui	zero,zero,2789
   2b940:	0002b968 	cmpgeui	zero,zero,2789
   2b944:	0002b968 	cmpgeui	zero,zero,2789
   2b948:	0002be18 	cmpnei	zero,zero,2808
   2b94c:	2404b03a 	or	r2,r4,r16
   2b950:	1000661e 	bne	r2,zero,2baec <__divdf3+0x2d4>
   2b954:	04c00204 	movi	r19,8
   2b958:	0021883a 	mov	r16,zero
   2b95c:	0025883a 	mov	r18,zero
   2b960:	02400084 	movi	r9,2
   2b964:	003fca06 	br	2b890 <__alt_data_end+0xfffeb890>
   2b968:	8023883a 	mov	r17,r16
   2b96c:	9011883a 	mov	r8,r18
   2b970:	e02f883a 	mov	r23,fp
   2b974:	480f883a 	mov	r7,r9
   2b978:	00800084 	movi	r2,2
   2b97c:	3881311e 	bne	r7,r2,2be44 <__divdf3+0x62c>
   2b980:	b827883a 	mov	r19,r23
   2b984:	98c0004c 	andi	r3,r19,1
   2b988:	0081ffc4 	movi	r2,2047
   2b98c:	000b883a 	mov	r5,zero
   2b990:	0025883a 	mov	r18,zero
   2b994:	1004953a 	slli	r2,r2,20
   2b998:	18c03fcc 	andi	r3,r3,255
   2b99c:	04400434 	movhi	r17,16
   2b9a0:	8c7fffc4 	addi	r17,r17,-1
   2b9a4:	180697fa 	slli	r3,r3,31
   2b9a8:	2c4a703a 	and	r5,r5,r17
   2b9ac:	288ab03a 	or	r5,r5,r2
   2b9b0:	28c6b03a 	or	r3,r5,r3
   2b9b4:	9005883a 	mov	r2,r18
   2b9b8:	dfc00d17 	ldw	ra,52(sp)
   2b9bc:	df000c17 	ldw	fp,48(sp)
   2b9c0:	ddc00b17 	ldw	r23,44(sp)
   2b9c4:	dd800a17 	ldw	r22,40(sp)
   2b9c8:	dd400917 	ldw	r21,36(sp)
   2b9cc:	dd000817 	ldw	r20,32(sp)
   2b9d0:	dcc00717 	ldw	r19,28(sp)
   2b9d4:	dc800617 	ldw	r18,24(sp)
   2b9d8:	dc400517 	ldw	r17,20(sp)
   2b9dc:	dc000417 	ldw	r16,16(sp)
   2b9e0:	dec00e04 	addi	sp,sp,56
   2b9e4:	f800283a 	ret
   2b9e8:	2404b03a 	or	r2,r4,r16
   2b9ec:	2027883a 	mov	r19,r4
   2b9f0:	10003926 	beq	r2,zero,2bad8 <__divdf3+0x2c0>
   2b9f4:	80012e26 	beq	r16,zero,2beb0 <__divdf3+0x698>
   2b9f8:	8009883a 	mov	r4,r16
   2b9fc:	d9800315 	stw	r6,12(sp)
   2ba00:	d9c00215 	stw	r7,8(sp)
   2ba04:	002d5700 	call	2d570 <__clzsi2>
   2ba08:	d9800317 	ldw	r6,12(sp)
   2ba0c:	d9c00217 	ldw	r7,8(sp)
   2ba10:	113ffd44 	addi	r4,r2,-11
   2ba14:	00c00704 	movi	r3,28
   2ba18:	19012116 	blt	r3,r4,2bea0 <__divdf3+0x688>
   2ba1c:	00c00744 	movi	r3,29
   2ba20:	147ffe04 	addi	r17,r2,-8
   2ba24:	1907c83a 	sub	r3,r3,r4
   2ba28:	8460983a 	sll	r16,r16,r17
   2ba2c:	98c6d83a 	srl	r3,r19,r3
   2ba30:	9c64983a 	sll	r18,r19,r17
   2ba34:	1c20b03a 	or	r16,r3,r16
   2ba38:	1080fcc4 	addi	r2,r2,1011
   2ba3c:	00abc83a 	sub	r21,zero,r2
   2ba40:	0027883a 	mov	r19,zero
   2ba44:	0013883a 	mov	r9,zero
   2ba48:	003f9106 	br	2b890 <__alt_data_end+0xfffeb890>
   2ba4c:	3446b03a 	or	r3,r6,r17
   2ba50:	18001f1e 	bne	r3,zero,2bad0 <__divdf3+0x2b8>
   2ba54:	0023883a 	mov	r17,zero
   2ba58:	0011883a 	mov	r8,zero
   2ba5c:	01c00084 	movi	r7,2
   2ba60:	003f9d06 	br	2b8d8 <__alt_data_end+0xfffeb8d8>
   2ba64:	3446b03a 	or	r3,r6,r17
   2ba68:	18001526 	beq	r3,zero,2bac0 <__divdf3+0x2a8>
   2ba6c:	88011b26 	beq	r17,zero,2bedc <__divdf3+0x6c4>
   2ba70:	8809883a 	mov	r4,r17
   2ba74:	d9800315 	stw	r6,12(sp)
   2ba78:	da400115 	stw	r9,4(sp)
   2ba7c:	002d5700 	call	2d570 <__clzsi2>
   2ba80:	d9800317 	ldw	r6,12(sp)
   2ba84:	da400117 	ldw	r9,4(sp)
   2ba88:	113ffd44 	addi	r4,r2,-11
   2ba8c:	00c00704 	movi	r3,28
   2ba90:	19010e16 	blt	r3,r4,2becc <__divdf3+0x6b4>
   2ba94:	00c00744 	movi	r3,29
   2ba98:	123ffe04 	addi	r8,r2,-8
   2ba9c:	1907c83a 	sub	r3,r3,r4
   2baa0:	8a22983a 	sll	r17,r17,r8
   2baa4:	30c6d83a 	srl	r3,r6,r3
   2baa8:	3210983a 	sll	r8,r6,r8
   2baac:	1c62b03a 	or	r17,r3,r17
   2bab0:	1080fcc4 	addi	r2,r2,1011
   2bab4:	0085c83a 	sub	r2,zero,r2
   2bab8:	000f883a 	mov	r7,zero
   2babc:	003f8606 	br	2b8d8 <__alt_data_end+0xfffeb8d8>
   2bac0:	0023883a 	mov	r17,zero
   2bac4:	0011883a 	mov	r8,zero
   2bac8:	01c00044 	movi	r7,1
   2bacc:	003f8206 	br	2b8d8 <__alt_data_end+0xfffeb8d8>
   2bad0:	01c000c4 	movi	r7,3
   2bad4:	003f8006 	br	2b8d8 <__alt_data_end+0xfffeb8d8>
   2bad8:	04c00104 	movi	r19,4
   2badc:	0021883a 	mov	r16,zero
   2bae0:	0025883a 	mov	r18,zero
   2bae4:	02400044 	movi	r9,1
   2bae8:	003f6906 	br	2b890 <__alt_data_end+0xfffeb890>
   2baec:	04c00304 	movi	r19,12
   2baf0:	024000c4 	movi	r9,3
   2baf4:	003f6606 	br	2b890 <__alt_data_end+0xfffeb890>
   2baf8:	01400434 	movhi	r5,16
   2bafc:	0007883a 	mov	r3,zero
   2bb00:	297fffc4 	addi	r5,r5,-1
   2bb04:	04bfffc4 	movi	r18,-1
   2bb08:	0081ffc4 	movi	r2,2047
   2bb0c:	003fa106 	br	2b994 <__alt_data_end+0xfffeb994>
   2bb10:	00c00044 	movi	r3,1
   2bb14:	1887c83a 	sub	r3,r3,r2
   2bb18:	01000e04 	movi	r4,56
   2bb1c:	20c1210e 	bge	r4,r3,2bfa4 <__divdf3+0x78c>
   2bb20:	98c0004c 	andi	r3,r19,1
   2bb24:	0005883a 	mov	r2,zero
   2bb28:	000b883a 	mov	r5,zero
   2bb2c:	0025883a 	mov	r18,zero
   2bb30:	003f9806 	br	2b994 <__alt_data_end+0xfffeb994>
   2bb34:	8c00fd36 	bltu	r17,r16,2bf2c <__divdf3+0x714>
   2bb38:	8440fb26 	beq	r16,r17,2bf28 <__divdf3+0x710>
   2bb3c:	8007883a 	mov	r3,r16
   2bb40:	ad7fffc4 	addi	r21,r21,-1
   2bb44:	0021883a 	mov	r16,zero
   2bb48:	4004d63a 	srli	r2,r8,24
   2bb4c:	8822923a 	slli	r17,r17,8
   2bb50:	1809883a 	mov	r4,r3
   2bb54:	402c923a 	slli	r22,r8,8
   2bb58:	88b8b03a 	or	fp,r17,r2
   2bb5c:	e028d43a 	srli	r20,fp,16
   2bb60:	d8c00015 	stw	r3,0(sp)
   2bb64:	e5ffffcc 	andi	r23,fp,65535
   2bb68:	a00b883a 	mov	r5,r20
   2bb6c:	002aeb00 	call	2aeb0 <__udivsi3>
   2bb70:	d8c00017 	ldw	r3,0(sp)
   2bb74:	a00b883a 	mov	r5,r20
   2bb78:	d8800315 	stw	r2,12(sp)
   2bb7c:	1809883a 	mov	r4,r3
   2bb80:	002af140 	call	2af14 <__umodsi3>
   2bb84:	d9800317 	ldw	r6,12(sp)
   2bb88:	1006943a 	slli	r3,r2,16
   2bb8c:	9004d43a 	srli	r2,r18,16
   2bb90:	b9a3383a 	mul	r17,r23,r6
   2bb94:	10c4b03a 	or	r2,r2,r3
   2bb98:	1440062e 	bgeu	r2,r17,2bbb4 <__divdf3+0x39c>
   2bb9c:	1705883a 	add	r2,r2,fp
   2bba0:	30ffffc4 	addi	r3,r6,-1
   2bba4:	1700ee36 	bltu	r2,fp,2bf60 <__divdf3+0x748>
   2bba8:	1440ed2e 	bgeu	r2,r17,2bf60 <__divdf3+0x748>
   2bbac:	31bfff84 	addi	r6,r6,-2
   2bbb0:	1705883a 	add	r2,r2,fp
   2bbb4:	1463c83a 	sub	r17,r2,r17
   2bbb8:	a00b883a 	mov	r5,r20
   2bbbc:	8809883a 	mov	r4,r17
   2bbc0:	d9800315 	stw	r6,12(sp)
   2bbc4:	002aeb00 	call	2aeb0 <__udivsi3>
   2bbc8:	a00b883a 	mov	r5,r20
   2bbcc:	8809883a 	mov	r4,r17
   2bbd0:	d8800215 	stw	r2,8(sp)
   2bbd4:	002af140 	call	2af14 <__umodsi3>
   2bbd8:	d9c00217 	ldw	r7,8(sp)
   2bbdc:	1004943a 	slli	r2,r2,16
   2bbe0:	94bfffcc 	andi	r18,r18,65535
   2bbe4:	b9d1383a 	mul	r8,r23,r7
   2bbe8:	90a4b03a 	or	r18,r18,r2
   2bbec:	d9800317 	ldw	r6,12(sp)
   2bbf0:	9200062e 	bgeu	r18,r8,2bc0c <__divdf3+0x3f4>
   2bbf4:	9725883a 	add	r18,r18,fp
   2bbf8:	38bfffc4 	addi	r2,r7,-1
   2bbfc:	9700d636 	bltu	r18,fp,2bf58 <__divdf3+0x740>
   2bc00:	9200d52e 	bgeu	r18,r8,2bf58 <__divdf3+0x740>
   2bc04:	39ffff84 	addi	r7,r7,-2
   2bc08:	9725883a 	add	r18,r18,fp
   2bc0c:	3004943a 	slli	r2,r6,16
   2bc10:	b012d43a 	srli	r9,r22,16
   2bc14:	b1bfffcc 	andi	r6,r22,65535
   2bc18:	11e2b03a 	or	r17,r2,r7
   2bc1c:	8806d43a 	srli	r3,r17,16
   2bc20:	893fffcc 	andi	r4,r17,65535
   2bc24:	218b383a 	mul	r5,r4,r6
   2bc28:	30c5383a 	mul	r2,r6,r3
   2bc2c:	2249383a 	mul	r4,r4,r9
   2bc30:	280ed43a 	srli	r7,r5,16
   2bc34:	9225c83a 	sub	r18,r18,r8
   2bc38:	2089883a 	add	r4,r4,r2
   2bc3c:	3909883a 	add	r4,r7,r4
   2bc40:	1a47383a 	mul	r3,r3,r9
   2bc44:	2080022e 	bgeu	r4,r2,2bc50 <__divdf3+0x438>
   2bc48:	00800074 	movhi	r2,1
   2bc4c:	1887883a 	add	r3,r3,r2
   2bc50:	2004d43a 	srli	r2,r4,16
   2bc54:	2008943a 	slli	r4,r4,16
   2bc58:	297fffcc 	andi	r5,r5,65535
   2bc5c:	10c7883a 	add	r3,r2,r3
   2bc60:	2149883a 	add	r4,r4,r5
   2bc64:	90c0a536 	bltu	r18,r3,2befc <__divdf3+0x6e4>
   2bc68:	90c0bf26 	beq	r18,r3,2bf68 <__divdf3+0x750>
   2bc6c:	90c7c83a 	sub	r3,r18,r3
   2bc70:	810fc83a 	sub	r7,r16,r4
   2bc74:	81e5803a 	cmpltu	r18,r16,r7
   2bc78:	1ca5c83a 	sub	r18,r3,r18
   2bc7c:	e480c126 	beq	fp,r18,2bf84 <__divdf3+0x76c>
   2bc80:	a00b883a 	mov	r5,r20
   2bc84:	9009883a 	mov	r4,r18
   2bc88:	d9800315 	stw	r6,12(sp)
   2bc8c:	d9c00215 	stw	r7,8(sp)
   2bc90:	da400115 	stw	r9,4(sp)
   2bc94:	002aeb00 	call	2aeb0 <__udivsi3>
   2bc98:	a00b883a 	mov	r5,r20
   2bc9c:	9009883a 	mov	r4,r18
   2bca0:	d8800015 	stw	r2,0(sp)
   2bca4:	002af140 	call	2af14 <__umodsi3>
   2bca8:	d9c00217 	ldw	r7,8(sp)
   2bcac:	da000017 	ldw	r8,0(sp)
   2bcb0:	1006943a 	slli	r3,r2,16
   2bcb4:	3804d43a 	srli	r2,r7,16
   2bcb8:	ba21383a 	mul	r16,r23,r8
   2bcbc:	d9800317 	ldw	r6,12(sp)
   2bcc0:	10c4b03a 	or	r2,r2,r3
   2bcc4:	da400117 	ldw	r9,4(sp)
   2bcc8:	1400062e 	bgeu	r2,r16,2bce4 <__divdf3+0x4cc>
   2bccc:	1705883a 	add	r2,r2,fp
   2bcd0:	40ffffc4 	addi	r3,r8,-1
   2bcd4:	1700ad36 	bltu	r2,fp,2bf8c <__divdf3+0x774>
   2bcd8:	1400ac2e 	bgeu	r2,r16,2bf8c <__divdf3+0x774>
   2bcdc:	423fff84 	addi	r8,r8,-2
   2bce0:	1705883a 	add	r2,r2,fp
   2bce4:	1421c83a 	sub	r16,r2,r16
   2bce8:	a00b883a 	mov	r5,r20
   2bcec:	8009883a 	mov	r4,r16
   2bcf0:	d9800315 	stw	r6,12(sp)
   2bcf4:	d9c00215 	stw	r7,8(sp)
   2bcf8:	da000015 	stw	r8,0(sp)
   2bcfc:	da400115 	stw	r9,4(sp)
   2bd00:	002aeb00 	call	2aeb0 <__udivsi3>
   2bd04:	8009883a 	mov	r4,r16
   2bd08:	a00b883a 	mov	r5,r20
   2bd0c:	1025883a 	mov	r18,r2
   2bd10:	002af140 	call	2af14 <__umodsi3>
   2bd14:	d9c00217 	ldw	r7,8(sp)
   2bd18:	1004943a 	slli	r2,r2,16
   2bd1c:	bcaf383a 	mul	r23,r23,r18
   2bd20:	393fffcc 	andi	r4,r7,65535
   2bd24:	2088b03a 	or	r4,r4,r2
   2bd28:	d9800317 	ldw	r6,12(sp)
   2bd2c:	da000017 	ldw	r8,0(sp)
   2bd30:	da400117 	ldw	r9,4(sp)
   2bd34:	25c0062e 	bgeu	r4,r23,2bd50 <__divdf3+0x538>
   2bd38:	2709883a 	add	r4,r4,fp
   2bd3c:	90bfffc4 	addi	r2,r18,-1
   2bd40:	27009436 	bltu	r4,fp,2bf94 <__divdf3+0x77c>
   2bd44:	25c0932e 	bgeu	r4,r23,2bf94 <__divdf3+0x77c>
   2bd48:	94bfff84 	addi	r18,r18,-2
   2bd4c:	2709883a 	add	r4,r4,fp
   2bd50:	4004943a 	slli	r2,r8,16
   2bd54:	25efc83a 	sub	r23,r4,r23
   2bd58:	1490b03a 	or	r8,r2,r18
   2bd5c:	4008d43a 	srli	r4,r8,16
   2bd60:	40ffffcc 	andi	r3,r8,65535
   2bd64:	30c5383a 	mul	r2,r6,r3
   2bd68:	1a47383a 	mul	r3,r3,r9
   2bd6c:	310d383a 	mul	r6,r6,r4
   2bd70:	100ad43a 	srli	r5,r2,16
   2bd74:	4913383a 	mul	r9,r9,r4
   2bd78:	1987883a 	add	r3,r3,r6
   2bd7c:	28c7883a 	add	r3,r5,r3
   2bd80:	1980022e 	bgeu	r3,r6,2bd8c <__divdf3+0x574>
   2bd84:	01000074 	movhi	r4,1
   2bd88:	4913883a 	add	r9,r9,r4
   2bd8c:	1808d43a 	srli	r4,r3,16
   2bd90:	1806943a 	slli	r3,r3,16
   2bd94:	10bfffcc 	andi	r2,r2,65535
   2bd98:	2253883a 	add	r9,r4,r9
   2bd9c:	1887883a 	add	r3,r3,r2
   2bda0:	ba403836 	bltu	r23,r9,2be84 <__divdf3+0x66c>
   2bda4:	ba403626 	beq	r23,r9,2be80 <__divdf3+0x668>
   2bda8:	42000054 	ori	r8,r8,1
   2bdac:	a880ffc4 	addi	r2,r21,1023
   2bdb0:	00bf570e 	bge	zero,r2,2bb10 <__alt_data_end+0xfffebb10>
   2bdb4:	40c001cc 	andi	r3,r8,7
   2bdb8:	18000726 	beq	r3,zero,2bdd8 <__divdf3+0x5c0>
   2bdbc:	40c003cc 	andi	r3,r8,15
   2bdc0:	01000104 	movi	r4,4
   2bdc4:	19000426 	beq	r3,r4,2bdd8 <__divdf3+0x5c0>
   2bdc8:	4107883a 	add	r3,r8,r4
   2bdcc:	1a11803a 	cmpltu	r8,r3,r8
   2bdd0:	8a23883a 	add	r17,r17,r8
   2bdd4:	1811883a 	mov	r8,r3
   2bdd8:	88c0402c 	andhi	r3,r17,256
   2bddc:	18000426 	beq	r3,zero,2bdf0 <__divdf3+0x5d8>
   2bde0:	00ffc034 	movhi	r3,65280
   2bde4:	18ffffc4 	addi	r3,r3,-1
   2bde8:	a8810004 	addi	r2,r21,1024
   2bdec:	88e2703a 	and	r17,r17,r3
   2bdf0:	00c1ff84 	movi	r3,2046
   2bdf4:	18bee316 	blt	r3,r2,2b984 <__alt_data_end+0xfffeb984>
   2bdf8:	8824977a 	slli	r18,r17,29
   2bdfc:	4010d0fa 	srli	r8,r8,3
   2be00:	8822927a 	slli	r17,r17,9
   2be04:	1081ffcc 	andi	r2,r2,2047
   2be08:	9224b03a 	or	r18,r18,r8
   2be0c:	880ad33a 	srli	r5,r17,12
   2be10:	98c0004c 	andi	r3,r19,1
   2be14:	003edf06 	br	2b994 <__alt_data_end+0xfffeb994>
   2be18:	8080022c 	andhi	r2,r16,8
   2be1c:	10001226 	beq	r2,zero,2be68 <__divdf3+0x650>
   2be20:	8880022c 	andhi	r2,r17,8
   2be24:	1000101e 	bne	r2,zero,2be68 <__divdf3+0x650>
   2be28:	00800434 	movhi	r2,16
   2be2c:	89400234 	orhi	r5,r17,8
   2be30:	10bfffc4 	addi	r2,r2,-1
   2be34:	b007883a 	mov	r3,r22
   2be38:	288a703a 	and	r5,r5,r2
   2be3c:	4025883a 	mov	r18,r8
   2be40:	003f3106 	br	2bb08 <__alt_data_end+0xfffebb08>
   2be44:	008000c4 	movi	r2,3
   2be48:	3880a626 	beq	r7,r2,2c0e4 <__divdf3+0x8cc>
   2be4c:	00800044 	movi	r2,1
   2be50:	3880521e 	bne	r7,r2,2bf9c <__divdf3+0x784>
   2be54:	b807883a 	mov	r3,r23
   2be58:	0005883a 	mov	r2,zero
   2be5c:	000b883a 	mov	r5,zero
   2be60:	0025883a 	mov	r18,zero
   2be64:	003ecb06 	br	2b994 <__alt_data_end+0xfffeb994>
   2be68:	00800434 	movhi	r2,16
   2be6c:	81400234 	orhi	r5,r16,8
   2be70:	10bfffc4 	addi	r2,r2,-1
   2be74:	a007883a 	mov	r3,r20
   2be78:	288a703a 	and	r5,r5,r2
   2be7c:	003f2206 	br	2bb08 <__alt_data_end+0xfffebb08>
   2be80:	183fca26 	beq	r3,zero,2bdac <__alt_data_end+0xfffebdac>
   2be84:	e5ef883a 	add	r23,fp,r23
   2be88:	40bfffc4 	addi	r2,r8,-1
   2be8c:	bf00392e 	bgeu	r23,fp,2bf74 <__divdf3+0x75c>
   2be90:	1011883a 	mov	r8,r2
   2be94:	ba7fc41e 	bne	r23,r9,2bda8 <__alt_data_end+0xfffebda8>
   2be98:	b0ffc31e 	bne	r22,r3,2bda8 <__alt_data_end+0xfffebda8>
   2be9c:	003fc306 	br	2bdac <__alt_data_end+0xfffebdac>
   2bea0:	143ff604 	addi	r16,r2,-40
   2bea4:	9c20983a 	sll	r16,r19,r16
   2bea8:	0025883a 	mov	r18,zero
   2beac:	003ee206 	br	2ba38 <__alt_data_end+0xfffeba38>
   2beb0:	d9800315 	stw	r6,12(sp)
   2beb4:	d9c00215 	stw	r7,8(sp)
   2beb8:	002d5700 	call	2d570 <__clzsi2>
   2bebc:	10800804 	addi	r2,r2,32
   2bec0:	d9c00217 	ldw	r7,8(sp)
   2bec4:	d9800317 	ldw	r6,12(sp)
   2bec8:	003ed106 	br	2ba10 <__alt_data_end+0xfffeba10>
   2becc:	147ff604 	addi	r17,r2,-40
   2bed0:	3462983a 	sll	r17,r6,r17
   2bed4:	0011883a 	mov	r8,zero
   2bed8:	003ef506 	br	2bab0 <__alt_data_end+0xfffebab0>
   2bedc:	3009883a 	mov	r4,r6
   2bee0:	d9800315 	stw	r6,12(sp)
   2bee4:	da400115 	stw	r9,4(sp)
   2bee8:	002d5700 	call	2d570 <__clzsi2>
   2beec:	10800804 	addi	r2,r2,32
   2bef0:	da400117 	ldw	r9,4(sp)
   2bef4:	d9800317 	ldw	r6,12(sp)
   2bef8:	003ee306 	br	2ba88 <__alt_data_end+0xfffeba88>
   2befc:	85a1883a 	add	r16,r16,r22
   2bf00:	8585803a 	cmpltu	r2,r16,r22
   2bf04:	1705883a 	add	r2,r2,fp
   2bf08:	14a5883a 	add	r18,r2,r18
   2bf0c:	88bfffc4 	addi	r2,r17,-1
   2bf10:	e4800c2e 	bgeu	fp,r18,2bf44 <__divdf3+0x72c>
   2bf14:	90c03e36 	bltu	r18,r3,2c010 <__divdf3+0x7f8>
   2bf18:	1c806926 	beq	r3,r18,2c0c0 <__divdf3+0x8a8>
   2bf1c:	90c7c83a 	sub	r3,r18,r3
   2bf20:	1023883a 	mov	r17,r2
   2bf24:	003f5206 	br	2bc70 <__alt_data_end+0xfffebc70>
   2bf28:	923f0436 	bltu	r18,r8,2bb3c <__alt_data_end+0xfffebb3c>
   2bf2c:	800897fa 	slli	r4,r16,31
   2bf30:	9004d07a 	srli	r2,r18,1
   2bf34:	8006d07a 	srli	r3,r16,1
   2bf38:	902097fa 	slli	r16,r18,31
   2bf3c:	20a4b03a 	or	r18,r4,r2
   2bf40:	003f0106 	br	2bb48 <__alt_data_end+0xfffebb48>
   2bf44:	e4bff51e 	bne	fp,r18,2bf1c <__alt_data_end+0xfffebf1c>
   2bf48:	85bff22e 	bgeu	r16,r22,2bf14 <__alt_data_end+0xfffebf14>
   2bf4c:	e0c7c83a 	sub	r3,fp,r3
   2bf50:	1023883a 	mov	r17,r2
   2bf54:	003f4606 	br	2bc70 <__alt_data_end+0xfffebc70>
   2bf58:	100f883a 	mov	r7,r2
   2bf5c:	003f2b06 	br	2bc0c <__alt_data_end+0xfffebc0c>
   2bf60:	180d883a 	mov	r6,r3
   2bf64:	003f1306 	br	2bbb4 <__alt_data_end+0xfffebbb4>
   2bf68:	813fe436 	bltu	r16,r4,2befc <__alt_data_end+0xfffebefc>
   2bf6c:	0007883a 	mov	r3,zero
   2bf70:	003f3f06 	br	2bc70 <__alt_data_end+0xfffebc70>
   2bf74:	ba402c36 	bltu	r23,r9,2c028 <__divdf3+0x810>
   2bf78:	4dc05426 	beq	r9,r23,2c0cc <__divdf3+0x8b4>
   2bf7c:	1011883a 	mov	r8,r2
   2bf80:	003f8906 	br	2bda8 <__alt_data_end+0xfffebda8>
   2bf84:	023fffc4 	movi	r8,-1
   2bf88:	003f8806 	br	2bdac <__alt_data_end+0xfffebdac>
   2bf8c:	1811883a 	mov	r8,r3
   2bf90:	003f5406 	br	2bce4 <__alt_data_end+0xfffebce4>
   2bf94:	1025883a 	mov	r18,r2
   2bf98:	003f6d06 	br	2bd50 <__alt_data_end+0xfffebd50>
   2bf9c:	b827883a 	mov	r19,r23
   2bfa0:	003f8206 	br	2bdac <__alt_data_end+0xfffebdac>
   2bfa4:	010007c4 	movi	r4,31
   2bfa8:	20c02616 	blt	r4,r3,2c044 <__divdf3+0x82c>
   2bfac:	00800804 	movi	r2,32
   2bfb0:	10c5c83a 	sub	r2,r2,r3
   2bfb4:	888a983a 	sll	r5,r17,r2
   2bfb8:	40c8d83a 	srl	r4,r8,r3
   2bfbc:	4084983a 	sll	r2,r8,r2
   2bfc0:	88e2d83a 	srl	r17,r17,r3
   2bfc4:	2906b03a 	or	r3,r5,r4
   2bfc8:	1004c03a 	cmpne	r2,r2,zero
   2bfcc:	1886b03a 	or	r3,r3,r2
   2bfd0:	188001cc 	andi	r2,r3,7
   2bfd4:	10000726 	beq	r2,zero,2bff4 <__divdf3+0x7dc>
   2bfd8:	188003cc 	andi	r2,r3,15
   2bfdc:	01000104 	movi	r4,4
   2bfe0:	11000426 	beq	r2,r4,2bff4 <__divdf3+0x7dc>
   2bfe4:	1805883a 	mov	r2,r3
   2bfe8:	10c00104 	addi	r3,r2,4
   2bfec:	1885803a 	cmpltu	r2,r3,r2
   2bff0:	88a3883a 	add	r17,r17,r2
   2bff4:	8880202c 	andhi	r2,r17,128
   2bff8:	10002726 	beq	r2,zero,2c098 <__divdf3+0x880>
   2bffc:	98c0004c 	andi	r3,r19,1
   2c000:	00800044 	movi	r2,1
   2c004:	000b883a 	mov	r5,zero
   2c008:	0025883a 	mov	r18,zero
   2c00c:	003e6106 	br	2b994 <__alt_data_end+0xfffeb994>
   2c010:	85a1883a 	add	r16,r16,r22
   2c014:	8585803a 	cmpltu	r2,r16,r22
   2c018:	1705883a 	add	r2,r2,fp
   2c01c:	14a5883a 	add	r18,r2,r18
   2c020:	8c7fff84 	addi	r17,r17,-2
   2c024:	003f1106 	br	2bc6c <__alt_data_end+0xfffebc6c>
   2c028:	b589883a 	add	r4,r22,r22
   2c02c:	25ad803a 	cmpltu	r22,r4,r22
   2c030:	b739883a 	add	fp,r22,fp
   2c034:	40bfff84 	addi	r2,r8,-2
   2c038:	bf2f883a 	add	r23,r23,fp
   2c03c:	202d883a 	mov	r22,r4
   2c040:	003f9306 	br	2be90 <__alt_data_end+0xfffebe90>
   2c044:	013ff844 	movi	r4,-31
   2c048:	2085c83a 	sub	r2,r4,r2
   2c04c:	8888d83a 	srl	r4,r17,r2
   2c050:	00800804 	movi	r2,32
   2c054:	18802126 	beq	r3,r2,2c0dc <__divdf3+0x8c4>
   2c058:	00801004 	movi	r2,64
   2c05c:	10c5c83a 	sub	r2,r2,r3
   2c060:	8884983a 	sll	r2,r17,r2
   2c064:	1204b03a 	or	r2,r2,r8
   2c068:	1004c03a 	cmpne	r2,r2,zero
   2c06c:	2084b03a 	or	r2,r4,r2
   2c070:	144001cc 	andi	r17,r2,7
   2c074:	88000d1e 	bne	r17,zero,2c0ac <__divdf3+0x894>
   2c078:	000b883a 	mov	r5,zero
   2c07c:	1024d0fa 	srli	r18,r2,3
   2c080:	98c0004c 	andi	r3,r19,1
   2c084:	0005883a 	mov	r2,zero
   2c088:	9464b03a 	or	r18,r18,r17
   2c08c:	003e4106 	br	2b994 <__alt_data_end+0xfffeb994>
   2c090:	1007883a 	mov	r3,r2
   2c094:	0023883a 	mov	r17,zero
   2c098:	880a927a 	slli	r5,r17,9
   2c09c:	1805883a 	mov	r2,r3
   2c0a0:	8822977a 	slli	r17,r17,29
   2c0a4:	280ad33a 	srli	r5,r5,12
   2c0a8:	003ff406 	br	2c07c <__alt_data_end+0xfffec07c>
   2c0ac:	10c003cc 	andi	r3,r2,15
   2c0b0:	01000104 	movi	r4,4
   2c0b4:	193ff626 	beq	r3,r4,2c090 <__alt_data_end+0xfffec090>
   2c0b8:	0023883a 	mov	r17,zero
   2c0bc:	003fca06 	br	2bfe8 <__alt_data_end+0xfffebfe8>
   2c0c0:	813fd336 	bltu	r16,r4,2c010 <__alt_data_end+0xfffec010>
   2c0c4:	1023883a 	mov	r17,r2
   2c0c8:	003fa806 	br	2bf6c <__alt_data_end+0xfffebf6c>
   2c0cc:	b0ffd636 	bltu	r22,r3,2c028 <__alt_data_end+0xfffec028>
   2c0d0:	1011883a 	mov	r8,r2
   2c0d4:	b0ff341e 	bne	r22,r3,2bda8 <__alt_data_end+0xfffebda8>
   2c0d8:	003f3406 	br	2bdac <__alt_data_end+0xfffebdac>
   2c0dc:	0005883a 	mov	r2,zero
   2c0e0:	003fe006 	br	2c064 <__alt_data_end+0xfffec064>
   2c0e4:	00800434 	movhi	r2,16
   2c0e8:	89400234 	orhi	r5,r17,8
   2c0ec:	10bfffc4 	addi	r2,r2,-1
   2c0f0:	b807883a 	mov	r3,r23
   2c0f4:	288a703a 	and	r5,r5,r2
   2c0f8:	4025883a 	mov	r18,r8
   2c0fc:	003e8206 	br	2bb08 <__alt_data_end+0xfffebb08>

0002c100 <__eqdf2>:
   2c100:	2804d53a 	srli	r2,r5,20
   2c104:	3806d53a 	srli	r3,r7,20
   2c108:	02000434 	movhi	r8,16
   2c10c:	423fffc4 	addi	r8,r8,-1
   2c110:	1081ffcc 	andi	r2,r2,2047
   2c114:	0281ffc4 	movi	r10,2047
   2c118:	2a12703a 	and	r9,r5,r8
   2c11c:	18c1ffcc 	andi	r3,r3,2047
   2c120:	3a10703a 	and	r8,r7,r8
   2c124:	280ad7fa 	srli	r5,r5,31
   2c128:	380ed7fa 	srli	r7,r7,31
   2c12c:	12801026 	beq	r2,r10,2c170 <__eqdf2+0x70>
   2c130:	0281ffc4 	movi	r10,2047
   2c134:	1a800a26 	beq	r3,r10,2c160 <__eqdf2+0x60>
   2c138:	10c00226 	beq	r2,r3,2c144 <__eqdf2+0x44>
   2c13c:	00800044 	movi	r2,1
   2c140:	f800283a 	ret
   2c144:	4a3ffd1e 	bne	r9,r8,2c13c <__alt_data_end+0xfffec13c>
   2c148:	21bffc1e 	bne	r4,r6,2c13c <__alt_data_end+0xfffec13c>
   2c14c:	29c00c26 	beq	r5,r7,2c180 <__eqdf2+0x80>
   2c150:	103ffa1e 	bne	r2,zero,2c13c <__alt_data_end+0xfffec13c>
   2c154:	2244b03a 	or	r2,r4,r9
   2c158:	1004c03a 	cmpne	r2,r2,zero
   2c15c:	f800283a 	ret
   2c160:	3214b03a 	or	r10,r6,r8
   2c164:	503ff426 	beq	r10,zero,2c138 <__alt_data_end+0xfffec138>
   2c168:	00800044 	movi	r2,1
   2c16c:	f800283a 	ret
   2c170:	2254b03a 	or	r10,r4,r9
   2c174:	503fee26 	beq	r10,zero,2c130 <__alt_data_end+0xfffec130>
   2c178:	00800044 	movi	r2,1
   2c17c:	f800283a 	ret
   2c180:	0005883a 	mov	r2,zero
   2c184:	f800283a 	ret

0002c188 <__gedf2>:
   2c188:	2804d53a 	srli	r2,r5,20
   2c18c:	3806d53a 	srli	r3,r7,20
   2c190:	02000434 	movhi	r8,16
   2c194:	423fffc4 	addi	r8,r8,-1
   2c198:	1081ffcc 	andi	r2,r2,2047
   2c19c:	0241ffc4 	movi	r9,2047
   2c1a0:	2a14703a 	and	r10,r5,r8
   2c1a4:	18c1ffcc 	andi	r3,r3,2047
   2c1a8:	3a10703a 	and	r8,r7,r8
   2c1ac:	280ad7fa 	srli	r5,r5,31
   2c1b0:	380ed7fa 	srli	r7,r7,31
   2c1b4:	12401d26 	beq	r2,r9,2c22c <__gedf2+0xa4>
   2c1b8:	0241ffc4 	movi	r9,2047
   2c1bc:	1a401226 	beq	r3,r9,2c208 <__gedf2+0x80>
   2c1c0:	1000081e 	bne	r2,zero,2c1e4 <__gedf2+0x5c>
   2c1c4:	2296b03a 	or	r11,r4,r10
   2c1c8:	5813003a 	cmpeq	r9,r11,zero
   2c1cc:	1800091e 	bne	r3,zero,2c1f4 <__gedf2+0x6c>
   2c1d0:	3218b03a 	or	r12,r6,r8
   2c1d4:	6000071e 	bne	r12,zero,2c1f4 <__gedf2+0x6c>
   2c1d8:	0005883a 	mov	r2,zero
   2c1dc:	5800101e 	bne	r11,zero,2c220 <__gedf2+0x98>
   2c1e0:	f800283a 	ret
   2c1e4:	18000c1e 	bne	r3,zero,2c218 <__gedf2+0x90>
   2c1e8:	3212b03a 	or	r9,r6,r8
   2c1ec:	48000c26 	beq	r9,zero,2c220 <__gedf2+0x98>
   2c1f0:	0013883a 	mov	r9,zero
   2c1f4:	39c03fcc 	andi	r7,r7,255
   2c1f8:	48000826 	beq	r9,zero,2c21c <__gedf2+0x94>
   2c1fc:	38000926 	beq	r7,zero,2c224 <__gedf2+0x9c>
   2c200:	00800044 	movi	r2,1
   2c204:	f800283a 	ret
   2c208:	3212b03a 	or	r9,r6,r8
   2c20c:	483fec26 	beq	r9,zero,2c1c0 <__alt_data_end+0xfffec1c0>
   2c210:	00bfff84 	movi	r2,-2
   2c214:	f800283a 	ret
   2c218:	39c03fcc 	andi	r7,r7,255
   2c21c:	29c00626 	beq	r5,r7,2c238 <__gedf2+0xb0>
   2c220:	283ff726 	beq	r5,zero,2c200 <__alt_data_end+0xfffec200>
   2c224:	00bfffc4 	movi	r2,-1
   2c228:	f800283a 	ret
   2c22c:	2292b03a 	or	r9,r4,r10
   2c230:	483fe126 	beq	r9,zero,2c1b8 <__alt_data_end+0xfffec1b8>
   2c234:	003ff606 	br	2c210 <__alt_data_end+0xfffec210>
   2c238:	18bff916 	blt	r3,r2,2c220 <__alt_data_end+0xfffec220>
   2c23c:	10c00316 	blt	r2,r3,2c24c <__gedf2+0xc4>
   2c240:	42bff736 	bltu	r8,r10,2c220 <__alt_data_end+0xfffec220>
   2c244:	52000326 	beq	r10,r8,2c254 <__gedf2+0xcc>
   2c248:	5200042e 	bgeu	r10,r8,2c25c <__gedf2+0xd4>
   2c24c:	283fec1e 	bne	r5,zero,2c200 <__alt_data_end+0xfffec200>
   2c250:	003ff406 	br	2c224 <__alt_data_end+0xfffec224>
   2c254:	313ff236 	bltu	r6,r4,2c220 <__alt_data_end+0xfffec220>
   2c258:	21bffc36 	bltu	r4,r6,2c24c <__alt_data_end+0xfffec24c>
   2c25c:	0005883a 	mov	r2,zero
   2c260:	f800283a 	ret

0002c264 <__ledf2>:
   2c264:	2804d53a 	srli	r2,r5,20
   2c268:	3810d53a 	srli	r8,r7,20
   2c26c:	00c00434 	movhi	r3,16
   2c270:	18ffffc4 	addi	r3,r3,-1
   2c274:	1081ffcc 	andi	r2,r2,2047
   2c278:	0241ffc4 	movi	r9,2047
   2c27c:	28d4703a 	and	r10,r5,r3
   2c280:	4201ffcc 	andi	r8,r8,2047
   2c284:	38c6703a 	and	r3,r7,r3
   2c288:	280ad7fa 	srli	r5,r5,31
   2c28c:	380ed7fa 	srli	r7,r7,31
   2c290:	12401f26 	beq	r2,r9,2c310 <__ledf2+0xac>
   2c294:	0241ffc4 	movi	r9,2047
   2c298:	42401426 	beq	r8,r9,2c2ec <__ledf2+0x88>
   2c29c:	1000091e 	bne	r2,zero,2c2c4 <__ledf2+0x60>
   2c2a0:	2296b03a 	or	r11,r4,r10
   2c2a4:	5813003a 	cmpeq	r9,r11,zero
   2c2a8:	29403fcc 	andi	r5,r5,255
   2c2ac:	40000a1e 	bne	r8,zero,2c2d8 <__ledf2+0x74>
   2c2b0:	30d8b03a 	or	r12,r6,r3
   2c2b4:	6000081e 	bne	r12,zero,2c2d8 <__ledf2+0x74>
   2c2b8:	0005883a 	mov	r2,zero
   2c2bc:	5800111e 	bne	r11,zero,2c304 <__ledf2+0xa0>
   2c2c0:	f800283a 	ret
   2c2c4:	29403fcc 	andi	r5,r5,255
   2c2c8:	40000c1e 	bne	r8,zero,2c2fc <__ledf2+0x98>
   2c2cc:	30d2b03a 	or	r9,r6,r3
   2c2d0:	48000c26 	beq	r9,zero,2c304 <__ledf2+0xa0>
   2c2d4:	0013883a 	mov	r9,zero
   2c2d8:	39c03fcc 	andi	r7,r7,255
   2c2dc:	48000826 	beq	r9,zero,2c300 <__ledf2+0x9c>
   2c2e0:	38001126 	beq	r7,zero,2c328 <__ledf2+0xc4>
   2c2e4:	00800044 	movi	r2,1
   2c2e8:	f800283a 	ret
   2c2ec:	30d2b03a 	or	r9,r6,r3
   2c2f0:	483fea26 	beq	r9,zero,2c29c <__alt_data_end+0xfffec29c>
   2c2f4:	00800084 	movi	r2,2
   2c2f8:	f800283a 	ret
   2c2fc:	39c03fcc 	andi	r7,r7,255
   2c300:	39400726 	beq	r7,r5,2c320 <__ledf2+0xbc>
   2c304:	2800081e 	bne	r5,zero,2c328 <__ledf2+0xc4>
   2c308:	00800044 	movi	r2,1
   2c30c:	f800283a 	ret
   2c310:	2292b03a 	or	r9,r4,r10
   2c314:	483fdf26 	beq	r9,zero,2c294 <__alt_data_end+0xfffec294>
   2c318:	00800084 	movi	r2,2
   2c31c:	f800283a 	ret
   2c320:	4080030e 	bge	r8,r2,2c330 <__ledf2+0xcc>
   2c324:	383fef26 	beq	r7,zero,2c2e4 <__alt_data_end+0xfffec2e4>
   2c328:	00bfffc4 	movi	r2,-1
   2c32c:	f800283a 	ret
   2c330:	123feb16 	blt	r2,r8,2c2e0 <__alt_data_end+0xfffec2e0>
   2c334:	1abff336 	bltu	r3,r10,2c304 <__alt_data_end+0xfffec304>
   2c338:	50c00326 	beq	r10,r3,2c348 <__ledf2+0xe4>
   2c33c:	50c0042e 	bgeu	r10,r3,2c350 <__ledf2+0xec>
   2c340:	283fe81e 	bne	r5,zero,2c2e4 <__alt_data_end+0xfffec2e4>
   2c344:	003ff806 	br	2c328 <__alt_data_end+0xfffec328>
   2c348:	313fee36 	bltu	r6,r4,2c304 <__alt_data_end+0xfffec304>
   2c34c:	21bffc36 	bltu	r4,r6,2c340 <__alt_data_end+0xfffec340>
   2c350:	0005883a 	mov	r2,zero
   2c354:	f800283a 	ret

0002c358 <__muldf3>:
   2c358:	defff304 	addi	sp,sp,-52
   2c35c:	2804d53a 	srli	r2,r5,20
   2c360:	dd800915 	stw	r22,36(sp)
   2c364:	282cd7fa 	srli	r22,r5,31
   2c368:	dc000315 	stw	r16,12(sp)
   2c36c:	04000434 	movhi	r16,16
   2c370:	dd400815 	stw	r21,32(sp)
   2c374:	dc800515 	stw	r18,20(sp)
   2c378:	843fffc4 	addi	r16,r16,-1
   2c37c:	dfc00c15 	stw	ra,48(sp)
   2c380:	df000b15 	stw	fp,44(sp)
   2c384:	ddc00a15 	stw	r23,40(sp)
   2c388:	dd000715 	stw	r20,28(sp)
   2c38c:	dcc00615 	stw	r19,24(sp)
   2c390:	dc400415 	stw	r17,16(sp)
   2c394:	1481ffcc 	andi	r18,r2,2047
   2c398:	2c20703a 	and	r16,r5,r16
   2c39c:	b02b883a 	mov	r21,r22
   2c3a0:	b2403fcc 	andi	r9,r22,255
   2c3a4:	90006026 	beq	r18,zero,2c528 <__muldf3+0x1d0>
   2c3a8:	0081ffc4 	movi	r2,2047
   2c3ac:	2029883a 	mov	r20,r4
   2c3b0:	90803626 	beq	r18,r2,2c48c <__muldf3+0x134>
   2c3b4:	80800434 	orhi	r2,r16,16
   2c3b8:	100490fa 	slli	r2,r2,3
   2c3bc:	2020d77a 	srli	r16,r4,29
   2c3c0:	202890fa 	slli	r20,r4,3
   2c3c4:	94bf0044 	addi	r18,r18,-1023
   2c3c8:	80a0b03a 	or	r16,r16,r2
   2c3cc:	0027883a 	mov	r19,zero
   2c3d0:	0039883a 	mov	fp,zero
   2c3d4:	3804d53a 	srli	r2,r7,20
   2c3d8:	382ed7fa 	srli	r23,r7,31
   2c3dc:	04400434 	movhi	r17,16
   2c3e0:	8c7fffc4 	addi	r17,r17,-1
   2c3e4:	1081ffcc 	andi	r2,r2,2047
   2c3e8:	3011883a 	mov	r8,r6
   2c3ec:	3c62703a 	and	r17,r7,r17
   2c3f0:	ba803fcc 	andi	r10,r23,255
   2c3f4:	10006d26 	beq	r2,zero,2c5ac <__muldf3+0x254>
   2c3f8:	00c1ffc4 	movi	r3,2047
   2c3fc:	10c06526 	beq	r2,r3,2c594 <__muldf3+0x23c>
   2c400:	88c00434 	orhi	r3,r17,16
   2c404:	180690fa 	slli	r3,r3,3
   2c408:	3022d77a 	srli	r17,r6,29
   2c40c:	301090fa 	slli	r8,r6,3
   2c410:	10bf0044 	addi	r2,r2,-1023
   2c414:	88e2b03a 	or	r17,r17,r3
   2c418:	000b883a 	mov	r5,zero
   2c41c:	9085883a 	add	r2,r18,r2
   2c420:	2cc8b03a 	or	r4,r5,r19
   2c424:	00c003c4 	movi	r3,15
   2c428:	bdacf03a 	xor	r22,r23,r22
   2c42c:	12c00044 	addi	r11,r2,1
   2c430:	19009936 	bltu	r3,r4,2c698 <__muldf3+0x340>
   2c434:	200890ba 	slli	r4,r4,2
   2c438:	00c000f4 	movhi	r3,3
   2c43c:	18f11304 	addi	r3,r3,-15284
   2c440:	20c9883a 	add	r4,r4,r3
   2c444:	20c00017 	ldw	r3,0(r4)
   2c448:	1800683a 	jmp	r3
   2c44c:	0002c698 	cmpnei	zero,zero,2842
   2c450:	0002c4ac 	andhi	zero,zero,2834
   2c454:	0002c4ac 	andhi	zero,zero,2834
   2c458:	0002c4a8 	cmpgeui	zero,zero,2834
   2c45c:	0002c674 	movhi	zero,2841
   2c460:	0002c674 	movhi	zero,2841
   2c464:	0002c65c 	xori	zero,zero,2841
   2c468:	0002c4a8 	cmpgeui	zero,zero,2834
   2c46c:	0002c674 	movhi	zero,2841
   2c470:	0002c65c 	xori	zero,zero,2841
   2c474:	0002c674 	movhi	zero,2841
   2c478:	0002c4a8 	cmpgeui	zero,zero,2834
   2c47c:	0002c684 	movi	zero,2842
   2c480:	0002c684 	movi	zero,2842
   2c484:	0002c684 	movi	zero,2842
   2c488:	0002c8a0 	cmpeqi	zero,zero,2850
   2c48c:	2404b03a 	or	r2,r4,r16
   2c490:	10006f1e 	bne	r2,zero,2c650 <__muldf3+0x2f8>
   2c494:	04c00204 	movi	r19,8
   2c498:	0021883a 	mov	r16,zero
   2c49c:	0029883a 	mov	r20,zero
   2c4a0:	07000084 	movi	fp,2
   2c4a4:	003fcb06 	br	2c3d4 <__alt_data_end+0xfffec3d4>
   2c4a8:	502d883a 	mov	r22,r10
   2c4ac:	00800084 	movi	r2,2
   2c4b0:	28805726 	beq	r5,r2,2c610 <__muldf3+0x2b8>
   2c4b4:	008000c4 	movi	r2,3
   2c4b8:	28816626 	beq	r5,r2,2ca54 <__muldf3+0x6fc>
   2c4bc:	00800044 	movi	r2,1
   2c4c0:	2881411e 	bne	r5,r2,2c9c8 <__muldf3+0x670>
   2c4c4:	b02b883a 	mov	r21,r22
   2c4c8:	0005883a 	mov	r2,zero
   2c4cc:	000b883a 	mov	r5,zero
   2c4d0:	0029883a 	mov	r20,zero
   2c4d4:	1004953a 	slli	r2,r2,20
   2c4d8:	a8c03fcc 	andi	r3,r21,255
   2c4dc:	04400434 	movhi	r17,16
   2c4e0:	8c7fffc4 	addi	r17,r17,-1
   2c4e4:	180697fa 	slli	r3,r3,31
   2c4e8:	2c4a703a 	and	r5,r5,r17
   2c4ec:	288ab03a 	or	r5,r5,r2
   2c4f0:	28c6b03a 	or	r3,r5,r3
   2c4f4:	a005883a 	mov	r2,r20
   2c4f8:	dfc00c17 	ldw	ra,48(sp)
   2c4fc:	df000b17 	ldw	fp,44(sp)
   2c500:	ddc00a17 	ldw	r23,40(sp)
   2c504:	dd800917 	ldw	r22,36(sp)
   2c508:	dd400817 	ldw	r21,32(sp)
   2c50c:	dd000717 	ldw	r20,28(sp)
   2c510:	dcc00617 	ldw	r19,24(sp)
   2c514:	dc800517 	ldw	r18,20(sp)
   2c518:	dc400417 	ldw	r17,16(sp)
   2c51c:	dc000317 	ldw	r16,12(sp)
   2c520:	dec00d04 	addi	sp,sp,52
   2c524:	f800283a 	ret
   2c528:	2404b03a 	or	r2,r4,r16
   2c52c:	2027883a 	mov	r19,r4
   2c530:	10004226 	beq	r2,zero,2c63c <__muldf3+0x2e4>
   2c534:	8000fc26 	beq	r16,zero,2c928 <__muldf3+0x5d0>
   2c538:	8009883a 	mov	r4,r16
   2c53c:	d9800215 	stw	r6,8(sp)
   2c540:	d9c00015 	stw	r7,0(sp)
   2c544:	da400115 	stw	r9,4(sp)
   2c548:	002d5700 	call	2d570 <__clzsi2>
   2c54c:	d9800217 	ldw	r6,8(sp)
   2c550:	d9c00017 	ldw	r7,0(sp)
   2c554:	da400117 	ldw	r9,4(sp)
   2c558:	113ffd44 	addi	r4,r2,-11
   2c55c:	00c00704 	movi	r3,28
   2c560:	1900ed16 	blt	r3,r4,2c918 <__muldf3+0x5c0>
   2c564:	00c00744 	movi	r3,29
   2c568:	147ffe04 	addi	r17,r2,-8
   2c56c:	1907c83a 	sub	r3,r3,r4
   2c570:	8460983a 	sll	r16,r16,r17
   2c574:	98c6d83a 	srl	r3,r19,r3
   2c578:	9c68983a 	sll	r20,r19,r17
   2c57c:	1c20b03a 	or	r16,r3,r16
   2c580:	1080fcc4 	addi	r2,r2,1011
   2c584:	00a5c83a 	sub	r18,zero,r2
   2c588:	0027883a 	mov	r19,zero
   2c58c:	0039883a 	mov	fp,zero
   2c590:	003f9006 	br	2c3d4 <__alt_data_end+0xfffec3d4>
   2c594:	3446b03a 	or	r3,r6,r17
   2c598:	1800261e 	bne	r3,zero,2c634 <__muldf3+0x2dc>
   2c59c:	0023883a 	mov	r17,zero
   2c5a0:	0011883a 	mov	r8,zero
   2c5a4:	01400084 	movi	r5,2
   2c5a8:	003f9c06 	br	2c41c <__alt_data_end+0xfffec41c>
   2c5ac:	3446b03a 	or	r3,r6,r17
   2c5b0:	18001c26 	beq	r3,zero,2c624 <__muldf3+0x2cc>
   2c5b4:	8800ce26 	beq	r17,zero,2c8f0 <__muldf3+0x598>
   2c5b8:	8809883a 	mov	r4,r17
   2c5bc:	d9800215 	stw	r6,8(sp)
   2c5c0:	da400115 	stw	r9,4(sp)
   2c5c4:	da800015 	stw	r10,0(sp)
   2c5c8:	002d5700 	call	2d570 <__clzsi2>
   2c5cc:	d9800217 	ldw	r6,8(sp)
   2c5d0:	da400117 	ldw	r9,4(sp)
   2c5d4:	da800017 	ldw	r10,0(sp)
   2c5d8:	113ffd44 	addi	r4,r2,-11
   2c5dc:	00c00704 	movi	r3,28
   2c5e0:	1900bf16 	blt	r3,r4,2c8e0 <__muldf3+0x588>
   2c5e4:	00c00744 	movi	r3,29
   2c5e8:	123ffe04 	addi	r8,r2,-8
   2c5ec:	1907c83a 	sub	r3,r3,r4
   2c5f0:	8a22983a 	sll	r17,r17,r8
   2c5f4:	30c6d83a 	srl	r3,r6,r3
   2c5f8:	3210983a 	sll	r8,r6,r8
   2c5fc:	1c62b03a 	or	r17,r3,r17
   2c600:	1080fcc4 	addi	r2,r2,1011
   2c604:	0085c83a 	sub	r2,zero,r2
   2c608:	000b883a 	mov	r5,zero
   2c60c:	003f8306 	br	2c41c <__alt_data_end+0xfffec41c>
   2c610:	b02b883a 	mov	r21,r22
   2c614:	0081ffc4 	movi	r2,2047
   2c618:	000b883a 	mov	r5,zero
   2c61c:	0029883a 	mov	r20,zero
   2c620:	003fac06 	br	2c4d4 <__alt_data_end+0xfffec4d4>
   2c624:	0023883a 	mov	r17,zero
   2c628:	0011883a 	mov	r8,zero
   2c62c:	01400044 	movi	r5,1
   2c630:	003f7a06 	br	2c41c <__alt_data_end+0xfffec41c>
   2c634:	014000c4 	movi	r5,3
   2c638:	003f7806 	br	2c41c <__alt_data_end+0xfffec41c>
   2c63c:	04c00104 	movi	r19,4
   2c640:	0021883a 	mov	r16,zero
   2c644:	0029883a 	mov	r20,zero
   2c648:	07000044 	movi	fp,1
   2c64c:	003f6106 	br	2c3d4 <__alt_data_end+0xfffec3d4>
   2c650:	04c00304 	movi	r19,12
   2c654:	070000c4 	movi	fp,3
   2c658:	003f5e06 	br	2c3d4 <__alt_data_end+0xfffec3d4>
   2c65c:	01400434 	movhi	r5,16
   2c660:	002b883a 	mov	r21,zero
   2c664:	297fffc4 	addi	r5,r5,-1
   2c668:	053fffc4 	movi	r20,-1
   2c66c:	0081ffc4 	movi	r2,2047
   2c670:	003f9806 	br	2c4d4 <__alt_data_end+0xfffec4d4>
   2c674:	8023883a 	mov	r17,r16
   2c678:	a011883a 	mov	r8,r20
   2c67c:	e00b883a 	mov	r5,fp
   2c680:	003f8a06 	br	2c4ac <__alt_data_end+0xfffec4ac>
   2c684:	8023883a 	mov	r17,r16
   2c688:	a011883a 	mov	r8,r20
   2c68c:	482d883a 	mov	r22,r9
   2c690:	e00b883a 	mov	r5,fp
   2c694:	003f8506 	br	2c4ac <__alt_data_end+0xfffec4ac>
   2c698:	a00ad43a 	srli	r5,r20,16
   2c69c:	401ad43a 	srli	r13,r8,16
   2c6a0:	a53fffcc 	andi	r20,r20,65535
   2c6a4:	423fffcc 	andi	r8,r8,65535
   2c6a8:	4519383a 	mul	r12,r8,r20
   2c6ac:	4147383a 	mul	r3,r8,r5
   2c6b0:	6d09383a 	mul	r4,r13,r20
   2c6b4:	600cd43a 	srli	r6,r12,16
   2c6b8:	2b5d383a 	mul	r14,r5,r13
   2c6bc:	20c9883a 	add	r4,r4,r3
   2c6c0:	310d883a 	add	r6,r6,r4
   2c6c4:	30c0022e 	bgeu	r6,r3,2c6d0 <__muldf3+0x378>
   2c6c8:	00c00074 	movhi	r3,1
   2c6cc:	70dd883a 	add	r14,r14,r3
   2c6d0:	8826d43a 	srli	r19,r17,16
   2c6d4:	8bffffcc 	andi	r15,r17,65535
   2c6d8:	7d23383a 	mul	r17,r15,r20
   2c6dc:	7949383a 	mul	r4,r15,r5
   2c6e0:	9d29383a 	mul	r20,r19,r20
   2c6e4:	8814d43a 	srli	r10,r17,16
   2c6e8:	3012943a 	slli	r9,r6,16
   2c6ec:	a129883a 	add	r20,r20,r4
   2c6f0:	633fffcc 	andi	r12,r12,65535
   2c6f4:	5515883a 	add	r10,r10,r20
   2c6f8:	3006d43a 	srli	r3,r6,16
   2c6fc:	4b13883a 	add	r9,r9,r12
   2c700:	2ccb383a 	mul	r5,r5,r19
   2c704:	5100022e 	bgeu	r10,r4,2c710 <__muldf3+0x3b8>
   2c708:	01000074 	movhi	r4,1
   2c70c:	290b883a 	add	r5,r5,r4
   2c710:	802ad43a 	srli	r21,r16,16
   2c714:	843fffcc 	andi	r16,r16,65535
   2c718:	440d383a 	mul	r6,r8,r16
   2c71c:	4565383a 	mul	r18,r8,r21
   2c720:	8349383a 	mul	r4,r16,r13
   2c724:	500e943a 	slli	r7,r10,16
   2c728:	3010d43a 	srli	r8,r6,16
   2c72c:	5028d43a 	srli	r20,r10,16
   2c730:	2489883a 	add	r4,r4,r18
   2c734:	8abfffcc 	andi	r10,r17,65535
   2c738:	3a95883a 	add	r10,r7,r10
   2c73c:	4119883a 	add	r12,r8,r4
   2c740:	a169883a 	add	r20,r20,r5
   2c744:	1a87883a 	add	r3,r3,r10
   2c748:	6d5b383a 	mul	r13,r13,r21
   2c74c:	6480022e 	bgeu	r12,r18,2c758 <__muldf3+0x400>
   2c750:	01000074 	movhi	r4,1
   2c754:	691b883a 	add	r13,r13,r4
   2c758:	7c25383a 	mul	r18,r15,r16
   2c75c:	7d4b383a 	mul	r5,r15,r21
   2c760:	84cf383a 	mul	r7,r16,r19
   2c764:	901ed43a 	srli	r15,r18,16
   2c768:	6008d43a 	srli	r4,r12,16
   2c76c:	6010943a 	slli	r8,r12,16
   2c770:	394f883a 	add	r7,r7,r5
   2c774:	333fffcc 	andi	r12,r6,65535
   2c778:	79df883a 	add	r15,r15,r7
   2c77c:	235b883a 	add	r13,r4,r13
   2c780:	9d63383a 	mul	r17,r19,r21
   2c784:	4309883a 	add	r4,r8,r12
   2c788:	7940022e 	bgeu	r15,r5,2c794 <__muldf3+0x43c>
   2c78c:	01400074 	movhi	r5,1
   2c790:	8963883a 	add	r17,r17,r5
   2c794:	780a943a 	slli	r5,r15,16
   2c798:	91bfffcc 	andi	r6,r18,65535
   2c79c:	70c7883a 	add	r3,r14,r3
   2c7a0:	298d883a 	add	r6,r5,r6
   2c7a4:	1a8f803a 	cmpltu	r7,r3,r10
   2c7a8:	350b883a 	add	r5,r6,r20
   2c7ac:	20c7883a 	add	r3,r4,r3
   2c7b0:	3955883a 	add	r10,r7,r5
   2c7b4:	1909803a 	cmpltu	r4,r3,r4
   2c7b8:	6a91883a 	add	r8,r13,r10
   2c7bc:	780cd43a 	srli	r6,r15,16
   2c7c0:	2219883a 	add	r12,r4,r8
   2c7c4:	2d0b803a 	cmpltu	r5,r5,r20
   2c7c8:	51cf803a 	cmpltu	r7,r10,r7
   2c7cc:	29ceb03a 	or	r7,r5,r7
   2c7d0:	4351803a 	cmpltu	r8,r8,r13
   2c7d4:	610b803a 	cmpltu	r5,r12,r4
   2c7d8:	4148b03a 	or	r4,r8,r5
   2c7dc:	398f883a 	add	r7,r7,r6
   2c7e0:	3909883a 	add	r4,r7,r4
   2c7e4:	1810927a 	slli	r8,r3,9
   2c7e8:	2449883a 	add	r4,r4,r17
   2c7ec:	2008927a 	slli	r4,r4,9
   2c7f0:	6022d5fa 	srli	r17,r12,23
   2c7f4:	1806d5fa 	srli	r3,r3,23
   2c7f8:	4252b03a 	or	r9,r8,r9
   2c7fc:	600a927a 	slli	r5,r12,9
   2c800:	4810c03a 	cmpne	r8,r9,zero
   2c804:	2462b03a 	or	r17,r4,r17
   2c808:	40c6b03a 	or	r3,r8,r3
   2c80c:	8900402c 	andhi	r4,r17,256
   2c810:	1950b03a 	or	r8,r3,r5
   2c814:	20000726 	beq	r4,zero,2c834 <__muldf3+0x4dc>
   2c818:	4006d07a 	srli	r3,r8,1
   2c81c:	880497fa 	slli	r2,r17,31
   2c820:	4200004c 	andi	r8,r8,1
   2c824:	8822d07a 	srli	r17,r17,1
   2c828:	1a10b03a 	or	r8,r3,r8
   2c82c:	1210b03a 	or	r8,r2,r8
   2c830:	5805883a 	mov	r2,r11
   2c834:	1140ffc4 	addi	r5,r2,1023
   2c838:	0140440e 	bge	zero,r5,2c94c <__muldf3+0x5f4>
   2c83c:	40c001cc 	andi	r3,r8,7
   2c840:	18000726 	beq	r3,zero,2c860 <__muldf3+0x508>
   2c844:	40c003cc 	andi	r3,r8,15
   2c848:	01000104 	movi	r4,4
   2c84c:	19000426 	beq	r3,r4,2c860 <__muldf3+0x508>
   2c850:	4107883a 	add	r3,r8,r4
   2c854:	1a11803a 	cmpltu	r8,r3,r8
   2c858:	8a23883a 	add	r17,r17,r8
   2c85c:	1811883a 	mov	r8,r3
   2c860:	88c0402c 	andhi	r3,r17,256
   2c864:	18000426 	beq	r3,zero,2c878 <__muldf3+0x520>
   2c868:	11410004 	addi	r5,r2,1024
   2c86c:	00bfc034 	movhi	r2,65280
   2c870:	10bfffc4 	addi	r2,r2,-1
   2c874:	88a2703a 	and	r17,r17,r2
   2c878:	0081ff84 	movi	r2,2046
   2c87c:	117f6416 	blt	r2,r5,2c610 <__alt_data_end+0xfffec610>
   2c880:	8828977a 	slli	r20,r17,29
   2c884:	4010d0fa 	srli	r8,r8,3
   2c888:	8822927a 	slli	r17,r17,9
   2c88c:	2881ffcc 	andi	r2,r5,2047
   2c890:	a228b03a 	or	r20,r20,r8
   2c894:	880ad33a 	srli	r5,r17,12
   2c898:	b02b883a 	mov	r21,r22
   2c89c:	003f0d06 	br	2c4d4 <__alt_data_end+0xfffec4d4>
   2c8a0:	8080022c 	andhi	r2,r16,8
   2c8a4:	10000926 	beq	r2,zero,2c8cc <__muldf3+0x574>
   2c8a8:	8880022c 	andhi	r2,r17,8
   2c8ac:	1000071e 	bne	r2,zero,2c8cc <__muldf3+0x574>
   2c8b0:	00800434 	movhi	r2,16
   2c8b4:	89400234 	orhi	r5,r17,8
   2c8b8:	10bfffc4 	addi	r2,r2,-1
   2c8bc:	b82b883a 	mov	r21,r23
   2c8c0:	288a703a 	and	r5,r5,r2
   2c8c4:	4029883a 	mov	r20,r8
   2c8c8:	003f6806 	br	2c66c <__alt_data_end+0xfffec66c>
   2c8cc:	00800434 	movhi	r2,16
   2c8d0:	81400234 	orhi	r5,r16,8
   2c8d4:	10bfffc4 	addi	r2,r2,-1
   2c8d8:	288a703a 	and	r5,r5,r2
   2c8dc:	003f6306 	br	2c66c <__alt_data_end+0xfffec66c>
   2c8e0:	147ff604 	addi	r17,r2,-40
   2c8e4:	3462983a 	sll	r17,r6,r17
   2c8e8:	0011883a 	mov	r8,zero
   2c8ec:	003f4406 	br	2c600 <__alt_data_end+0xfffec600>
   2c8f0:	3009883a 	mov	r4,r6
   2c8f4:	d9800215 	stw	r6,8(sp)
   2c8f8:	da400115 	stw	r9,4(sp)
   2c8fc:	da800015 	stw	r10,0(sp)
   2c900:	002d5700 	call	2d570 <__clzsi2>
   2c904:	10800804 	addi	r2,r2,32
   2c908:	da800017 	ldw	r10,0(sp)
   2c90c:	da400117 	ldw	r9,4(sp)
   2c910:	d9800217 	ldw	r6,8(sp)
   2c914:	003f3006 	br	2c5d8 <__alt_data_end+0xfffec5d8>
   2c918:	143ff604 	addi	r16,r2,-40
   2c91c:	9c20983a 	sll	r16,r19,r16
   2c920:	0029883a 	mov	r20,zero
   2c924:	003f1606 	br	2c580 <__alt_data_end+0xfffec580>
   2c928:	d9800215 	stw	r6,8(sp)
   2c92c:	d9c00015 	stw	r7,0(sp)
   2c930:	da400115 	stw	r9,4(sp)
   2c934:	002d5700 	call	2d570 <__clzsi2>
   2c938:	10800804 	addi	r2,r2,32
   2c93c:	da400117 	ldw	r9,4(sp)
   2c940:	d9c00017 	ldw	r7,0(sp)
   2c944:	d9800217 	ldw	r6,8(sp)
   2c948:	003f0306 	br	2c558 <__alt_data_end+0xfffec558>
   2c94c:	00c00044 	movi	r3,1
   2c950:	1947c83a 	sub	r3,r3,r5
   2c954:	00800e04 	movi	r2,56
   2c958:	10feda16 	blt	r2,r3,2c4c4 <__alt_data_end+0xfffec4c4>
   2c95c:	008007c4 	movi	r2,31
   2c960:	10c01b16 	blt	r2,r3,2c9d0 <__muldf3+0x678>
   2c964:	00800804 	movi	r2,32
   2c968:	10c5c83a 	sub	r2,r2,r3
   2c96c:	888a983a 	sll	r5,r17,r2
   2c970:	40c8d83a 	srl	r4,r8,r3
   2c974:	4084983a 	sll	r2,r8,r2
   2c978:	88e2d83a 	srl	r17,r17,r3
   2c97c:	2906b03a 	or	r3,r5,r4
   2c980:	1004c03a 	cmpne	r2,r2,zero
   2c984:	1886b03a 	or	r3,r3,r2
   2c988:	188001cc 	andi	r2,r3,7
   2c98c:	10000726 	beq	r2,zero,2c9ac <__muldf3+0x654>
   2c990:	188003cc 	andi	r2,r3,15
   2c994:	01000104 	movi	r4,4
   2c998:	11000426 	beq	r2,r4,2c9ac <__muldf3+0x654>
   2c99c:	1805883a 	mov	r2,r3
   2c9a0:	10c00104 	addi	r3,r2,4
   2c9a4:	1885803a 	cmpltu	r2,r3,r2
   2c9a8:	88a3883a 	add	r17,r17,r2
   2c9ac:	8880202c 	andhi	r2,r17,128
   2c9b0:	10001c26 	beq	r2,zero,2ca24 <__muldf3+0x6cc>
   2c9b4:	b02b883a 	mov	r21,r22
   2c9b8:	00800044 	movi	r2,1
   2c9bc:	000b883a 	mov	r5,zero
   2c9c0:	0029883a 	mov	r20,zero
   2c9c4:	003ec306 	br	2c4d4 <__alt_data_end+0xfffec4d4>
   2c9c8:	5805883a 	mov	r2,r11
   2c9cc:	003f9906 	br	2c834 <__alt_data_end+0xfffec834>
   2c9d0:	00bff844 	movi	r2,-31
   2c9d4:	1145c83a 	sub	r2,r2,r5
   2c9d8:	8888d83a 	srl	r4,r17,r2
   2c9dc:	00800804 	movi	r2,32
   2c9e0:	18801a26 	beq	r3,r2,2ca4c <__muldf3+0x6f4>
   2c9e4:	00801004 	movi	r2,64
   2c9e8:	10c5c83a 	sub	r2,r2,r3
   2c9ec:	8884983a 	sll	r2,r17,r2
   2c9f0:	1204b03a 	or	r2,r2,r8
   2c9f4:	1004c03a 	cmpne	r2,r2,zero
   2c9f8:	2084b03a 	or	r2,r4,r2
   2c9fc:	144001cc 	andi	r17,r2,7
   2ca00:	88000d1e 	bne	r17,zero,2ca38 <__muldf3+0x6e0>
   2ca04:	000b883a 	mov	r5,zero
   2ca08:	1028d0fa 	srli	r20,r2,3
   2ca0c:	b02b883a 	mov	r21,r22
   2ca10:	0005883a 	mov	r2,zero
   2ca14:	a468b03a 	or	r20,r20,r17
   2ca18:	003eae06 	br	2c4d4 <__alt_data_end+0xfffec4d4>
   2ca1c:	1007883a 	mov	r3,r2
   2ca20:	0023883a 	mov	r17,zero
   2ca24:	880a927a 	slli	r5,r17,9
   2ca28:	1805883a 	mov	r2,r3
   2ca2c:	8822977a 	slli	r17,r17,29
   2ca30:	280ad33a 	srli	r5,r5,12
   2ca34:	003ff406 	br	2ca08 <__alt_data_end+0xfffeca08>
   2ca38:	10c003cc 	andi	r3,r2,15
   2ca3c:	01000104 	movi	r4,4
   2ca40:	193ff626 	beq	r3,r4,2ca1c <__alt_data_end+0xfffeca1c>
   2ca44:	0023883a 	mov	r17,zero
   2ca48:	003fd506 	br	2c9a0 <__alt_data_end+0xfffec9a0>
   2ca4c:	0005883a 	mov	r2,zero
   2ca50:	003fe706 	br	2c9f0 <__alt_data_end+0xfffec9f0>
   2ca54:	00800434 	movhi	r2,16
   2ca58:	89400234 	orhi	r5,r17,8
   2ca5c:	10bfffc4 	addi	r2,r2,-1
   2ca60:	b02b883a 	mov	r21,r22
   2ca64:	288a703a 	and	r5,r5,r2
   2ca68:	4029883a 	mov	r20,r8
   2ca6c:	003eff06 	br	2c66c <__alt_data_end+0xfffec66c>

0002ca70 <__subdf3>:
   2ca70:	02000434 	movhi	r8,16
   2ca74:	423fffc4 	addi	r8,r8,-1
   2ca78:	defffb04 	addi	sp,sp,-20
   2ca7c:	2a14703a 	and	r10,r5,r8
   2ca80:	3812d53a 	srli	r9,r7,20
   2ca84:	3a10703a 	and	r8,r7,r8
   2ca88:	2006d77a 	srli	r3,r4,29
   2ca8c:	3004d77a 	srli	r2,r6,29
   2ca90:	dc000015 	stw	r16,0(sp)
   2ca94:	501490fa 	slli	r10,r10,3
   2ca98:	2820d53a 	srli	r16,r5,20
   2ca9c:	401090fa 	slli	r8,r8,3
   2caa0:	dc800215 	stw	r18,8(sp)
   2caa4:	dc400115 	stw	r17,4(sp)
   2caa8:	dfc00415 	stw	ra,16(sp)
   2caac:	202290fa 	slli	r17,r4,3
   2cab0:	dcc00315 	stw	r19,12(sp)
   2cab4:	4a41ffcc 	andi	r9,r9,2047
   2cab8:	0101ffc4 	movi	r4,2047
   2cabc:	2824d7fa 	srli	r18,r5,31
   2cac0:	8401ffcc 	andi	r16,r16,2047
   2cac4:	50c6b03a 	or	r3,r10,r3
   2cac8:	380ed7fa 	srli	r7,r7,31
   2cacc:	408ab03a 	or	r5,r8,r2
   2cad0:	300c90fa 	slli	r6,r6,3
   2cad4:	49009626 	beq	r9,r4,2cd30 <__subdf3+0x2c0>
   2cad8:	39c0005c 	xori	r7,r7,1
   2cadc:	8245c83a 	sub	r2,r16,r9
   2cae0:	3c807426 	beq	r7,r18,2ccb4 <__subdf3+0x244>
   2cae4:	0080af0e 	bge	zero,r2,2cda4 <__subdf3+0x334>
   2cae8:	48002a1e 	bne	r9,zero,2cb94 <__subdf3+0x124>
   2caec:	2988b03a 	or	r4,r5,r6
   2caf0:	20009a1e 	bne	r4,zero,2cd5c <__subdf3+0x2ec>
   2caf4:	888001cc 	andi	r2,r17,7
   2caf8:	10000726 	beq	r2,zero,2cb18 <__subdf3+0xa8>
   2cafc:	888003cc 	andi	r2,r17,15
   2cb00:	01000104 	movi	r4,4
   2cb04:	11000426 	beq	r2,r4,2cb18 <__subdf3+0xa8>
   2cb08:	890b883a 	add	r5,r17,r4
   2cb0c:	2c63803a 	cmpltu	r17,r5,r17
   2cb10:	1c47883a 	add	r3,r3,r17
   2cb14:	2823883a 	mov	r17,r5
   2cb18:	1880202c 	andhi	r2,r3,128
   2cb1c:	10005926 	beq	r2,zero,2cc84 <__subdf3+0x214>
   2cb20:	84000044 	addi	r16,r16,1
   2cb24:	0081ffc4 	movi	r2,2047
   2cb28:	8080be26 	beq	r16,r2,2ce24 <__subdf3+0x3b4>
   2cb2c:	017fe034 	movhi	r5,65408
   2cb30:	297fffc4 	addi	r5,r5,-1
   2cb34:	1946703a 	and	r3,r3,r5
   2cb38:	1804977a 	slli	r2,r3,29
   2cb3c:	1806927a 	slli	r3,r3,9
   2cb40:	8822d0fa 	srli	r17,r17,3
   2cb44:	8401ffcc 	andi	r16,r16,2047
   2cb48:	180ad33a 	srli	r5,r3,12
   2cb4c:	9100004c 	andi	r4,r18,1
   2cb50:	1444b03a 	or	r2,r2,r17
   2cb54:	80c1ffcc 	andi	r3,r16,2047
   2cb58:	1820953a 	slli	r16,r3,20
   2cb5c:	20c03fcc 	andi	r3,r4,255
   2cb60:	180897fa 	slli	r4,r3,31
   2cb64:	00c00434 	movhi	r3,16
   2cb68:	18ffffc4 	addi	r3,r3,-1
   2cb6c:	28c6703a 	and	r3,r5,r3
   2cb70:	1c06b03a 	or	r3,r3,r16
   2cb74:	1906b03a 	or	r3,r3,r4
   2cb78:	dfc00417 	ldw	ra,16(sp)
   2cb7c:	dcc00317 	ldw	r19,12(sp)
   2cb80:	dc800217 	ldw	r18,8(sp)
   2cb84:	dc400117 	ldw	r17,4(sp)
   2cb88:	dc000017 	ldw	r16,0(sp)
   2cb8c:	dec00504 	addi	sp,sp,20
   2cb90:	f800283a 	ret
   2cb94:	0101ffc4 	movi	r4,2047
   2cb98:	813fd626 	beq	r16,r4,2caf4 <__alt_data_end+0xfffecaf4>
   2cb9c:	29402034 	orhi	r5,r5,128
   2cba0:	01000e04 	movi	r4,56
   2cba4:	2080a316 	blt	r4,r2,2ce34 <__subdf3+0x3c4>
   2cba8:	010007c4 	movi	r4,31
   2cbac:	2080c616 	blt	r4,r2,2cec8 <__subdf3+0x458>
   2cbb0:	01000804 	movi	r4,32
   2cbb4:	2089c83a 	sub	r4,r4,r2
   2cbb8:	2910983a 	sll	r8,r5,r4
   2cbbc:	308ed83a 	srl	r7,r6,r2
   2cbc0:	3108983a 	sll	r4,r6,r4
   2cbc4:	2884d83a 	srl	r2,r5,r2
   2cbc8:	41ccb03a 	or	r6,r8,r7
   2cbcc:	2008c03a 	cmpne	r4,r4,zero
   2cbd0:	310cb03a 	or	r6,r6,r4
   2cbd4:	898dc83a 	sub	r6,r17,r6
   2cbd8:	89a3803a 	cmpltu	r17,r17,r6
   2cbdc:	1887c83a 	sub	r3,r3,r2
   2cbe0:	1c47c83a 	sub	r3,r3,r17
   2cbe4:	3023883a 	mov	r17,r6
   2cbe8:	1880202c 	andhi	r2,r3,128
   2cbec:	10002326 	beq	r2,zero,2cc7c <__subdf3+0x20c>
   2cbf0:	04c02034 	movhi	r19,128
   2cbf4:	9cffffc4 	addi	r19,r19,-1
   2cbf8:	1ce6703a 	and	r19,r3,r19
   2cbfc:	98007a26 	beq	r19,zero,2cde8 <__subdf3+0x378>
   2cc00:	9809883a 	mov	r4,r19
   2cc04:	002d5700 	call	2d570 <__clzsi2>
   2cc08:	113ffe04 	addi	r4,r2,-8
   2cc0c:	00c007c4 	movi	r3,31
   2cc10:	19007b16 	blt	r3,r4,2ce00 <__subdf3+0x390>
   2cc14:	00800804 	movi	r2,32
   2cc18:	1105c83a 	sub	r2,r2,r4
   2cc1c:	8884d83a 	srl	r2,r17,r2
   2cc20:	9906983a 	sll	r3,r19,r4
   2cc24:	8922983a 	sll	r17,r17,r4
   2cc28:	10c4b03a 	or	r2,r2,r3
   2cc2c:	24007816 	blt	r4,r16,2ce10 <__subdf3+0x3a0>
   2cc30:	2421c83a 	sub	r16,r4,r16
   2cc34:	80c00044 	addi	r3,r16,1
   2cc38:	010007c4 	movi	r4,31
   2cc3c:	20c09516 	blt	r4,r3,2ce94 <__subdf3+0x424>
   2cc40:	01400804 	movi	r5,32
   2cc44:	28cbc83a 	sub	r5,r5,r3
   2cc48:	88c8d83a 	srl	r4,r17,r3
   2cc4c:	8962983a 	sll	r17,r17,r5
   2cc50:	114a983a 	sll	r5,r2,r5
   2cc54:	10c6d83a 	srl	r3,r2,r3
   2cc58:	8804c03a 	cmpne	r2,r17,zero
   2cc5c:	290ab03a 	or	r5,r5,r4
   2cc60:	28a2b03a 	or	r17,r5,r2
   2cc64:	0021883a 	mov	r16,zero
   2cc68:	003fa206 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2cc6c:	2090b03a 	or	r8,r4,r2
   2cc70:	40018e26 	beq	r8,zero,2d2ac <__subdf3+0x83c>
   2cc74:	1007883a 	mov	r3,r2
   2cc78:	2023883a 	mov	r17,r4
   2cc7c:	888001cc 	andi	r2,r17,7
   2cc80:	103f9e1e 	bne	r2,zero,2cafc <__alt_data_end+0xfffecafc>
   2cc84:	1804977a 	slli	r2,r3,29
   2cc88:	8822d0fa 	srli	r17,r17,3
   2cc8c:	1810d0fa 	srli	r8,r3,3
   2cc90:	9100004c 	andi	r4,r18,1
   2cc94:	1444b03a 	or	r2,r2,r17
   2cc98:	00c1ffc4 	movi	r3,2047
   2cc9c:	80c02826 	beq	r16,r3,2cd40 <__subdf3+0x2d0>
   2cca0:	01400434 	movhi	r5,16
   2cca4:	297fffc4 	addi	r5,r5,-1
   2cca8:	80e0703a 	and	r16,r16,r3
   2ccac:	414a703a 	and	r5,r8,r5
   2ccb0:	003fa806 	br	2cb54 <__alt_data_end+0xfffecb54>
   2ccb4:	0080630e 	bge	zero,r2,2ce44 <__subdf3+0x3d4>
   2ccb8:	48003026 	beq	r9,zero,2cd7c <__subdf3+0x30c>
   2ccbc:	0101ffc4 	movi	r4,2047
   2ccc0:	813f8c26 	beq	r16,r4,2caf4 <__alt_data_end+0xfffecaf4>
   2ccc4:	29402034 	orhi	r5,r5,128
   2ccc8:	01000e04 	movi	r4,56
   2cccc:	2080a90e 	bge	r4,r2,2cf74 <__subdf3+0x504>
   2ccd0:	298cb03a 	or	r6,r5,r6
   2ccd4:	3012c03a 	cmpne	r9,r6,zero
   2ccd8:	0005883a 	mov	r2,zero
   2ccdc:	4c53883a 	add	r9,r9,r17
   2cce0:	4c63803a 	cmpltu	r17,r9,r17
   2cce4:	10c7883a 	add	r3,r2,r3
   2cce8:	88c7883a 	add	r3,r17,r3
   2ccec:	4823883a 	mov	r17,r9
   2ccf0:	1880202c 	andhi	r2,r3,128
   2ccf4:	1000d026 	beq	r2,zero,2d038 <__subdf3+0x5c8>
   2ccf8:	84000044 	addi	r16,r16,1
   2ccfc:	0081ffc4 	movi	r2,2047
   2cd00:	8080fe26 	beq	r16,r2,2d0fc <__subdf3+0x68c>
   2cd04:	00bfe034 	movhi	r2,65408
   2cd08:	10bfffc4 	addi	r2,r2,-1
   2cd0c:	1886703a 	and	r3,r3,r2
   2cd10:	880ad07a 	srli	r5,r17,1
   2cd14:	180497fa 	slli	r2,r3,31
   2cd18:	8900004c 	andi	r4,r17,1
   2cd1c:	2922b03a 	or	r17,r5,r4
   2cd20:	1806d07a 	srli	r3,r3,1
   2cd24:	1462b03a 	or	r17,r2,r17
   2cd28:	3825883a 	mov	r18,r7
   2cd2c:	003f7106 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2cd30:	2984b03a 	or	r2,r5,r6
   2cd34:	103f6826 	beq	r2,zero,2cad8 <__alt_data_end+0xfffecad8>
   2cd38:	39c03fcc 	andi	r7,r7,255
   2cd3c:	003f6706 	br	2cadc <__alt_data_end+0xfffecadc>
   2cd40:	4086b03a 	or	r3,r8,r2
   2cd44:	18015226 	beq	r3,zero,2d290 <__subdf3+0x820>
   2cd48:	00c00434 	movhi	r3,16
   2cd4c:	41400234 	orhi	r5,r8,8
   2cd50:	18ffffc4 	addi	r3,r3,-1
   2cd54:	28ca703a 	and	r5,r5,r3
   2cd58:	003f7e06 	br	2cb54 <__alt_data_end+0xfffecb54>
   2cd5c:	10bfffc4 	addi	r2,r2,-1
   2cd60:	1000491e 	bne	r2,zero,2ce88 <__subdf3+0x418>
   2cd64:	898fc83a 	sub	r7,r17,r6
   2cd68:	89e3803a 	cmpltu	r17,r17,r7
   2cd6c:	1947c83a 	sub	r3,r3,r5
   2cd70:	1c47c83a 	sub	r3,r3,r17
   2cd74:	3823883a 	mov	r17,r7
   2cd78:	003f9b06 	br	2cbe8 <__alt_data_end+0xfffecbe8>
   2cd7c:	2988b03a 	or	r4,r5,r6
   2cd80:	203f5c26 	beq	r4,zero,2caf4 <__alt_data_end+0xfffecaf4>
   2cd84:	10bfffc4 	addi	r2,r2,-1
   2cd88:	1000931e 	bne	r2,zero,2cfd8 <__subdf3+0x568>
   2cd8c:	898d883a 	add	r6,r17,r6
   2cd90:	3463803a 	cmpltu	r17,r6,r17
   2cd94:	1947883a 	add	r3,r3,r5
   2cd98:	88c7883a 	add	r3,r17,r3
   2cd9c:	3023883a 	mov	r17,r6
   2cda0:	003fd306 	br	2ccf0 <__alt_data_end+0xfffeccf0>
   2cda4:	1000541e 	bne	r2,zero,2cef8 <__subdf3+0x488>
   2cda8:	80800044 	addi	r2,r16,1
   2cdac:	1081ffcc 	andi	r2,r2,2047
   2cdb0:	01000044 	movi	r4,1
   2cdb4:	2080a20e 	bge	r4,r2,2d040 <__subdf3+0x5d0>
   2cdb8:	8989c83a 	sub	r4,r17,r6
   2cdbc:	8905803a 	cmpltu	r2,r17,r4
   2cdc0:	1967c83a 	sub	r19,r3,r5
   2cdc4:	98a7c83a 	sub	r19,r19,r2
   2cdc8:	9880202c 	andhi	r2,r19,128
   2cdcc:	10006326 	beq	r2,zero,2cf5c <__subdf3+0x4ec>
   2cdd0:	3463c83a 	sub	r17,r6,r17
   2cdd4:	28c7c83a 	sub	r3,r5,r3
   2cdd8:	344d803a 	cmpltu	r6,r6,r17
   2cddc:	19a7c83a 	sub	r19,r3,r6
   2cde0:	3825883a 	mov	r18,r7
   2cde4:	983f861e 	bne	r19,zero,2cc00 <__alt_data_end+0xfffecc00>
   2cde8:	8809883a 	mov	r4,r17
   2cdec:	002d5700 	call	2d570 <__clzsi2>
   2cdf0:	10800804 	addi	r2,r2,32
   2cdf4:	113ffe04 	addi	r4,r2,-8
   2cdf8:	00c007c4 	movi	r3,31
   2cdfc:	193f850e 	bge	r3,r4,2cc14 <__alt_data_end+0xfffecc14>
   2ce00:	10bff604 	addi	r2,r2,-40
   2ce04:	8884983a 	sll	r2,r17,r2
   2ce08:	0023883a 	mov	r17,zero
   2ce0c:	243f880e 	bge	r4,r16,2cc30 <__alt_data_end+0xfffecc30>
   2ce10:	00ffe034 	movhi	r3,65408
   2ce14:	18ffffc4 	addi	r3,r3,-1
   2ce18:	8121c83a 	sub	r16,r16,r4
   2ce1c:	10c6703a 	and	r3,r2,r3
   2ce20:	003f3406 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2ce24:	9100004c 	andi	r4,r18,1
   2ce28:	000b883a 	mov	r5,zero
   2ce2c:	0005883a 	mov	r2,zero
   2ce30:	003f4806 	br	2cb54 <__alt_data_end+0xfffecb54>
   2ce34:	298cb03a 	or	r6,r5,r6
   2ce38:	300cc03a 	cmpne	r6,r6,zero
   2ce3c:	0005883a 	mov	r2,zero
   2ce40:	003f6406 	br	2cbd4 <__alt_data_end+0xfffecbd4>
   2ce44:	10009a1e 	bne	r2,zero,2d0b0 <__subdf3+0x640>
   2ce48:	82400044 	addi	r9,r16,1
   2ce4c:	4881ffcc 	andi	r2,r9,2047
   2ce50:	02800044 	movi	r10,1
   2ce54:	5080670e 	bge	r10,r2,2cff4 <__subdf3+0x584>
   2ce58:	0081ffc4 	movi	r2,2047
   2ce5c:	4880af26 	beq	r9,r2,2d11c <__subdf3+0x6ac>
   2ce60:	898d883a 	add	r6,r17,r6
   2ce64:	1945883a 	add	r2,r3,r5
   2ce68:	3447803a 	cmpltu	r3,r6,r17
   2ce6c:	1887883a 	add	r3,r3,r2
   2ce70:	182297fa 	slli	r17,r3,31
   2ce74:	300cd07a 	srli	r6,r6,1
   2ce78:	1806d07a 	srli	r3,r3,1
   2ce7c:	4821883a 	mov	r16,r9
   2ce80:	89a2b03a 	or	r17,r17,r6
   2ce84:	003f1b06 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2ce88:	0101ffc4 	movi	r4,2047
   2ce8c:	813f441e 	bne	r16,r4,2cba0 <__alt_data_end+0xfffecba0>
   2ce90:	003f1806 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2ce94:	843ff844 	addi	r16,r16,-31
   2ce98:	01400804 	movi	r5,32
   2ce9c:	1408d83a 	srl	r4,r2,r16
   2cea0:	19405026 	beq	r3,r5,2cfe4 <__subdf3+0x574>
   2cea4:	01401004 	movi	r5,64
   2cea8:	28c7c83a 	sub	r3,r5,r3
   2ceac:	10c4983a 	sll	r2,r2,r3
   2ceb0:	88a2b03a 	or	r17,r17,r2
   2ceb4:	8822c03a 	cmpne	r17,r17,zero
   2ceb8:	2462b03a 	or	r17,r4,r17
   2cebc:	0007883a 	mov	r3,zero
   2cec0:	0021883a 	mov	r16,zero
   2cec4:	003f6d06 	br	2cc7c <__alt_data_end+0xfffecc7c>
   2cec8:	11fff804 	addi	r7,r2,-32
   2cecc:	01000804 	movi	r4,32
   2ced0:	29ced83a 	srl	r7,r5,r7
   2ced4:	11004526 	beq	r2,r4,2cfec <__subdf3+0x57c>
   2ced8:	01001004 	movi	r4,64
   2cedc:	2089c83a 	sub	r4,r4,r2
   2cee0:	2904983a 	sll	r2,r5,r4
   2cee4:	118cb03a 	or	r6,r2,r6
   2cee8:	300cc03a 	cmpne	r6,r6,zero
   2ceec:	398cb03a 	or	r6,r7,r6
   2cef0:	0005883a 	mov	r2,zero
   2cef4:	003f3706 	br	2cbd4 <__alt_data_end+0xfffecbd4>
   2cef8:	80002a26 	beq	r16,zero,2cfa4 <__subdf3+0x534>
   2cefc:	0101ffc4 	movi	r4,2047
   2cf00:	49006626 	beq	r9,r4,2d09c <__subdf3+0x62c>
   2cf04:	0085c83a 	sub	r2,zero,r2
   2cf08:	18c02034 	orhi	r3,r3,128
   2cf0c:	01000e04 	movi	r4,56
   2cf10:	20807e16 	blt	r4,r2,2d10c <__subdf3+0x69c>
   2cf14:	010007c4 	movi	r4,31
   2cf18:	2080e716 	blt	r4,r2,2d2b8 <__subdf3+0x848>
   2cf1c:	01000804 	movi	r4,32
   2cf20:	2089c83a 	sub	r4,r4,r2
   2cf24:	1914983a 	sll	r10,r3,r4
   2cf28:	8890d83a 	srl	r8,r17,r2
   2cf2c:	8908983a 	sll	r4,r17,r4
   2cf30:	1884d83a 	srl	r2,r3,r2
   2cf34:	5222b03a 	or	r17,r10,r8
   2cf38:	2006c03a 	cmpne	r3,r4,zero
   2cf3c:	88e2b03a 	or	r17,r17,r3
   2cf40:	3463c83a 	sub	r17,r6,r17
   2cf44:	2885c83a 	sub	r2,r5,r2
   2cf48:	344d803a 	cmpltu	r6,r6,r17
   2cf4c:	1187c83a 	sub	r3,r2,r6
   2cf50:	4821883a 	mov	r16,r9
   2cf54:	3825883a 	mov	r18,r7
   2cf58:	003f2306 	br	2cbe8 <__alt_data_end+0xfffecbe8>
   2cf5c:	24d0b03a 	or	r8,r4,r19
   2cf60:	40001b1e 	bne	r8,zero,2cfd0 <__subdf3+0x560>
   2cf64:	0005883a 	mov	r2,zero
   2cf68:	0009883a 	mov	r4,zero
   2cf6c:	0021883a 	mov	r16,zero
   2cf70:	003f4906 	br	2cc98 <__alt_data_end+0xfffecc98>
   2cf74:	010007c4 	movi	r4,31
   2cf78:	20803a16 	blt	r4,r2,2d064 <__subdf3+0x5f4>
   2cf7c:	01000804 	movi	r4,32
   2cf80:	2089c83a 	sub	r4,r4,r2
   2cf84:	2912983a 	sll	r9,r5,r4
   2cf88:	3090d83a 	srl	r8,r6,r2
   2cf8c:	3108983a 	sll	r4,r6,r4
   2cf90:	2884d83a 	srl	r2,r5,r2
   2cf94:	4a12b03a 	or	r9,r9,r8
   2cf98:	2008c03a 	cmpne	r4,r4,zero
   2cf9c:	4912b03a 	or	r9,r9,r4
   2cfa0:	003f4e06 	br	2ccdc <__alt_data_end+0xfffeccdc>
   2cfa4:	1c48b03a 	or	r4,r3,r17
   2cfa8:	20003c26 	beq	r4,zero,2d09c <__subdf3+0x62c>
   2cfac:	0084303a 	nor	r2,zero,r2
   2cfb0:	1000381e 	bne	r2,zero,2d094 <__subdf3+0x624>
   2cfb4:	3463c83a 	sub	r17,r6,r17
   2cfb8:	28c5c83a 	sub	r2,r5,r3
   2cfbc:	344d803a 	cmpltu	r6,r6,r17
   2cfc0:	1187c83a 	sub	r3,r2,r6
   2cfc4:	4821883a 	mov	r16,r9
   2cfc8:	3825883a 	mov	r18,r7
   2cfcc:	003f0606 	br	2cbe8 <__alt_data_end+0xfffecbe8>
   2cfd0:	2023883a 	mov	r17,r4
   2cfd4:	003f0906 	br	2cbfc <__alt_data_end+0xfffecbfc>
   2cfd8:	0101ffc4 	movi	r4,2047
   2cfdc:	813f3a1e 	bne	r16,r4,2ccc8 <__alt_data_end+0xfffeccc8>
   2cfe0:	003ec406 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2cfe4:	0005883a 	mov	r2,zero
   2cfe8:	003fb106 	br	2ceb0 <__alt_data_end+0xfffeceb0>
   2cfec:	0005883a 	mov	r2,zero
   2cff0:	003fbc06 	br	2cee4 <__alt_data_end+0xfffecee4>
   2cff4:	1c44b03a 	or	r2,r3,r17
   2cff8:	80008e1e 	bne	r16,zero,2d234 <__subdf3+0x7c4>
   2cffc:	1000c826 	beq	r2,zero,2d320 <__subdf3+0x8b0>
   2d000:	2984b03a 	or	r2,r5,r6
   2d004:	103ebb26 	beq	r2,zero,2caf4 <__alt_data_end+0xfffecaf4>
   2d008:	8989883a 	add	r4,r17,r6
   2d00c:	1945883a 	add	r2,r3,r5
   2d010:	2447803a 	cmpltu	r3,r4,r17
   2d014:	1887883a 	add	r3,r3,r2
   2d018:	1880202c 	andhi	r2,r3,128
   2d01c:	2023883a 	mov	r17,r4
   2d020:	103f1626 	beq	r2,zero,2cc7c <__alt_data_end+0xfffecc7c>
   2d024:	00bfe034 	movhi	r2,65408
   2d028:	10bfffc4 	addi	r2,r2,-1
   2d02c:	5021883a 	mov	r16,r10
   2d030:	1886703a 	and	r3,r3,r2
   2d034:	003eaf06 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d038:	3825883a 	mov	r18,r7
   2d03c:	003f0f06 	br	2cc7c <__alt_data_end+0xfffecc7c>
   2d040:	1c44b03a 	or	r2,r3,r17
   2d044:	8000251e 	bne	r16,zero,2d0dc <__subdf3+0x66c>
   2d048:	1000661e 	bne	r2,zero,2d1e4 <__subdf3+0x774>
   2d04c:	2990b03a 	or	r8,r5,r6
   2d050:	40009626 	beq	r8,zero,2d2ac <__subdf3+0x83c>
   2d054:	2807883a 	mov	r3,r5
   2d058:	3023883a 	mov	r17,r6
   2d05c:	3825883a 	mov	r18,r7
   2d060:	003ea406 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d064:	127ff804 	addi	r9,r2,-32
   2d068:	01000804 	movi	r4,32
   2d06c:	2a52d83a 	srl	r9,r5,r9
   2d070:	11008c26 	beq	r2,r4,2d2a4 <__subdf3+0x834>
   2d074:	01001004 	movi	r4,64
   2d078:	2085c83a 	sub	r2,r4,r2
   2d07c:	2884983a 	sll	r2,r5,r2
   2d080:	118cb03a 	or	r6,r2,r6
   2d084:	300cc03a 	cmpne	r6,r6,zero
   2d088:	4992b03a 	or	r9,r9,r6
   2d08c:	0005883a 	mov	r2,zero
   2d090:	003f1206 	br	2ccdc <__alt_data_end+0xfffeccdc>
   2d094:	0101ffc4 	movi	r4,2047
   2d098:	493f9c1e 	bne	r9,r4,2cf0c <__alt_data_end+0xfffecf0c>
   2d09c:	2807883a 	mov	r3,r5
   2d0a0:	3023883a 	mov	r17,r6
   2d0a4:	4821883a 	mov	r16,r9
   2d0a8:	3825883a 	mov	r18,r7
   2d0ac:	003e9106 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d0b0:	80001f1e 	bne	r16,zero,2d130 <__subdf3+0x6c0>
   2d0b4:	1c48b03a 	or	r4,r3,r17
   2d0b8:	20005a26 	beq	r4,zero,2d224 <__subdf3+0x7b4>
   2d0bc:	0084303a 	nor	r2,zero,r2
   2d0c0:	1000561e 	bne	r2,zero,2d21c <__subdf3+0x7ac>
   2d0c4:	89a3883a 	add	r17,r17,r6
   2d0c8:	1945883a 	add	r2,r3,r5
   2d0cc:	898d803a 	cmpltu	r6,r17,r6
   2d0d0:	3087883a 	add	r3,r6,r2
   2d0d4:	4821883a 	mov	r16,r9
   2d0d8:	003f0506 	br	2ccf0 <__alt_data_end+0xfffeccf0>
   2d0dc:	10002b1e 	bne	r2,zero,2d18c <__subdf3+0x71c>
   2d0e0:	2984b03a 	or	r2,r5,r6
   2d0e4:	10008026 	beq	r2,zero,2d2e8 <__subdf3+0x878>
   2d0e8:	2807883a 	mov	r3,r5
   2d0ec:	3023883a 	mov	r17,r6
   2d0f0:	3825883a 	mov	r18,r7
   2d0f4:	0401ffc4 	movi	r16,2047
   2d0f8:	003e7e06 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d0fc:	3809883a 	mov	r4,r7
   2d100:	0011883a 	mov	r8,zero
   2d104:	0005883a 	mov	r2,zero
   2d108:	003ee306 	br	2cc98 <__alt_data_end+0xfffecc98>
   2d10c:	1c62b03a 	or	r17,r3,r17
   2d110:	8822c03a 	cmpne	r17,r17,zero
   2d114:	0005883a 	mov	r2,zero
   2d118:	003f8906 	br	2cf40 <__alt_data_end+0xfffecf40>
   2d11c:	3809883a 	mov	r4,r7
   2d120:	4821883a 	mov	r16,r9
   2d124:	0011883a 	mov	r8,zero
   2d128:	0005883a 	mov	r2,zero
   2d12c:	003eda06 	br	2cc98 <__alt_data_end+0xfffecc98>
   2d130:	0101ffc4 	movi	r4,2047
   2d134:	49003b26 	beq	r9,r4,2d224 <__subdf3+0x7b4>
   2d138:	0085c83a 	sub	r2,zero,r2
   2d13c:	18c02034 	orhi	r3,r3,128
   2d140:	01000e04 	movi	r4,56
   2d144:	20806e16 	blt	r4,r2,2d300 <__subdf3+0x890>
   2d148:	010007c4 	movi	r4,31
   2d14c:	20807716 	blt	r4,r2,2d32c <__subdf3+0x8bc>
   2d150:	01000804 	movi	r4,32
   2d154:	2089c83a 	sub	r4,r4,r2
   2d158:	1914983a 	sll	r10,r3,r4
   2d15c:	8890d83a 	srl	r8,r17,r2
   2d160:	8908983a 	sll	r4,r17,r4
   2d164:	1884d83a 	srl	r2,r3,r2
   2d168:	5222b03a 	or	r17,r10,r8
   2d16c:	2006c03a 	cmpne	r3,r4,zero
   2d170:	88e2b03a 	or	r17,r17,r3
   2d174:	89a3883a 	add	r17,r17,r6
   2d178:	1145883a 	add	r2,r2,r5
   2d17c:	898d803a 	cmpltu	r6,r17,r6
   2d180:	3087883a 	add	r3,r6,r2
   2d184:	4821883a 	mov	r16,r9
   2d188:	003ed906 	br	2ccf0 <__alt_data_end+0xfffeccf0>
   2d18c:	2984b03a 	or	r2,r5,r6
   2d190:	10004226 	beq	r2,zero,2d29c <__subdf3+0x82c>
   2d194:	1808d0fa 	srli	r4,r3,3
   2d198:	8822d0fa 	srli	r17,r17,3
   2d19c:	1806977a 	slli	r3,r3,29
   2d1a0:	2080022c 	andhi	r2,r4,8
   2d1a4:	1c62b03a 	or	r17,r3,r17
   2d1a8:	10000826 	beq	r2,zero,2d1cc <__subdf3+0x75c>
   2d1ac:	2812d0fa 	srli	r9,r5,3
   2d1b0:	4880022c 	andhi	r2,r9,8
   2d1b4:	1000051e 	bne	r2,zero,2d1cc <__subdf3+0x75c>
   2d1b8:	300cd0fa 	srli	r6,r6,3
   2d1bc:	2804977a 	slli	r2,r5,29
   2d1c0:	4809883a 	mov	r4,r9
   2d1c4:	3825883a 	mov	r18,r7
   2d1c8:	11a2b03a 	or	r17,r2,r6
   2d1cc:	8806d77a 	srli	r3,r17,29
   2d1d0:	200890fa 	slli	r4,r4,3
   2d1d4:	882290fa 	slli	r17,r17,3
   2d1d8:	0401ffc4 	movi	r16,2047
   2d1dc:	1906b03a 	or	r3,r3,r4
   2d1e0:	003e4406 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d1e4:	2984b03a 	or	r2,r5,r6
   2d1e8:	103e4226 	beq	r2,zero,2caf4 <__alt_data_end+0xfffecaf4>
   2d1ec:	8989c83a 	sub	r4,r17,r6
   2d1f0:	8911803a 	cmpltu	r8,r17,r4
   2d1f4:	1945c83a 	sub	r2,r3,r5
   2d1f8:	1205c83a 	sub	r2,r2,r8
   2d1fc:	1200202c 	andhi	r8,r2,128
   2d200:	403e9a26 	beq	r8,zero,2cc6c <__alt_data_end+0xfffecc6c>
   2d204:	3463c83a 	sub	r17,r6,r17
   2d208:	28c5c83a 	sub	r2,r5,r3
   2d20c:	344d803a 	cmpltu	r6,r6,r17
   2d210:	1187c83a 	sub	r3,r2,r6
   2d214:	3825883a 	mov	r18,r7
   2d218:	003e3606 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d21c:	0101ffc4 	movi	r4,2047
   2d220:	493fc71e 	bne	r9,r4,2d140 <__alt_data_end+0xfffed140>
   2d224:	2807883a 	mov	r3,r5
   2d228:	3023883a 	mov	r17,r6
   2d22c:	4821883a 	mov	r16,r9
   2d230:	003e3006 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d234:	10003626 	beq	r2,zero,2d310 <__subdf3+0x8a0>
   2d238:	2984b03a 	or	r2,r5,r6
   2d23c:	10001726 	beq	r2,zero,2d29c <__subdf3+0x82c>
   2d240:	1808d0fa 	srli	r4,r3,3
   2d244:	8822d0fa 	srli	r17,r17,3
   2d248:	1806977a 	slli	r3,r3,29
   2d24c:	2080022c 	andhi	r2,r4,8
   2d250:	1c62b03a 	or	r17,r3,r17
   2d254:	10000726 	beq	r2,zero,2d274 <__subdf3+0x804>
   2d258:	2812d0fa 	srli	r9,r5,3
   2d25c:	4880022c 	andhi	r2,r9,8
   2d260:	1000041e 	bne	r2,zero,2d274 <__subdf3+0x804>
   2d264:	300cd0fa 	srli	r6,r6,3
   2d268:	2804977a 	slli	r2,r5,29
   2d26c:	4809883a 	mov	r4,r9
   2d270:	11a2b03a 	or	r17,r2,r6
   2d274:	8806d77a 	srli	r3,r17,29
   2d278:	200890fa 	slli	r4,r4,3
   2d27c:	882290fa 	slli	r17,r17,3
   2d280:	3825883a 	mov	r18,r7
   2d284:	1906b03a 	or	r3,r3,r4
   2d288:	0401ffc4 	movi	r16,2047
   2d28c:	003e1906 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d290:	000b883a 	mov	r5,zero
   2d294:	0005883a 	mov	r2,zero
   2d298:	003e2e06 	br	2cb54 <__alt_data_end+0xfffecb54>
   2d29c:	0401ffc4 	movi	r16,2047
   2d2a0:	003e1406 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d2a4:	0005883a 	mov	r2,zero
   2d2a8:	003f7506 	br	2d080 <__alt_data_end+0xfffed080>
   2d2ac:	0005883a 	mov	r2,zero
   2d2b0:	0009883a 	mov	r4,zero
   2d2b4:	003e7806 	br	2cc98 <__alt_data_end+0xfffecc98>
   2d2b8:	123ff804 	addi	r8,r2,-32
   2d2bc:	01000804 	movi	r4,32
   2d2c0:	1a10d83a 	srl	r8,r3,r8
   2d2c4:	11002526 	beq	r2,r4,2d35c <__subdf3+0x8ec>
   2d2c8:	01001004 	movi	r4,64
   2d2cc:	2085c83a 	sub	r2,r4,r2
   2d2d0:	1884983a 	sll	r2,r3,r2
   2d2d4:	1444b03a 	or	r2,r2,r17
   2d2d8:	1004c03a 	cmpne	r2,r2,zero
   2d2dc:	40a2b03a 	or	r17,r8,r2
   2d2e0:	0005883a 	mov	r2,zero
   2d2e4:	003f1606 	br	2cf40 <__alt_data_end+0xfffecf40>
   2d2e8:	02000434 	movhi	r8,16
   2d2ec:	0009883a 	mov	r4,zero
   2d2f0:	423fffc4 	addi	r8,r8,-1
   2d2f4:	00bfffc4 	movi	r2,-1
   2d2f8:	0401ffc4 	movi	r16,2047
   2d2fc:	003e6606 	br	2cc98 <__alt_data_end+0xfffecc98>
   2d300:	1c62b03a 	or	r17,r3,r17
   2d304:	8822c03a 	cmpne	r17,r17,zero
   2d308:	0005883a 	mov	r2,zero
   2d30c:	003f9906 	br	2d174 <__alt_data_end+0xfffed174>
   2d310:	2807883a 	mov	r3,r5
   2d314:	3023883a 	mov	r17,r6
   2d318:	0401ffc4 	movi	r16,2047
   2d31c:	003df506 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d320:	2807883a 	mov	r3,r5
   2d324:	3023883a 	mov	r17,r6
   2d328:	003df206 	br	2caf4 <__alt_data_end+0xfffecaf4>
   2d32c:	123ff804 	addi	r8,r2,-32
   2d330:	01000804 	movi	r4,32
   2d334:	1a10d83a 	srl	r8,r3,r8
   2d338:	11000a26 	beq	r2,r4,2d364 <__subdf3+0x8f4>
   2d33c:	01001004 	movi	r4,64
   2d340:	2085c83a 	sub	r2,r4,r2
   2d344:	1884983a 	sll	r2,r3,r2
   2d348:	1444b03a 	or	r2,r2,r17
   2d34c:	1004c03a 	cmpne	r2,r2,zero
   2d350:	40a2b03a 	or	r17,r8,r2
   2d354:	0005883a 	mov	r2,zero
   2d358:	003f8606 	br	2d174 <__alt_data_end+0xfffed174>
   2d35c:	0005883a 	mov	r2,zero
   2d360:	003fdc06 	br	2d2d4 <__alt_data_end+0xfffed2d4>
   2d364:	0005883a 	mov	r2,zero
   2d368:	003ff706 	br	2d348 <__alt_data_end+0xfffed348>

0002d36c <__fixdfsi>:
   2d36c:	280cd53a 	srli	r6,r5,20
   2d370:	00c00434 	movhi	r3,16
   2d374:	18ffffc4 	addi	r3,r3,-1
   2d378:	3181ffcc 	andi	r6,r6,2047
   2d37c:	01c0ff84 	movi	r7,1022
   2d380:	28c6703a 	and	r3,r5,r3
   2d384:	280ad7fa 	srli	r5,r5,31
   2d388:	3980120e 	bge	r7,r6,2d3d4 <__fixdfsi+0x68>
   2d38c:	00810744 	movi	r2,1053
   2d390:	11800c16 	blt	r2,r6,2d3c4 <__fixdfsi+0x58>
   2d394:	00810cc4 	movi	r2,1075
   2d398:	1185c83a 	sub	r2,r2,r6
   2d39c:	01c007c4 	movi	r7,31
   2d3a0:	18c00434 	orhi	r3,r3,16
   2d3a4:	38800d16 	blt	r7,r2,2d3dc <__fixdfsi+0x70>
   2d3a8:	31befb44 	addi	r6,r6,-1043
   2d3ac:	2084d83a 	srl	r2,r4,r2
   2d3b0:	1986983a 	sll	r3,r3,r6
   2d3b4:	1884b03a 	or	r2,r3,r2
   2d3b8:	28000726 	beq	r5,zero,2d3d8 <__fixdfsi+0x6c>
   2d3bc:	0085c83a 	sub	r2,zero,r2
   2d3c0:	f800283a 	ret
   2d3c4:	00a00034 	movhi	r2,32768
   2d3c8:	10bfffc4 	addi	r2,r2,-1
   2d3cc:	2885883a 	add	r2,r5,r2
   2d3d0:	f800283a 	ret
   2d3d4:	0005883a 	mov	r2,zero
   2d3d8:	f800283a 	ret
   2d3dc:	008104c4 	movi	r2,1043
   2d3e0:	1185c83a 	sub	r2,r2,r6
   2d3e4:	1884d83a 	srl	r2,r3,r2
   2d3e8:	003ff306 	br	2d3b8 <__alt_data_end+0xfffed3b8>

0002d3ec <__floatsidf>:
   2d3ec:	defffd04 	addi	sp,sp,-12
   2d3f0:	dfc00215 	stw	ra,8(sp)
   2d3f4:	dc400115 	stw	r17,4(sp)
   2d3f8:	dc000015 	stw	r16,0(sp)
   2d3fc:	20002b26 	beq	r4,zero,2d4ac <__floatsidf+0xc0>
   2d400:	2023883a 	mov	r17,r4
   2d404:	2020d7fa 	srli	r16,r4,31
   2d408:	20002d16 	blt	r4,zero,2d4c0 <__floatsidf+0xd4>
   2d40c:	8809883a 	mov	r4,r17
   2d410:	002d5700 	call	2d570 <__clzsi2>
   2d414:	01410784 	movi	r5,1054
   2d418:	288bc83a 	sub	r5,r5,r2
   2d41c:	01010cc4 	movi	r4,1075
   2d420:	2149c83a 	sub	r4,r4,r5
   2d424:	00c007c4 	movi	r3,31
   2d428:	1900160e 	bge	r3,r4,2d484 <__floatsidf+0x98>
   2d42c:	00c104c4 	movi	r3,1043
   2d430:	1947c83a 	sub	r3,r3,r5
   2d434:	88c6983a 	sll	r3,r17,r3
   2d438:	00800434 	movhi	r2,16
   2d43c:	10bfffc4 	addi	r2,r2,-1
   2d440:	1886703a 	and	r3,r3,r2
   2d444:	2941ffcc 	andi	r5,r5,2047
   2d448:	800d883a 	mov	r6,r16
   2d44c:	0005883a 	mov	r2,zero
   2d450:	280a953a 	slli	r5,r5,20
   2d454:	31803fcc 	andi	r6,r6,255
   2d458:	01000434 	movhi	r4,16
   2d45c:	300c97fa 	slli	r6,r6,31
   2d460:	213fffc4 	addi	r4,r4,-1
   2d464:	1906703a 	and	r3,r3,r4
   2d468:	1946b03a 	or	r3,r3,r5
   2d46c:	1986b03a 	or	r3,r3,r6
   2d470:	dfc00217 	ldw	ra,8(sp)
   2d474:	dc400117 	ldw	r17,4(sp)
   2d478:	dc000017 	ldw	r16,0(sp)
   2d47c:	dec00304 	addi	sp,sp,12
   2d480:	f800283a 	ret
   2d484:	00c002c4 	movi	r3,11
   2d488:	1887c83a 	sub	r3,r3,r2
   2d48c:	88c6d83a 	srl	r3,r17,r3
   2d490:	8904983a 	sll	r2,r17,r4
   2d494:	01000434 	movhi	r4,16
   2d498:	213fffc4 	addi	r4,r4,-1
   2d49c:	2941ffcc 	andi	r5,r5,2047
   2d4a0:	1906703a 	and	r3,r3,r4
   2d4a4:	800d883a 	mov	r6,r16
   2d4a8:	003fe906 	br	2d450 <__alt_data_end+0xfffed450>
   2d4ac:	000d883a 	mov	r6,zero
   2d4b0:	000b883a 	mov	r5,zero
   2d4b4:	0007883a 	mov	r3,zero
   2d4b8:	0005883a 	mov	r2,zero
   2d4bc:	003fe406 	br	2d450 <__alt_data_end+0xfffed450>
   2d4c0:	0123c83a 	sub	r17,zero,r4
   2d4c4:	003fd106 	br	2d40c <__alt_data_end+0xfffed40c>

0002d4c8 <__floatunsidf>:
   2d4c8:	defffe04 	addi	sp,sp,-8
   2d4cc:	dc000015 	stw	r16,0(sp)
   2d4d0:	dfc00115 	stw	ra,4(sp)
   2d4d4:	2021883a 	mov	r16,r4
   2d4d8:	20002226 	beq	r4,zero,2d564 <__floatunsidf+0x9c>
   2d4dc:	002d5700 	call	2d570 <__clzsi2>
   2d4e0:	01010784 	movi	r4,1054
   2d4e4:	2089c83a 	sub	r4,r4,r2
   2d4e8:	01810cc4 	movi	r6,1075
   2d4ec:	310dc83a 	sub	r6,r6,r4
   2d4f0:	00c007c4 	movi	r3,31
   2d4f4:	1980120e 	bge	r3,r6,2d540 <__floatunsidf+0x78>
   2d4f8:	00c104c4 	movi	r3,1043
   2d4fc:	1907c83a 	sub	r3,r3,r4
   2d500:	80ca983a 	sll	r5,r16,r3
   2d504:	00800434 	movhi	r2,16
   2d508:	10bfffc4 	addi	r2,r2,-1
   2d50c:	2101ffcc 	andi	r4,r4,2047
   2d510:	0021883a 	mov	r16,zero
   2d514:	288a703a 	and	r5,r5,r2
   2d518:	2008953a 	slli	r4,r4,20
   2d51c:	00c00434 	movhi	r3,16
   2d520:	18ffffc4 	addi	r3,r3,-1
   2d524:	28c6703a 	and	r3,r5,r3
   2d528:	8005883a 	mov	r2,r16
   2d52c:	1906b03a 	or	r3,r3,r4
   2d530:	dfc00117 	ldw	ra,4(sp)
   2d534:	dc000017 	ldw	r16,0(sp)
   2d538:	dec00204 	addi	sp,sp,8
   2d53c:	f800283a 	ret
   2d540:	00c002c4 	movi	r3,11
   2d544:	188bc83a 	sub	r5,r3,r2
   2d548:	814ad83a 	srl	r5,r16,r5
   2d54c:	00c00434 	movhi	r3,16
   2d550:	18ffffc4 	addi	r3,r3,-1
   2d554:	81a0983a 	sll	r16,r16,r6
   2d558:	2101ffcc 	andi	r4,r4,2047
   2d55c:	28ca703a 	and	r5,r5,r3
   2d560:	003fed06 	br	2d518 <__alt_data_end+0xfffed518>
   2d564:	0009883a 	mov	r4,zero
   2d568:	000b883a 	mov	r5,zero
   2d56c:	003fea06 	br	2d518 <__alt_data_end+0xfffed518>

0002d570 <__clzsi2>:
   2d570:	00bfffd4 	movui	r2,65535
   2d574:	11000536 	bltu	r2,r4,2d58c <__clzsi2+0x1c>
   2d578:	00803fc4 	movi	r2,255
   2d57c:	11000f36 	bltu	r2,r4,2d5bc <__clzsi2+0x4c>
   2d580:	00800804 	movi	r2,32
   2d584:	0007883a 	mov	r3,zero
   2d588:	00000506 	br	2d5a0 <__clzsi2+0x30>
   2d58c:	00804034 	movhi	r2,256
   2d590:	10bfffc4 	addi	r2,r2,-1
   2d594:	11000c2e 	bgeu	r2,r4,2d5c8 <__clzsi2+0x58>
   2d598:	00800204 	movi	r2,8
   2d59c:	00c00604 	movi	r3,24
   2d5a0:	20c8d83a 	srl	r4,r4,r3
   2d5a4:	00c000f4 	movhi	r3,3
   2d5a8:	18c09104 	addi	r3,r3,580
   2d5ac:	1909883a 	add	r4,r3,r4
   2d5b0:	20c00003 	ldbu	r3,0(r4)
   2d5b4:	10c5c83a 	sub	r2,r2,r3
   2d5b8:	f800283a 	ret
   2d5bc:	00800604 	movi	r2,24
   2d5c0:	00c00204 	movi	r3,8
   2d5c4:	003ff606 	br	2d5a0 <__alt_data_end+0xfffed5a0>
   2d5c8:	00800404 	movi	r2,16
   2d5cc:	1007883a 	mov	r3,r2
   2d5d0:	003ff306 	br	2d5a0 <__alt_data_end+0xfffed5a0>

0002d5d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d5d4:	defffe04 	addi	sp,sp,-8
   2d5d8:	dfc00115 	stw	ra,4(sp)
   2d5dc:	df000015 	stw	fp,0(sp)
   2d5e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d5e4:	d0a00b17 	ldw	r2,-32724(gp)
   2d5e8:	10000326 	beq	r2,zero,2d5f8 <alt_get_errno+0x24>
   2d5ec:	d0a00b17 	ldw	r2,-32724(gp)
   2d5f0:	103ee83a 	callr	r2
   2d5f4:	00000106 	br	2d5fc <alt_get_errno+0x28>
   2d5f8:	d0a6db04 	addi	r2,gp,-25748
}
   2d5fc:	e037883a 	mov	sp,fp
   2d600:	dfc00117 	ldw	ra,4(sp)
   2d604:	df000017 	ldw	fp,0(sp)
   2d608:	dec00204 	addi	sp,sp,8
   2d60c:	f800283a 	ret

0002d610 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d610:	defffb04 	addi	sp,sp,-20
   2d614:	dfc00415 	stw	ra,16(sp)
   2d618:	df000315 	stw	fp,12(sp)
   2d61c:	df000304 	addi	fp,sp,12
   2d620:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d624:	e0bfff17 	ldw	r2,-4(fp)
   2d628:	10000616 	blt	r2,zero,2d644 <close+0x34>
   2d62c:	e0bfff17 	ldw	r2,-4(fp)
   2d630:	10c00324 	muli	r3,r2,12
   2d634:	008000f4 	movhi	r2,3
   2d638:	10831504 	addi	r2,r2,3156
   2d63c:	1885883a 	add	r2,r3,r2
   2d640:	00000106 	br	2d648 <close+0x38>
   2d644:	0005883a 	mov	r2,zero
   2d648:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2d64c:	e0bffd17 	ldw	r2,-12(fp)
   2d650:	10001926 	beq	r2,zero,2d6b8 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d654:	e0bffd17 	ldw	r2,-12(fp)
   2d658:	10800017 	ldw	r2,0(r2)
   2d65c:	10800417 	ldw	r2,16(r2)
   2d660:	10000626 	beq	r2,zero,2d67c <close+0x6c>
   2d664:	e0bffd17 	ldw	r2,-12(fp)
   2d668:	10800017 	ldw	r2,0(r2)
   2d66c:	10800417 	ldw	r2,16(r2)
   2d670:	e13ffd17 	ldw	r4,-12(fp)
   2d674:	103ee83a 	callr	r2
   2d678:	00000106 	br	2d680 <close+0x70>
   2d67c:	0005883a 	mov	r2,zero
   2d680:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d684:	e13fff17 	ldw	r4,-4(fp)
   2d688:	002df240 	call	2df24 <alt_release_fd>
    if (rval < 0)
   2d68c:	e0bffe17 	ldw	r2,-8(fp)
   2d690:	1000070e 	bge	r2,zero,2d6b0 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2d694:	002d5d40 	call	2d5d4 <alt_get_errno>
   2d698:	1007883a 	mov	r3,r2
   2d69c:	e0bffe17 	ldw	r2,-8(fp)
   2d6a0:	0085c83a 	sub	r2,zero,r2
   2d6a4:	18800015 	stw	r2,0(r3)
      return -1;
   2d6a8:	00bfffc4 	movi	r2,-1
   2d6ac:	00000706 	br	2d6cc <close+0xbc>
    }
    return 0;
   2d6b0:	0005883a 	mov	r2,zero
   2d6b4:	00000506 	br	2d6cc <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d6b8:	002d5d40 	call	2d5d4 <alt_get_errno>
   2d6bc:	1007883a 	mov	r3,r2
   2d6c0:	00801444 	movi	r2,81
   2d6c4:	18800015 	stw	r2,0(r3)
    return -1;
   2d6c8:	00bfffc4 	movi	r2,-1
  }
}
   2d6cc:	e037883a 	mov	sp,fp
   2d6d0:	dfc00117 	ldw	ra,4(sp)
   2d6d4:	df000017 	ldw	fp,0(sp)
   2d6d8:	dec00204 	addi	sp,sp,8
   2d6dc:	f800283a 	ret

0002d6e0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d6e0:	defffc04 	addi	sp,sp,-16
   2d6e4:	df000315 	stw	fp,12(sp)
   2d6e8:	df000304 	addi	fp,sp,12
   2d6ec:	e13ffd15 	stw	r4,-12(fp)
   2d6f0:	e17ffe15 	stw	r5,-8(fp)
   2d6f4:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2d6f8:	e0bfff17 	ldw	r2,-4(fp)
}
   2d6fc:	e037883a 	mov	sp,fp
   2d700:	df000017 	ldw	fp,0(sp)
   2d704:	dec00104 	addi	sp,sp,4
   2d708:	f800283a 	ret

0002d70c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d70c:	defffe04 	addi	sp,sp,-8
   2d710:	dfc00115 	stw	ra,4(sp)
   2d714:	df000015 	stw	fp,0(sp)
   2d718:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d71c:	d0a00b17 	ldw	r2,-32724(gp)
   2d720:	10000326 	beq	r2,zero,2d730 <alt_get_errno+0x24>
   2d724:	d0a00b17 	ldw	r2,-32724(gp)
   2d728:	103ee83a 	callr	r2
   2d72c:	00000106 	br	2d734 <alt_get_errno+0x28>
   2d730:	d0a6db04 	addi	r2,gp,-25748
}
   2d734:	e037883a 	mov	sp,fp
   2d738:	dfc00117 	ldw	ra,4(sp)
   2d73c:	df000017 	ldw	fp,0(sp)
   2d740:	dec00204 	addi	sp,sp,8
   2d744:	f800283a 	ret

0002d748 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d748:	defffb04 	addi	sp,sp,-20
   2d74c:	dfc00415 	stw	ra,16(sp)
   2d750:	df000315 	stw	fp,12(sp)
   2d754:	df000304 	addi	fp,sp,12
   2d758:	e13ffe15 	stw	r4,-8(fp)
   2d75c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d760:	e0bffe17 	ldw	r2,-8(fp)
   2d764:	10000616 	blt	r2,zero,2d780 <fstat+0x38>
   2d768:	e0bffe17 	ldw	r2,-8(fp)
   2d76c:	10c00324 	muli	r3,r2,12
   2d770:	008000f4 	movhi	r2,3
   2d774:	10831504 	addi	r2,r2,3156
   2d778:	1885883a 	add	r2,r3,r2
   2d77c:	00000106 	br	2d784 <fstat+0x3c>
   2d780:	0005883a 	mov	r2,zero
   2d784:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2d788:	e0bffd17 	ldw	r2,-12(fp)
   2d78c:	10001026 	beq	r2,zero,2d7d0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d790:	e0bffd17 	ldw	r2,-12(fp)
   2d794:	10800017 	ldw	r2,0(r2)
   2d798:	10800817 	ldw	r2,32(r2)
   2d79c:	10000726 	beq	r2,zero,2d7bc <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2d7a0:	e0bffd17 	ldw	r2,-12(fp)
   2d7a4:	10800017 	ldw	r2,0(r2)
   2d7a8:	10800817 	ldw	r2,32(r2)
   2d7ac:	e17fff17 	ldw	r5,-4(fp)
   2d7b0:	e13ffd17 	ldw	r4,-12(fp)
   2d7b4:	103ee83a 	callr	r2
   2d7b8:	00000a06 	br	2d7e4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d7bc:	e0bfff17 	ldw	r2,-4(fp)
   2d7c0:	00c80004 	movi	r3,8192
   2d7c4:	10c00115 	stw	r3,4(r2)
      return 0;
   2d7c8:	0005883a 	mov	r2,zero
   2d7cc:	00000506 	br	2d7e4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d7d0:	002d70c0 	call	2d70c <alt_get_errno>
   2d7d4:	1007883a 	mov	r3,r2
   2d7d8:	00801444 	movi	r2,81
   2d7dc:	18800015 	stw	r2,0(r3)
    return -1;
   2d7e0:	00bfffc4 	movi	r2,-1
  }
}
   2d7e4:	e037883a 	mov	sp,fp
   2d7e8:	dfc00117 	ldw	ra,4(sp)
   2d7ec:	df000017 	ldw	fp,0(sp)
   2d7f0:	dec00204 	addi	sp,sp,8
   2d7f4:	f800283a 	ret

0002d7f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d7f8:	defffe04 	addi	sp,sp,-8
   2d7fc:	dfc00115 	stw	ra,4(sp)
   2d800:	df000015 	stw	fp,0(sp)
   2d804:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d808:	d0a00b17 	ldw	r2,-32724(gp)
   2d80c:	10000326 	beq	r2,zero,2d81c <alt_get_errno+0x24>
   2d810:	d0a00b17 	ldw	r2,-32724(gp)
   2d814:	103ee83a 	callr	r2
   2d818:	00000106 	br	2d820 <alt_get_errno+0x28>
   2d81c:	d0a6db04 	addi	r2,gp,-25748
}
   2d820:	e037883a 	mov	sp,fp
   2d824:	dfc00117 	ldw	ra,4(sp)
   2d828:	df000017 	ldw	fp,0(sp)
   2d82c:	dec00204 	addi	sp,sp,8
   2d830:	f800283a 	ret

0002d834 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d834:	deffed04 	addi	sp,sp,-76
   2d838:	dfc01215 	stw	ra,72(sp)
   2d83c:	df001115 	stw	fp,68(sp)
   2d840:	df001104 	addi	fp,sp,68
   2d844:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d848:	e0bfff17 	ldw	r2,-4(fp)
   2d84c:	10000616 	blt	r2,zero,2d868 <isatty+0x34>
   2d850:	e0bfff17 	ldw	r2,-4(fp)
   2d854:	10c00324 	muli	r3,r2,12
   2d858:	008000f4 	movhi	r2,3
   2d85c:	10831504 	addi	r2,r2,3156
   2d860:	1885883a 	add	r2,r3,r2
   2d864:	00000106 	br	2d86c <isatty+0x38>
   2d868:	0005883a 	mov	r2,zero
   2d86c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2d870:	e0bfef17 	ldw	r2,-68(fp)
   2d874:	10000e26 	beq	r2,zero,2d8b0 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d878:	e0bfef17 	ldw	r2,-68(fp)
   2d87c:	10800017 	ldw	r2,0(r2)
   2d880:	10800817 	ldw	r2,32(r2)
   2d884:	1000021e 	bne	r2,zero,2d890 <isatty+0x5c>
    {
      return 1;
   2d888:	00800044 	movi	r2,1
   2d88c:	00000d06 	br	2d8c4 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d890:	e0bff004 	addi	r2,fp,-64
   2d894:	100b883a 	mov	r5,r2
   2d898:	e13fff17 	ldw	r4,-4(fp)
   2d89c:	002d7480 	call	2d748 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d8a0:	e0bff117 	ldw	r2,-60(fp)
   2d8a4:	10880020 	cmpeqi	r2,r2,8192
   2d8a8:	10803fcc 	andi	r2,r2,255
   2d8ac:	00000506 	br	2d8c4 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d8b0:	002d7f80 	call	2d7f8 <alt_get_errno>
   2d8b4:	1007883a 	mov	r3,r2
   2d8b8:	00801444 	movi	r2,81
   2d8bc:	18800015 	stw	r2,0(r3)
    return 0;
   2d8c0:	0005883a 	mov	r2,zero
  }
}
   2d8c4:	e037883a 	mov	sp,fp
   2d8c8:	dfc00117 	ldw	ra,4(sp)
   2d8cc:	df000017 	ldw	fp,0(sp)
   2d8d0:	dec00204 	addi	sp,sp,8
   2d8d4:	f800283a 	ret

0002d8d8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d8d8:	defffc04 	addi	sp,sp,-16
   2d8dc:	df000315 	stw	fp,12(sp)
   2d8e0:	df000304 	addi	fp,sp,12
   2d8e4:	e13ffd15 	stw	r4,-12(fp)
   2d8e8:	e17ffe15 	stw	r5,-8(fp)
   2d8ec:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2d8f0:	e0fffe17 	ldw	r3,-8(fp)
   2d8f4:	e0bffd17 	ldw	r2,-12(fp)
   2d8f8:	18800c26 	beq	r3,r2,2d92c <alt_load_section+0x54>
  {
    while( to != end )
   2d8fc:	00000806 	br	2d920 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2d900:	e0bffe17 	ldw	r2,-8(fp)
   2d904:	10c00104 	addi	r3,r2,4
   2d908:	e0fffe15 	stw	r3,-8(fp)
   2d90c:	e0fffd17 	ldw	r3,-12(fp)
   2d910:	19000104 	addi	r4,r3,4
   2d914:	e13ffd15 	stw	r4,-12(fp)
   2d918:	18c00017 	ldw	r3,0(r3)
   2d91c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2d920:	e0fffe17 	ldw	r3,-8(fp)
   2d924:	e0bfff17 	ldw	r2,-4(fp)
   2d928:	18bff51e 	bne	r3,r2,2d900 <__alt_data_end+0xfffed900>
    {
      *to++ = *from++;
    }
  }
}
   2d92c:	0001883a 	nop
   2d930:	e037883a 	mov	sp,fp
   2d934:	df000017 	ldw	fp,0(sp)
   2d938:	dec00104 	addi	sp,sp,4
   2d93c:	f800283a 	ret

0002d940 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d940:	defffe04 	addi	sp,sp,-8
   2d944:	dfc00115 	stw	ra,4(sp)
   2d948:	df000015 	stw	fp,0(sp)
   2d94c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d950:	018000f4 	movhi	r6,3
   2d954:	3187a804 	addi	r6,r6,7840
   2d958:	014000f4 	movhi	r5,3
   2d95c:	2940e204 	addi	r5,r5,904
   2d960:	010000f4 	movhi	r4,3
   2d964:	2107a804 	addi	r4,r4,7840
   2d968:	002d8d80 	call	2d8d8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d96c:	018000b4 	movhi	r6,2
   2d970:	31809204 	addi	r6,r6,584
   2d974:	014000b4 	movhi	r5,2
   2d978:	29400804 	addi	r5,r5,32
   2d97c:	010000b4 	movhi	r4,2
   2d980:	21000804 	addi	r4,r4,32
   2d984:	002d8d80 	call	2d8d8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d988:	018000f4 	movhi	r6,3
   2d98c:	3180e204 	addi	r6,r6,904
   2d990:	014000f4 	movhi	r5,3
   2d994:	29400e04 	addi	r5,r5,56
   2d998:	010000f4 	movhi	r4,3
   2d99c:	21000e04 	addi	r4,r4,56
   2d9a0:	002d8d80 	call	2d8d8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d9a4:	002f2980 	call	2f298 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d9a8:	002f6bc0 	call	2f6bc <alt_icache_flush_all>
}
   2d9ac:	0001883a 	nop
   2d9b0:	e037883a 	mov	sp,fp
   2d9b4:	dfc00117 	ldw	ra,4(sp)
   2d9b8:	df000017 	ldw	fp,0(sp)
   2d9bc:	dec00204 	addi	sp,sp,8
   2d9c0:	f800283a 	ret

0002d9c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d9c4:	defffe04 	addi	sp,sp,-8
   2d9c8:	dfc00115 	stw	ra,4(sp)
   2d9cc:	df000015 	stw	fp,0(sp)
   2d9d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d9d4:	d0a00b17 	ldw	r2,-32724(gp)
   2d9d8:	10000326 	beq	r2,zero,2d9e8 <alt_get_errno+0x24>
   2d9dc:	d0a00b17 	ldw	r2,-32724(gp)
   2d9e0:	103ee83a 	callr	r2
   2d9e4:	00000106 	br	2d9ec <alt_get_errno+0x28>
   2d9e8:	d0a6db04 	addi	r2,gp,-25748
}
   2d9ec:	e037883a 	mov	sp,fp
   2d9f0:	dfc00117 	ldw	ra,4(sp)
   2d9f4:	df000017 	ldw	fp,0(sp)
   2d9f8:	dec00204 	addi	sp,sp,8
   2d9fc:	f800283a 	ret

0002da00 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2da00:	defff904 	addi	sp,sp,-28
   2da04:	dfc00615 	stw	ra,24(sp)
   2da08:	df000515 	stw	fp,20(sp)
   2da0c:	df000504 	addi	fp,sp,20
   2da10:	e13ffd15 	stw	r4,-12(fp)
   2da14:	e17ffe15 	stw	r5,-8(fp)
   2da18:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2da1c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2da20:	e0bffd17 	ldw	r2,-12(fp)
   2da24:	10000616 	blt	r2,zero,2da40 <lseek+0x40>
   2da28:	e0bffd17 	ldw	r2,-12(fp)
   2da2c:	10c00324 	muli	r3,r2,12
   2da30:	008000f4 	movhi	r2,3
   2da34:	10831504 	addi	r2,r2,3156
   2da38:	1885883a 	add	r2,r3,r2
   2da3c:	00000106 	br	2da44 <lseek+0x44>
   2da40:	0005883a 	mov	r2,zero
   2da44:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2da48:	e0bffc17 	ldw	r2,-16(fp)
   2da4c:	10001026 	beq	r2,zero,2da90 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2da50:	e0bffc17 	ldw	r2,-16(fp)
   2da54:	10800017 	ldw	r2,0(r2)
   2da58:	10800717 	ldw	r2,28(r2)
   2da5c:	10000926 	beq	r2,zero,2da84 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2da60:	e0bffc17 	ldw	r2,-16(fp)
   2da64:	10800017 	ldw	r2,0(r2)
   2da68:	10800717 	ldw	r2,28(r2)
   2da6c:	e1bfff17 	ldw	r6,-4(fp)
   2da70:	e17ffe17 	ldw	r5,-8(fp)
   2da74:	e13ffc17 	ldw	r4,-16(fp)
   2da78:	103ee83a 	callr	r2
   2da7c:	e0bffb15 	stw	r2,-20(fp)
   2da80:	00000506 	br	2da98 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2da84:	00bfde84 	movi	r2,-134
   2da88:	e0bffb15 	stw	r2,-20(fp)
   2da8c:	00000206 	br	2da98 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2da90:	00bfebc4 	movi	r2,-81
   2da94:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2da98:	e0bffb17 	ldw	r2,-20(fp)
   2da9c:	1000070e 	bge	r2,zero,2dabc <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2daa0:	002d9c40 	call	2d9c4 <alt_get_errno>
   2daa4:	1007883a 	mov	r3,r2
   2daa8:	e0bffb17 	ldw	r2,-20(fp)
   2daac:	0085c83a 	sub	r2,zero,r2
   2dab0:	18800015 	stw	r2,0(r3)
    rc = -1;
   2dab4:	00bfffc4 	movi	r2,-1
   2dab8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2dabc:	e0bffb17 	ldw	r2,-20(fp)
}
   2dac0:	e037883a 	mov	sp,fp
   2dac4:	dfc00117 	ldw	ra,4(sp)
   2dac8:	df000017 	ldw	fp,0(sp)
   2dacc:	dec00204 	addi	sp,sp,8
   2dad0:	f800283a 	ret

0002dad4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2dad4:	defffd04 	addi	sp,sp,-12
   2dad8:	dfc00215 	stw	ra,8(sp)
   2dadc:	df000115 	stw	fp,4(sp)
   2dae0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2dae4:	0009883a 	mov	r4,zero
   2dae8:	002e1a00 	call	2e1a0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2daec:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2daf0:	002e1d80 	call	2e1d8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2daf4:	018000f4 	movhi	r6,3
   2daf8:	3180d404 	addi	r6,r6,848
   2dafc:	014000f4 	movhi	r5,3
   2db00:	2940d404 	addi	r5,r5,848
   2db04:	010000f4 	movhi	r4,3
   2db08:	2100d404 	addi	r4,r4,848
   2db0c:	002f7b40 	call	2f7b4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2db10:	002f3c00 	call	2f3c0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2db14:	010000f4 	movhi	r4,3
   2db18:	213d0804 	addi	r4,r4,-3040
   2db1c:	002fca40 	call	2fca4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2db20:	d0a6e217 	ldw	r2,-25720(gp)
   2db24:	d0e6e317 	ldw	r3,-25716(gp)
   2db28:	d126e417 	ldw	r4,-25712(gp)
   2db2c:	200d883a 	mov	r6,r4
   2db30:	180b883a 	mov	r5,r3
   2db34:	1009883a 	mov	r4,r2
   2db38:	00202cc0 	call	202cc <main>
   2db3c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2db40:	01000044 	movi	r4,1
   2db44:	002d6100 	call	2d610 <close>
  exit (result);
   2db48:	e13fff17 	ldw	r4,-4(fp)
   2db4c:	002fcb80 	call	2fcb8 <exit>

0002db50 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2db50:	defffe04 	addi	sp,sp,-8
   2db54:	df000115 	stw	fp,4(sp)
   2db58:	df000104 	addi	fp,sp,4
   2db5c:	e13fff15 	stw	r4,-4(fp)
}
   2db60:	0001883a 	nop
   2db64:	e037883a 	mov	sp,fp
   2db68:	df000017 	ldw	fp,0(sp)
   2db6c:	dec00104 	addi	sp,sp,4
   2db70:	f800283a 	ret

0002db74 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2db74:	defffe04 	addi	sp,sp,-8
   2db78:	df000115 	stw	fp,4(sp)
   2db7c:	df000104 	addi	fp,sp,4
   2db80:	e13fff15 	stw	r4,-4(fp)
}
   2db84:	0001883a 	nop
   2db88:	e037883a 	mov	sp,fp
   2db8c:	df000017 	ldw	fp,0(sp)
   2db90:	dec00104 	addi	sp,sp,4
   2db94:	f800283a 	ret

0002db98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2db98:	defffe04 	addi	sp,sp,-8
   2db9c:	dfc00115 	stw	ra,4(sp)
   2dba0:	df000015 	stw	fp,0(sp)
   2dba4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dba8:	d0a00b17 	ldw	r2,-32724(gp)
   2dbac:	10000326 	beq	r2,zero,2dbbc <alt_get_errno+0x24>
   2dbb0:	d0a00b17 	ldw	r2,-32724(gp)
   2dbb4:	103ee83a 	callr	r2
   2dbb8:	00000106 	br	2dbc0 <alt_get_errno+0x28>
   2dbbc:	d0a6db04 	addi	r2,gp,-25748
}
   2dbc0:	e037883a 	mov	sp,fp
   2dbc4:	dfc00117 	ldw	ra,4(sp)
   2dbc8:	df000017 	ldw	fp,0(sp)
   2dbcc:	dec00204 	addi	sp,sp,8
   2dbd0:	f800283a 	ret

0002dbd4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2dbd4:	defffd04 	addi	sp,sp,-12
   2dbd8:	df000215 	stw	fp,8(sp)
   2dbdc:	df000204 	addi	fp,sp,8
   2dbe0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2dbe4:	e0bfff17 	ldw	r2,-4(fp)
   2dbe8:	10800217 	ldw	r2,8(r2)
   2dbec:	10d00034 	orhi	r3,r2,16384
   2dbf0:	e0bfff17 	ldw	r2,-4(fp)
   2dbf4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2dbf8:	e03ffe15 	stw	zero,-8(fp)
   2dbfc:	00001d06 	br	2dc74 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2dc00:	008000f4 	movhi	r2,3
   2dc04:	10831504 	addi	r2,r2,3156
   2dc08:	e0fffe17 	ldw	r3,-8(fp)
   2dc0c:	18c00324 	muli	r3,r3,12
   2dc10:	10c5883a 	add	r2,r2,r3
   2dc14:	10c00017 	ldw	r3,0(r2)
   2dc18:	e0bfff17 	ldw	r2,-4(fp)
   2dc1c:	10800017 	ldw	r2,0(r2)
   2dc20:	1880111e 	bne	r3,r2,2dc68 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2dc24:	008000f4 	movhi	r2,3
   2dc28:	10831504 	addi	r2,r2,3156
   2dc2c:	e0fffe17 	ldw	r3,-8(fp)
   2dc30:	18c00324 	muli	r3,r3,12
   2dc34:	10c5883a 	add	r2,r2,r3
   2dc38:	10800204 	addi	r2,r2,8
   2dc3c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2dc40:	1000090e 	bge	r2,zero,2dc68 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2dc44:	e0bffe17 	ldw	r2,-8(fp)
   2dc48:	10c00324 	muli	r3,r2,12
   2dc4c:	008000f4 	movhi	r2,3
   2dc50:	10831504 	addi	r2,r2,3156
   2dc54:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2dc58:	e0bfff17 	ldw	r2,-4(fp)
   2dc5c:	18800226 	beq	r3,r2,2dc68 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2dc60:	00bffcc4 	movi	r2,-13
   2dc64:	00000806 	br	2dc88 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2dc68:	e0bffe17 	ldw	r2,-8(fp)
   2dc6c:	10800044 	addi	r2,r2,1
   2dc70:	e0bffe15 	stw	r2,-8(fp)
   2dc74:	d0a00a17 	ldw	r2,-32728(gp)
   2dc78:	1007883a 	mov	r3,r2
   2dc7c:	e0bffe17 	ldw	r2,-8(fp)
   2dc80:	18bfdf2e 	bgeu	r3,r2,2dc00 <__alt_data_end+0xfffedc00>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2dc84:	0005883a 	mov	r2,zero
}
   2dc88:	e037883a 	mov	sp,fp
   2dc8c:	df000017 	ldw	fp,0(sp)
   2dc90:	dec00104 	addi	sp,sp,4
   2dc94:	f800283a 	ret

0002dc98 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2dc98:	defff604 	addi	sp,sp,-40
   2dc9c:	dfc00915 	stw	ra,36(sp)
   2dca0:	df000815 	stw	fp,32(sp)
   2dca4:	df000804 	addi	fp,sp,32
   2dca8:	e13ffd15 	stw	r4,-12(fp)
   2dcac:	e17ffe15 	stw	r5,-8(fp)
   2dcb0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2dcb4:	00bfffc4 	movi	r2,-1
   2dcb8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2dcbc:	00bffb44 	movi	r2,-19
   2dcc0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2dcc4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2dcc8:	d1600804 	addi	r5,gp,-32736
   2dccc:	e13ffd17 	ldw	r4,-12(fp)
   2dcd0:	002f4800 	call	2f480 <alt_find_dev>
   2dcd4:	e0bff815 	stw	r2,-32(fp)
   2dcd8:	e0bff817 	ldw	r2,-32(fp)
   2dcdc:	1000051e 	bne	r2,zero,2dcf4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2dce0:	e13ffd17 	ldw	r4,-12(fp)
   2dce4:	002f5100 	call	2f510 <alt_find_file>
   2dce8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2dcec:	00800044 	movi	r2,1
   2dcf0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2dcf4:	e0bff817 	ldw	r2,-32(fp)
   2dcf8:	10002926 	beq	r2,zero,2dda0 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2dcfc:	e13ff817 	ldw	r4,-32(fp)
   2dd00:	002f6180 	call	2f618 <alt_get_fd>
   2dd04:	e0bff915 	stw	r2,-28(fp)
   2dd08:	e0bff917 	ldw	r2,-28(fp)
   2dd0c:	1000030e 	bge	r2,zero,2dd1c <open+0x84>
    {
      status = index;
   2dd10:	e0bff917 	ldw	r2,-28(fp)
   2dd14:	e0bffa15 	stw	r2,-24(fp)
   2dd18:	00002306 	br	2dda8 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2dd1c:	e0bff917 	ldw	r2,-28(fp)
   2dd20:	10c00324 	muli	r3,r2,12
   2dd24:	008000f4 	movhi	r2,3
   2dd28:	10831504 	addi	r2,r2,3156
   2dd2c:	1885883a 	add	r2,r3,r2
   2dd30:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2dd34:	e0fffe17 	ldw	r3,-8(fp)
   2dd38:	00900034 	movhi	r2,16384
   2dd3c:	10bfffc4 	addi	r2,r2,-1
   2dd40:	1886703a 	and	r3,r3,r2
   2dd44:	e0bffc17 	ldw	r2,-16(fp)
   2dd48:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2dd4c:	e0bffb17 	ldw	r2,-20(fp)
   2dd50:	1000051e 	bne	r2,zero,2dd68 <open+0xd0>
   2dd54:	e13ffc17 	ldw	r4,-16(fp)
   2dd58:	002dbd40 	call	2dbd4 <alt_file_locked>
   2dd5c:	e0bffa15 	stw	r2,-24(fp)
   2dd60:	e0bffa17 	ldw	r2,-24(fp)
   2dd64:	10001016 	blt	r2,zero,2dda8 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2dd68:	e0bff817 	ldw	r2,-32(fp)
   2dd6c:	10800317 	ldw	r2,12(r2)
   2dd70:	10000826 	beq	r2,zero,2dd94 <open+0xfc>
   2dd74:	e0bff817 	ldw	r2,-32(fp)
   2dd78:	10800317 	ldw	r2,12(r2)
   2dd7c:	e1ffff17 	ldw	r7,-4(fp)
   2dd80:	e1bffe17 	ldw	r6,-8(fp)
   2dd84:	e17ffd17 	ldw	r5,-12(fp)
   2dd88:	e13ffc17 	ldw	r4,-16(fp)
   2dd8c:	103ee83a 	callr	r2
   2dd90:	00000106 	br	2dd98 <open+0x100>
   2dd94:	0005883a 	mov	r2,zero
   2dd98:	e0bffa15 	stw	r2,-24(fp)
   2dd9c:	00000206 	br	2dda8 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2dda0:	00bffb44 	movi	r2,-19
   2dda4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2dda8:	e0bffa17 	ldw	r2,-24(fp)
   2ddac:	1000090e 	bge	r2,zero,2ddd4 <open+0x13c>
  {
    alt_release_fd (index);  
   2ddb0:	e13ff917 	ldw	r4,-28(fp)
   2ddb4:	002df240 	call	2df24 <alt_release_fd>
    ALT_ERRNO = -status;
   2ddb8:	002db980 	call	2db98 <alt_get_errno>
   2ddbc:	1007883a 	mov	r3,r2
   2ddc0:	e0bffa17 	ldw	r2,-24(fp)
   2ddc4:	0085c83a 	sub	r2,zero,r2
   2ddc8:	18800015 	stw	r2,0(r3)
    return -1;
   2ddcc:	00bfffc4 	movi	r2,-1
   2ddd0:	00000106 	br	2ddd8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2ddd4:	e0bff917 	ldw	r2,-28(fp)
}
   2ddd8:	e037883a 	mov	sp,fp
   2dddc:	dfc00117 	ldw	ra,4(sp)
   2dde0:	df000017 	ldw	fp,0(sp)
   2dde4:	dec00204 	addi	sp,sp,8
   2dde8:	f800283a 	ret

0002ddec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ddec:	defffe04 	addi	sp,sp,-8
   2ddf0:	dfc00115 	stw	ra,4(sp)
   2ddf4:	df000015 	stw	fp,0(sp)
   2ddf8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ddfc:	d0a00b17 	ldw	r2,-32724(gp)
   2de00:	10000326 	beq	r2,zero,2de10 <alt_get_errno+0x24>
   2de04:	d0a00b17 	ldw	r2,-32724(gp)
   2de08:	103ee83a 	callr	r2
   2de0c:	00000106 	br	2de14 <alt_get_errno+0x28>
   2de10:	d0a6db04 	addi	r2,gp,-25748
}
   2de14:	e037883a 	mov	sp,fp
   2de18:	dfc00117 	ldw	ra,4(sp)
   2de1c:	df000017 	ldw	fp,0(sp)
   2de20:	dec00204 	addi	sp,sp,8
   2de24:	f800283a 	ret

0002de28 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2de28:	defff904 	addi	sp,sp,-28
   2de2c:	dfc00615 	stw	ra,24(sp)
   2de30:	df000515 	stw	fp,20(sp)
   2de34:	df000504 	addi	fp,sp,20
   2de38:	e13ffd15 	stw	r4,-12(fp)
   2de3c:	e17ffe15 	stw	r5,-8(fp)
   2de40:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2de44:	e0bffd17 	ldw	r2,-12(fp)
   2de48:	10000616 	blt	r2,zero,2de64 <read+0x3c>
   2de4c:	e0bffd17 	ldw	r2,-12(fp)
   2de50:	10c00324 	muli	r3,r2,12
   2de54:	008000f4 	movhi	r2,3
   2de58:	10831504 	addi	r2,r2,3156
   2de5c:	1885883a 	add	r2,r3,r2
   2de60:	00000106 	br	2de68 <read+0x40>
   2de64:	0005883a 	mov	r2,zero
   2de68:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2de6c:	e0bffb17 	ldw	r2,-20(fp)
   2de70:	10002226 	beq	r2,zero,2defc <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2de74:	e0bffb17 	ldw	r2,-20(fp)
   2de78:	10800217 	ldw	r2,8(r2)
   2de7c:	108000cc 	andi	r2,r2,3
   2de80:	10800060 	cmpeqi	r2,r2,1
   2de84:	1000181e 	bne	r2,zero,2dee8 <read+0xc0>
        (fd->dev->read))
   2de88:	e0bffb17 	ldw	r2,-20(fp)
   2de8c:	10800017 	ldw	r2,0(r2)
   2de90:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2de94:	10001426 	beq	r2,zero,2dee8 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2de98:	e0bffb17 	ldw	r2,-20(fp)
   2de9c:	10800017 	ldw	r2,0(r2)
   2dea0:	10800517 	ldw	r2,20(r2)
   2dea4:	e0ffff17 	ldw	r3,-4(fp)
   2dea8:	180d883a 	mov	r6,r3
   2deac:	e17ffe17 	ldw	r5,-8(fp)
   2deb0:	e13ffb17 	ldw	r4,-20(fp)
   2deb4:	103ee83a 	callr	r2
   2deb8:	e0bffc15 	stw	r2,-16(fp)
   2debc:	e0bffc17 	ldw	r2,-16(fp)
   2dec0:	1000070e 	bge	r2,zero,2dee0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2dec4:	002ddec0 	call	2ddec <alt_get_errno>
   2dec8:	1007883a 	mov	r3,r2
   2decc:	e0bffc17 	ldw	r2,-16(fp)
   2ded0:	0085c83a 	sub	r2,zero,r2
   2ded4:	18800015 	stw	r2,0(r3)
          return -1;
   2ded8:	00bfffc4 	movi	r2,-1
   2dedc:	00000c06 	br	2df10 <read+0xe8>
        }
        return rval;
   2dee0:	e0bffc17 	ldw	r2,-16(fp)
   2dee4:	00000a06 	br	2df10 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2dee8:	002ddec0 	call	2ddec <alt_get_errno>
   2deec:	1007883a 	mov	r3,r2
   2def0:	00800344 	movi	r2,13
   2def4:	18800015 	stw	r2,0(r3)
   2def8:	00000406 	br	2df0c <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2defc:	002ddec0 	call	2ddec <alt_get_errno>
   2df00:	1007883a 	mov	r3,r2
   2df04:	00801444 	movi	r2,81
   2df08:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2df0c:	00bfffc4 	movi	r2,-1
}
   2df10:	e037883a 	mov	sp,fp
   2df14:	dfc00117 	ldw	ra,4(sp)
   2df18:	df000017 	ldw	fp,0(sp)
   2df1c:	dec00204 	addi	sp,sp,8
   2df20:	f800283a 	ret

0002df24 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2df24:	defffe04 	addi	sp,sp,-8
   2df28:	df000115 	stw	fp,4(sp)
   2df2c:	df000104 	addi	fp,sp,4
   2df30:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2df34:	e0bfff17 	ldw	r2,-4(fp)
   2df38:	108000d0 	cmplti	r2,r2,3
   2df3c:	10000d1e 	bne	r2,zero,2df74 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2df40:	008000f4 	movhi	r2,3
   2df44:	10831504 	addi	r2,r2,3156
   2df48:	e0ffff17 	ldw	r3,-4(fp)
   2df4c:	18c00324 	muli	r3,r3,12
   2df50:	10c5883a 	add	r2,r2,r3
   2df54:	10800204 	addi	r2,r2,8
   2df58:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2df5c:	008000f4 	movhi	r2,3
   2df60:	10831504 	addi	r2,r2,3156
   2df64:	e0ffff17 	ldw	r3,-4(fp)
   2df68:	18c00324 	muli	r3,r3,12
   2df6c:	10c5883a 	add	r2,r2,r3
   2df70:	10000015 	stw	zero,0(r2)
  }
}
   2df74:	0001883a 	nop
   2df78:	e037883a 	mov	sp,fp
   2df7c:	df000017 	ldw	fp,0(sp)
   2df80:	dec00104 	addi	sp,sp,4
   2df84:	f800283a 	ret

0002df88 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2df88:	defff904 	addi	sp,sp,-28
   2df8c:	df000615 	stw	fp,24(sp)
   2df90:	df000604 	addi	fp,sp,24
   2df94:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2df98:	0005303a 	rdctl	r2,status
   2df9c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2dfa0:	e0fffe17 	ldw	r3,-8(fp)
   2dfa4:	00bfff84 	movi	r2,-2
   2dfa8:	1884703a 	and	r2,r3,r2
   2dfac:	1001703a 	wrctl	status,r2
  
  return context;
   2dfb0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2dfb4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2dfb8:	d0a00c17 	ldw	r2,-32720(gp)
   2dfbc:	10c000c4 	addi	r3,r2,3
   2dfc0:	00bfff04 	movi	r2,-4
   2dfc4:	1884703a 	and	r2,r3,r2
   2dfc8:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2dfcc:	d0e00c17 	ldw	r3,-32720(gp)
   2dfd0:	e0bfff17 	ldw	r2,-4(fp)
   2dfd4:	1887883a 	add	r3,r3,r2
   2dfd8:	00800134 	movhi	r2,4
   2dfdc:	10800004 	addi	r2,r2,0
   2dfe0:	10c0062e 	bgeu	r2,r3,2dffc <sbrk+0x74>
   2dfe4:	e0bffb17 	ldw	r2,-20(fp)
   2dfe8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2dfec:	e0bffa17 	ldw	r2,-24(fp)
   2dff0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2dff4:	00bfffc4 	movi	r2,-1
   2dff8:	00000b06 	br	2e028 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2dffc:	d0a00c17 	ldw	r2,-32720(gp)
   2e000:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2e004:	d0e00c17 	ldw	r3,-32720(gp)
   2e008:	e0bfff17 	ldw	r2,-4(fp)
   2e00c:	1885883a 	add	r2,r3,r2
   2e010:	d0a00c15 	stw	r2,-32720(gp)
   2e014:	e0bffb17 	ldw	r2,-20(fp)
   2e018:	e0bffc15 	stw	r2,-16(fp)
   2e01c:	e0bffc17 	ldw	r2,-16(fp)
   2e020:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2e024:	e0bffd17 	ldw	r2,-12(fp)
} 
   2e028:	e037883a 	mov	sp,fp
   2e02c:	df000017 	ldw	fp,0(sp)
   2e030:	dec00104 	addi	sp,sp,4
   2e034:	f800283a 	ret

0002e038 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e038:	defffe04 	addi	sp,sp,-8
   2e03c:	dfc00115 	stw	ra,4(sp)
   2e040:	df000015 	stw	fp,0(sp)
   2e044:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e048:	d0a00b17 	ldw	r2,-32724(gp)
   2e04c:	10000326 	beq	r2,zero,2e05c <alt_get_errno+0x24>
   2e050:	d0a00b17 	ldw	r2,-32724(gp)
   2e054:	103ee83a 	callr	r2
   2e058:	00000106 	br	2e060 <alt_get_errno+0x28>
   2e05c:	d0a6db04 	addi	r2,gp,-25748
}
   2e060:	e037883a 	mov	sp,fp
   2e064:	dfc00117 	ldw	ra,4(sp)
   2e068:	df000017 	ldw	fp,0(sp)
   2e06c:	dec00204 	addi	sp,sp,8
   2e070:	f800283a 	ret

0002e074 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2e074:	defff904 	addi	sp,sp,-28
   2e078:	dfc00615 	stw	ra,24(sp)
   2e07c:	df000515 	stw	fp,20(sp)
   2e080:	df000504 	addi	fp,sp,20
   2e084:	e13ffd15 	stw	r4,-12(fp)
   2e088:	e17ffe15 	stw	r5,-8(fp)
   2e08c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e090:	e0bffd17 	ldw	r2,-12(fp)
   2e094:	10000616 	blt	r2,zero,2e0b0 <write+0x3c>
   2e098:	e0bffd17 	ldw	r2,-12(fp)
   2e09c:	10c00324 	muli	r3,r2,12
   2e0a0:	008000f4 	movhi	r2,3
   2e0a4:	10831504 	addi	r2,r2,3156
   2e0a8:	1885883a 	add	r2,r3,r2
   2e0ac:	00000106 	br	2e0b4 <write+0x40>
   2e0b0:	0005883a 	mov	r2,zero
   2e0b4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2e0b8:	e0bffb17 	ldw	r2,-20(fp)
   2e0bc:	10002126 	beq	r2,zero,2e144 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2e0c0:	e0bffb17 	ldw	r2,-20(fp)
   2e0c4:	10800217 	ldw	r2,8(r2)
   2e0c8:	108000cc 	andi	r2,r2,3
   2e0cc:	10001826 	beq	r2,zero,2e130 <write+0xbc>
   2e0d0:	e0bffb17 	ldw	r2,-20(fp)
   2e0d4:	10800017 	ldw	r2,0(r2)
   2e0d8:	10800617 	ldw	r2,24(r2)
   2e0dc:	10001426 	beq	r2,zero,2e130 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2e0e0:	e0bffb17 	ldw	r2,-20(fp)
   2e0e4:	10800017 	ldw	r2,0(r2)
   2e0e8:	10800617 	ldw	r2,24(r2)
   2e0ec:	e0ffff17 	ldw	r3,-4(fp)
   2e0f0:	180d883a 	mov	r6,r3
   2e0f4:	e17ffe17 	ldw	r5,-8(fp)
   2e0f8:	e13ffb17 	ldw	r4,-20(fp)
   2e0fc:	103ee83a 	callr	r2
   2e100:	e0bffc15 	stw	r2,-16(fp)
   2e104:	e0bffc17 	ldw	r2,-16(fp)
   2e108:	1000070e 	bge	r2,zero,2e128 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2e10c:	002e0380 	call	2e038 <alt_get_errno>
   2e110:	1007883a 	mov	r3,r2
   2e114:	e0bffc17 	ldw	r2,-16(fp)
   2e118:	0085c83a 	sub	r2,zero,r2
   2e11c:	18800015 	stw	r2,0(r3)
        return -1;
   2e120:	00bfffc4 	movi	r2,-1
   2e124:	00000c06 	br	2e158 <write+0xe4>
      }
      return rval;
   2e128:	e0bffc17 	ldw	r2,-16(fp)
   2e12c:	00000a06 	br	2e158 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2e130:	002e0380 	call	2e038 <alt_get_errno>
   2e134:	1007883a 	mov	r3,r2
   2e138:	00800344 	movi	r2,13
   2e13c:	18800015 	stw	r2,0(r3)
   2e140:	00000406 	br	2e154 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2e144:	002e0380 	call	2e038 <alt_get_errno>
   2e148:	1007883a 	mov	r3,r2
   2e14c:	00801444 	movi	r2,81
   2e150:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e154:	00bfffc4 	movi	r2,-1
}
   2e158:	e037883a 	mov	sp,fp
   2e15c:	dfc00117 	ldw	ra,4(sp)
   2e160:	df000017 	ldw	fp,0(sp)
   2e164:	dec00204 	addi	sp,sp,8
   2e168:	f800283a 	ret

0002e16c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2e16c:	defffd04 	addi	sp,sp,-12
   2e170:	dfc00215 	stw	ra,8(sp)
   2e174:	df000115 	stw	fp,4(sp)
   2e178:	df000104 	addi	fp,sp,4
   2e17c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2e180:	d1600804 	addi	r5,gp,-32736
   2e184:	e13fff17 	ldw	r4,-4(fp)
   2e188:	002f31c0 	call	2f31c <alt_dev_llist_insert>
}
   2e18c:	e037883a 	mov	sp,fp
   2e190:	dfc00117 	ldw	ra,4(sp)
   2e194:	df000017 	ldw	fp,0(sp)
   2e198:	dec00204 	addi	sp,sp,8
   2e19c:	f800283a 	ret

0002e1a0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2e1a0:	defffd04 	addi	sp,sp,-12
   2e1a4:	dfc00215 	stw	ra,8(sp)
   2e1a8:	df000115 	stw	fp,4(sp)
   2e1ac:	df000104 	addi	fp,sp,4
   2e1b0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   2e1b4:	002fb540 	call	2fb54 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2e1b8:	00800044 	movi	r2,1
   2e1bc:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2e1c0:	0001883a 	nop
   2e1c4:	e037883a 	mov	sp,fp
   2e1c8:	dfc00117 	ldw	ra,4(sp)
   2e1cc:	df000017 	ldw	fp,0(sp)
   2e1d0:	dec00204 	addi	sp,sp,8
   2e1d4:	f800283a 	ret

0002e1d8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2e1d8:	defffe04 	addi	sp,sp,-8
   2e1dc:	dfc00115 	stw	ra,4(sp)
   2e1e0:	df000015 	stw	fp,0(sp)
   2e1e4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   2e1e8:	00800134 	movhi	r2,4
   2e1ec:	10840004 	addi	r2,r2,4096
   2e1f0:	d0a6e515 	stw	r2,-25708(gp)
   2e1f4:	0080bef4 	movhi	r2,763
   2e1f8:	10bc2004 	addi	r2,r2,-3968
   2e1fc:	d0a6e615 	stw	r2,-25704(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   2e200:	000d883a 	mov	r6,zero
   2e204:	000b883a 	mov	r5,zero
   2e208:	010000f4 	movhi	r4,3
   2e20c:	21037f04 	addi	r4,r4,3580
   2e210:	002e3a80 	call	2e3a8 <altera_avalon_jtag_uart_init>
   2e214:	010000f4 	movhi	r4,3
   2e218:	21037504 	addi	r4,r4,3540
   2e21c:	002e16c0 	call	2e16c <alt_dev_reg>
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
   2e220:	010000f4 	movhi	r4,3
   2e224:	21078d04 	addi	r4,r4,7732
   2e228:	002e16c0 	call	2e16c <alt_dev_reg>
}
   2e22c:	0001883a 	nop
   2e230:	e037883a 	mov	sp,fp
   2e234:	dfc00117 	ldw	ra,4(sp)
   2e238:	df000017 	ldw	fp,0(sp)
   2e23c:	dec00204 	addi	sp,sp,8
   2e240:	f800283a 	ret

0002e244 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e244:	defffa04 	addi	sp,sp,-24
   2e248:	dfc00515 	stw	ra,20(sp)
   2e24c:	df000415 	stw	fp,16(sp)
   2e250:	df000404 	addi	fp,sp,16
   2e254:	e13ffd15 	stw	r4,-12(fp)
   2e258:	e17ffe15 	stw	r5,-8(fp)
   2e25c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e260:	e0bffd17 	ldw	r2,-12(fp)
   2e264:	10800017 	ldw	r2,0(r2)
   2e268:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e26c:	e0bffc17 	ldw	r2,-16(fp)
   2e270:	10c00a04 	addi	r3,r2,40
   2e274:	e0bffd17 	ldw	r2,-12(fp)
   2e278:	10800217 	ldw	r2,8(r2)
   2e27c:	100f883a 	mov	r7,r2
   2e280:	e1bfff17 	ldw	r6,-4(fp)
   2e284:	e17ffe17 	ldw	r5,-8(fp)
   2e288:	1809883a 	mov	r4,r3
   2e28c:	002e8640 	call	2e864 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e290:	e037883a 	mov	sp,fp
   2e294:	dfc00117 	ldw	ra,4(sp)
   2e298:	df000017 	ldw	fp,0(sp)
   2e29c:	dec00204 	addi	sp,sp,8
   2e2a0:	f800283a 	ret

0002e2a4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e2a4:	defffa04 	addi	sp,sp,-24
   2e2a8:	dfc00515 	stw	ra,20(sp)
   2e2ac:	df000415 	stw	fp,16(sp)
   2e2b0:	df000404 	addi	fp,sp,16
   2e2b4:	e13ffd15 	stw	r4,-12(fp)
   2e2b8:	e17ffe15 	stw	r5,-8(fp)
   2e2bc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e2c0:	e0bffd17 	ldw	r2,-12(fp)
   2e2c4:	10800017 	ldw	r2,0(r2)
   2e2c8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e2cc:	e0bffc17 	ldw	r2,-16(fp)
   2e2d0:	10c00a04 	addi	r3,r2,40
   2e2d4:	e0bffd17 	ldw	r2,-12(fp)
   2e2d8:	10800217 	ldw	r2,8(r2)
   2e2dc:	100f883a 	mov	r7,r2
   2e2e0:	e1bfff17 	ldw	r6,-4(fp)
   2e2e4:	e17ffe17 	ldw	r5,-8(fp)
   2e2e8:	1809883a 	mov	r4,r3
   2e2ec:	002ea800 	call	2ea80 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e2f0:	e037883a 	mov	sp,fp
   2e2f4:	dfc00117 	ldw	ra,4(sp)
   2e2f8:	df000017 	ldw	fp,0(sp)
   2e2fc:	dec00204 	addi	sp,sp,8
   2e300:	f800283a 	ret

0002e304 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e304:	defffc04 	addi	sp,sp,-16
   2e308:	dfc00315 	stw	ra,12(sp)
   2e30c:	df000215 	stw	fp,8(sp)
   2e310:	df000204 	addi	fp,sp,8
   2e314:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e318:	e0bfff17 	ldw	r2,-4(fp)
   2e31c:	10800017 	ldw	r2,0(r2)
   2e320:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e324:	e0bffe17 	ldw	r2,-8(fp)
   2e328:	10c00a04 	addi	r3,r2,40
   2e32c:	e0bfff17 	ldw	r2,-4(fp)
   2e330:	10800217 	ldw	r2,8(r2)
   2e334:	100b883a 	mov	r5,r2
   2e338:	1809883a 	mov	r4,r3
   2e33c:	002e70c0 	call	2e70c <altera_avalon_jtag_uart_close>
}
   2e340:	e037883a 	mov	sp,fp
   2e344:	dfc00117 	ldw	ra,4(sp)
   2e348:	df000017 	ldw	fp,0(sp)
   2e34c:	dec00204 	addi	sp,sp,8
   2e350:	f800283a 	ret

0002e354 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e354:	defffa04 	addi	sp,sp,-24
   2e358:	dfc00515 	stw	ra,20(sp)
   2e35c:	df000415 	stw	fp,16(sp)
   2e360:	df000404 	addi	fp,sp,16
   2e364:	e13ffd15 	stw	r4,-12(fp)
   2e368:	e17ffe15 	stw	r5,-8(fp)
   2e36c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e370:	e0bffd17 	ldw	r2,-12(fp)
   2e374:	10800017 	ldw	r2,0(r2)
   2e378:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e37c:	e0bffc17 	ldw	r2,-16(fp)
   2e380:	10800a04 	addi	r2,r2,40
   2e384:	e1bfff17 	ldw	r6,-4(fp)
   2e388:	e17ffe17 	ldw	r5,-8(fp)
   2e38c:	1009883a 	mov	r4,r2
   2e390:	002e7740 	call	2e774 <altera_avalon_jtag_uart_ioctl>
}
   2e394:	e037883a 	mov	sp,fp
   2e398:	dfc00117 	ldw	ra,4(sp)
   2e39c:	df000017 	ldw	fp,0(sp)
   2e3a0:	dec00204 	addi	sp,sp,8
   2e3a4:	f800283a 	ret

0002e3a8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e3a8:	defffb04 	addi	sp,sp,-20
   2e3ac:	dfc00415 	stw	ra,16(sp)
   2e3b0:	df000315 	stw	fp,12(sp)
   2e3b4:	df000304 	addi	fp,sp,12
   2e3b8:	e13ffd15 	stw	r4,-12(fp)
   2e3bc:	e17ffe15 	stw	r5,-8(fp)
   2e3c0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e3c4:	e0bffd17 	ldw	r2,-12(fp)
   2e3c8:	00c00044 	movi	r3,1
   2e3cc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e3d0:	e0bffd17 	ldw	r2,-12(fp)
   2e3d4:	10800017 	ldw	r2,0(r2)
   2e3d8:	10800104 	addi	r2,r2,4
   2e3dc:	1007883a 	mov	r3,r2
   2e3e0:	e0bffd17 	ldw	r2,-12(fp)
   2e3e4:	10800817 	ldw	r2,32(r2)
   2e3e8:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   2e3ec:	e0bfff17 	ldw	r2,-4(fp)
   2e3f0:	018000f4 	movhi	r6,3
   2e3f4:	31b91704 	addi	r6,r6,-7076
   2e3f8:	e17ffd17 	ldw	r5,-12(fp)
   2e3fc:	1009883a 	mov	r4,r2
   2e400:	002f8300 	call	2f830 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e404:	e0bffd17 	ldw	r2,-12(fp)
   2e408:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e40c:	e0bffd17 	ldw	r2,-12(fp)
   2e410:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e414:	d0e6e817 	ldw	r3,-25696(gp)
   2e418:	e1fffd17 	ldw	r7,-12(fp)
   2e41c:	018000f4 	movhi	r6,3
   2e420:	31b99b04 	addi	r6,r6,-6548
   2e424:	180b883a 	mov	r5,r3
   2e428:	1009883a 	mov	r4,r2
   2e42c:	002f16c0 	call	2f16c <alt_alarm_start>
   2e430:	1000040e 	bge	r2,zero,2e444 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e434:	e0fffd17 	ldw	r3,-12(fp)
   2e438:	00a00034 	movhi	r2,32768
   2e43c:	10bfffc4 	addi	r2,r2,-1
   2e440:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e444:	0001883a 	nop
   2e448:	e037883a 	mov	sp,fp
   2e44c:	dfc00117 	ldw	ra,4(sp)
   2e450:	df000017 	ldw	fp,0(sp)
   2e454:	dec00204 	addi	sp,sp,8
   2e458:	f800283a 	ret

0002e45c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e45c:	defff704 	addi	sp,sp,-36
   2e460:	df000815 	stw	fp,32(sp)
   2e464:	df000804 	addi	fp,sp,32
   2e468:	e13ffe15 	stw	r4,-8(fp)
   2e46c:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e470:	e0bffe17 	ldw	r2,-8(fp)
   2e474:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
   2e478:	e0bffa17 	ldw	r2,-24(fp)
   2e47c:	10800017 	ldw	r2,0(r2)
   2e480:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e484:	e0bffb17 	ldw	r2,-20(fp)
   2e488:	10800104 	addi	r2,r2,4
   2e48c:	10800037 	ldwio	r2,0(r2)
   2e490:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e494:	e0bffc17 	ldw	r2,-16(fp)
   2e498:	1080c00c 	andi	r2,r2,768
   2e49c:	10006d26 	beq	r2,zero,2e654 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e4a0:	e0bffc17 	ldw	r2,-16(fp)
   2e4a4:	1080400c 	andi	r2,r2,256
   2e4a8:	10003526 	beq	r2,zero,2e580 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e4ac:	00800074 	movhi	r2,1
   2e4b0:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e4b4:	e0bffa17 	ldw	r2,-24(fp)
   2e4b8:	10800a17 	ldw	r2,40(r2)
   2e4bc:	10800044 	addi	r2,r2,1
   2e4c0:	1081ffcc 	andi	r2,r2,2047
   2e4c4:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
   2e4c8:	e0bffa17 	ldw	r2,-24(fp)
   2e4cc:	10c00b17 	ldw	r3,44(r2)
   2e4d0:	e0bffd17 	ldw	r2,-12(fp)
   2e4d4:	18801526 	beq	r3,r2,2e52c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e4d8:	e0bffb17 	ldw	r2,-20(fp)
   2e4dc:	10800037 	ldwio	r2,0(r2)
   2e4e0:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e4e4:	e0bff817 	ldw	r2,-32(fp)
   2e4e8:	10a0000c 	andi	r2,r2,32768
   2e4ec:	10001126 	beq	r2,zero,2e534 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e4f0:	e0bffa17 	ldw	r2,-24(fp)
   2e4f4:	10800a17 	ldw	r2,40(r2)
   2e4f8:	e0fff817 	ldw	r3,-32(fp)
   2e4fc:	1809883a 	mov	r4,r3
   2e500:	e0fffa17 	ldw	r3,-24(fp)
   2e504:	1885883a 	add	r2,r3,r2
   2e508:	10800e04 	addi	r2,r2,56
   2e50c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e510:	e0bffa17 	ldw	r2,-24(fp)
   2e514:	10800a17 	ldw	r2,40(r2)
   2e518:	10800044 	addi	r2,r2,1
   2e51c:	10c1ffcc 	andi	r3,r2,2047
   2e520:	e0bffa17 	ldw	r2,-24(fp)
   2e524:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2e528:	003fe206 	br	2e4b4 <__alt_data_end+0xfffee4b4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2e52c:	0001883a 	nop
   2e530:	00000106 	br	2e538 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2e534:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e538:	e0bff817 	ldw	r2,-32(fp)
   2e53c:	10bfffec 	andhi	r2,r2,65535
   2e540:	10000f26 	beq	r2,zero,2e580 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e544:	e0bffa17 	ldw	r2,-24(fp)
   2e548:	10c00817 	ldw	r3,32(r2)
   2e54c:	00bfff84 	movi	r2,-2
   2e550:	1886703a 	and	r3,r3,r2
   2e554:	e0bffa17 	ldw	r2,-24(fp)
   2e558:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e55c:	e0bffb17 	ldw	r2,-20(fp)
   2e560:	10800104 	addi	r2,r2,4
   2e564:	1007883a 	mov	r3,r2
   2e568:	e0bffa17 	ldw	r2,-24(fp)
   2e56c:	10800817 	ldw	r2,32(r2)
   2e570:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e574:	e0bffb17 	ldw	r2,-20(fp)
   2e578:	10800104 	addi	r2,r2,4
   2e57c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e580:	e0bffc17 	ldw	r2,-16(fp)
   2e584:	1080800c 	andi	r2,r2,512
   2e588:	103fbe26 	beq	r2,zero,2e484 <__alt_data_end+0xfffee484>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e58c:	e0bffc17 	ldw	r2,-16(fp)
   2e590:	1004d43a 	srli	r2,r2,16
   2e594:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e598:	00001406 	br	2e5ec <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e59c:	e0bffb17 	ldw	r2,-20(fp)
   2e5a0:	e0fffa17 	ldw	r3,-24(fp)
   2e5a4:	18c00d17 	ldw	r3,52(r3)
   2e5a8:	e13ffa17 	ldw	r4,-24(fp)
   2e5ac:	20c7883a 	add	r3,r4,r3
   2e5b0:	18c20e04 	addi	r3,r3,2104
   2e5b4:	18c00003 	ldbu	r3,0(r3)
   2e5b8:	18c03fcc 	andi	r3,r3,255
   2e5bc:	18c0201c 	xori	r3,r3,128
   2e5c0:	18ffe004 	addi	r3,r3,-128
   2e5c4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e5c8:	e0bffa17 	ldw	r2,-24(fp)
   2e5cc:	10800d17 	ldw	r2,52(r2)
   2e5d0:	10800044 	addi	r2,r2,1
   2e5d4:	10c1ffcc 	andi	r3,r2,2047
   2e5d8:	e0bffa17 	ldw	r2,-24(fp)
   2e5dc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e5e0:	e0bff917 	ldw	r2,-28(fp)
   2e5e4:	10bfffc4 	addi	r2,r2,-1
   2e5e8:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e5ec:	e0bff917 	ldw	r2,-28(fp)
   2e5f0:	10000526 	beq	r2,zero,2e608 <altera_avalon_jtag_uart_irq+0x1ac>
   2e5f4:	e0bffa17 	ldw	r2,-24(fp)
   2e5f8:	10c00d17 	ldw	r3,52(r2)
   2e5fc:	e0bffa17 	ldw	r2,-24(fp)
   2e600:	10800c17 	ldw	r2,48(r2)
   2e604:	18bfe51e 	bne	r3,r2,2e59c <__alt_data_end+0xfffee59c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2e608:	e0bff917 	ldw	r2,-28(fp)
   2e60c:	103f9d26 	beq	r2,zero,2e484 <__alt_data_end+0xfffee484>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e610:	e0bffa17 	ldw	r2,-24(fp)
   2e614:	10c00817 	ldw	r3,32(r2)
   2e618:	00bfff44 	movi	r2,-3
   2e61c:	1886703a 	and	r3,r3,r2
   2e620:	e0bffa17 	ldw	r2,-24(fp)
   2e624:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e628:	e0bffa17 	ldw	r2,-24(fp)
   2e62c:	10800017 	ldw	r2,0(r2)
   2e630:	10800104 	addi	r2,r2,4
   2e634:	1007883a 	mov	r3,r2
   2e638:	e0bffa17 	ldw	r2,-24(fp)
   2e63c:	10800817 	ldw	r2,32(r2)
   2e640:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e644:	e0bffb17 	ldw	r2,-20(fp)
   2e648:	10800104 	addi	r2,r2,4
   2e64c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2e650:	003f8c06 	br	2e484 <__alt_data_end+0xfffee484>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2e654:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2e658:	0001883a 	nop
   2e65c:	e037883a 	mov	sp,fp
   2e660:	df000017 	ldw	fp,0(sp)
   2e664:	dec00104 	addi	sp,sp,4
   2e668:	f800283a 	ret

0002e66c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e66c:	defff804 	addi	sp,sp,-32
   2e670:	df000715 	stw	fp,28(sp)
   2e674:	df000704 	addi	fp,sp,28
   2e678:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e67c:	e0bffb17 	ldw	r2,-20(fp)
   2e680:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e684:	e0bff917 	ldw	r2,-28(fp)
   2e688:	10800017 	ldw	r2,0(r2)
   2e68c:	10800104 	addi	r2,r2,4
   2e690:	10800037 	ldwio	r2,0(r2)
   2e694:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e698:	e0bffa17 	ldw	r2,-24(fp)
   2e69c:	1081000c 	andi	r2,r2,1024
   2e6a0:	10000b26 	beq	r2,zero,2e6d0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e6a4:	e0bff917 	ldw	r2,-28(fp)
   2e6a8:	10800017 	ldw	r2,0(r2)
   2e6ac:	10800104 	addi	r2,r2,4
   2e6b0:	1007883a 	mov	r3,r2
   2e6b4:	e0bff917 	ldw	r2,-28(fp)
   2e6b8:	10800817 	ldw	r2,32(r2)
   2e6bc:	10810014 	ori	r2,r2,1024
   2e6c0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2e6c4:	e0bff917 	ldw	r2,-28(fp)
   2e6c8:	10000915 	stw	zero,36(r2)
   2e6cc:	00000a06 	br	2e6f8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e6d0:	e0bff917 	ldw	r2,-28(fp)
   2e6d4:	10c00917 	ldw	r3,36(r2)
   2e6d8:	00a00034 	movhi	r2,32768
   2e6dc:	10bfff04 	addi	r2,r2,-4
   2e6e0:	10c00536 	bltu	r2,r3,2e6f8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2e6e4:	e0bff917 	ldw	r2,-28(fp)
   2e6e8:	10800917 	ldw	r2,36(r2)
   2e6ec:	10c00044 	addi	r3,r2,1
   2e6f0:	e0bff917 	ldw	r2,-28(fp)
   2e6f4:	10c00915 	stw	r3,36(r2)
   2e6f8:	d0a6e817 	ldw	r2,-25696(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e6fc:	e037883a 	mov	sp,fp
   2e700:	df000017 	ldw	fp,0(sp)
   2e704:	dec00104 	addi	sp,sp,4
   2e708:	f800283a 	ret

0002e70c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e70c:	defffd04 	addi	sp,sp,-12
   2e710:	df000215 	stw	fp,8(sp)
   2e714:	df000204 	addi	fp,sp,8
   2e718:	e13ffe15 	stw	r4,-8(fp)
   2e71c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e720:	00000506 	br	2e738 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2e724:	e0bfff17 	ldw	r2,-4(fp)
   2e728:	1090000c 	andi	r2,r2,16384
   2e72c:	10000226 	beq	r2,zero,2e738 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2e730:	00bffd44 	movi	r2,-11
   2e734:	00000b06 	br	2e764 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e738:	e0bffe17 	ldw	r2,-8(fp)
   2e73c:	10c00d17 	ldw	r3,52(r2)
   2e740:	e0bffe17 	ldw	r2,-8(fp)
   2e744:	10800c17 	ldw	r2,48(r2)
   2e748:	18800526 	beq	r3,r2,2e760 <altera_avalon_jtag_uart_close+0x54>
   2e74c:	e0bffe17 	ldw	r2,-8(fp)
   2e750:	10c00917 	ldw	r3,36(r2)
   2e754:	e0bffe17 	ldw	r2,-8(fp)
   2e758:	10800117 	ldw	r2,4(r2)
   2e75c:	18bff136 	bltu	r3,r2,2e724 <__alt_data_end+0xfffee724>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2e760:	0005883a 	mov	r2,zero
}
   2e764:	e037883a 	mov	sp,fp
   2e768:	df000017 	ldw	fp,0(sp)
   2e76c:	dec00104 	addi	sp,sp,4
   2e770:	f800283a 	ret

0002e774 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e774:	defffa04 	addi	sp,sp,-24
   2e778:	df000515 	stw	fp,20(sp)
   2e77c:	df000504 	addi	fp,sp,20
   2e780:	e13ffd15 	stw	r4,-12(fp)
   2e784:	e17ffe15 	stw	r5,-8(fp)
   2e788:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2e78c:	00bff9c4 	movi	r2,-25
   2e790:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2e794:	e0bffe17 	ldw	r2,-8(fp)
   2e798:	10da8060 	cmpeqi	r3,r2,27137
   2e79c:	1800031e 	bne	r3,zero,2e7ac <altera_avalon_jtag_uart_ioctl+0x38>
   2e7a0:	109a80a0 	cmpeqi	r2,r2,27138
   2e7a4:	1000181e 	bne	r2,zero,2e808 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2e7a8:	00002906 	br	2e850 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2e7ac:	e0bffd17 	ldw	r2,-12(fp)
   2e7b0:	10c00117 	ldw	r3,4(r2)
   2e7b4:	00a00034 	movhi	r2,32768
   2e7b8:	10bfffc4 	addi	r2,r2,-1
   2e7bc:	18802126 	beq	r3,r2,2e844 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2e7c0:	e0bfff17 	ldw	r2,-4(fp)
   2e7c4:	10800017 	ldw	r2,0(r2)
   2e7c8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2e7cc:	e0bffc17 	ldw	r2,-16(fp)
   2e7d0:	10800090 	cmplti	r2,r2,2
   2e7d4:	1000061e 	bne	r2,zero,2e7f0 <altera_avalon_jtag_uart_ioctl+0x7c>
   2e7d8:	e0fffc17 	ldw	r3,-16(fp)
   2e7dc:	00a00034 	movhi	r2,32768
   2e7e0:	10bfffc4 	addi	r2,r2,-1
   2e7e4:	18800226 	beq	r3,r2,2e7f0 <altera_avalon_jtag_uart_ioctl+0x7c>
   2e7e8:	e0bffc17 	ldw	r2,-16(fp)
   2e7ec:	00000206 	br	2e7f8 <altera_avalon_jtag_uart_ioctl+0x84>
   2e7f0:	00a00034 	movhi	r2,32768
   2e7f4:	10bfff84 	addi	r2,r2,-2
   2e7f8:	e0fffd17 	ldw	r3,-12(fp)
   2e7fc:	18800115 	stw	r2,4(r3)
      rc = 0;
   2e800:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2e804:	00000f06 	br	2e844 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2e808:	e0bffd17 	ldw	r2,-12(fp)
   2e80c:	10c00117 	ldw	r3,4(r2)
   2e810:	00a00034 	movhi	r2,32768
   2e814:	10bfffc4 	addi	r2,r2,-1
   2e818:	18800c26 	beq	r3,r2,2e84c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2e81c:	e0bffd17 	ldw	r2,-12(fp)
   2e820:	10c00917 	ldw	r3,36(r2)
   2e824:	e0bffd17 	ldw	r2,-12(fp)
   2e828:	10800117 	ldw	r2,4(r2)
   2e82c:	1885803a 	cmpltu	r2,r3,r2
   2e830:	10c03fcc 	andi	r3,r2,255
   2e834:	e0bfff17 	ldw	r2,-4(fp)
   2e838:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2e83c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2e840:	00000206 	br	2e84c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2e844:	0001883a 	nop
   2e848:	00000106 	br	2e850 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2e84c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2e850:	e0bffb17 	ldw	r2,-20(fp)
}
   2e854:	e037883a 	mov	sp,fp
   2e858:	df000017 	ldw	fp,0(sp)
   2e85c:	dec00104 	addi	sp,sp,4
   2e860:	f800283a 	ret

0002e864 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2e864:	defff304 	addi	sp,sp,-52
   2e868:	dfc00c15 	stw	ra,48(sp)
   2e86c:	df000b15 	stw	fp,44(sp)
   2e870:	df000b04 	addi	fp,sp,44
   2e874:	e13ffc15 	stw	r4,-16(fp)
   2e878:	e17ffd15 	stw	r5,-12(fp)
   2e87c:	e1bffe15 	stw	r6,-8(fp)
   2e880:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2e884:	e0bffd17 	ldw	r2,-12(fp)
   2e888:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e88c:	00004706 	br	2e9ac <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2e890:	e0bffc17 	ldw	r2,-16(fp)
   2e894:	10800a17 	ldw	r2,40(r2)
   2e898:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2e89c:	e0bffc17 	ldw	r2,-16(fp)
   2e8a0:	10800b17 	ldw	r2,44(r2)
   2e8a4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2e8a8:	e0fff717 	ldw	r3,-36(fp)
   2e8ac:	e0bff817 	ldw	r2,-32(fp)
   2e8b0:	18800536 	bltu	r3,r2,2e8c8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2e8b4:	e0fff717 	ldw	r3,-36(fp)
   2e8b8:	e0bff817 	ldw	r2,-32(fp)
   2e8bc:	1885c83a 	sub	r2,r3,r2
   2e8c0:	e0bff615 	stw	r2,-40(fp)
   2e8c4:	00000406 	br	2e8d8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2e8c8:	00c20004 	movi	r3,2048
   2e8cc:	e0bff817 	ldw	r2,-32(fp)
   2e8d0:	1885c83a 	sub	r2,r3,r2
   2e8d4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2e8d8:	e0bff617 	ldw	r2,-40(fp)
   2e8dc:	10001e26 	beq	r2,zero,2e958 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2e8e0:	e0fffe17 	ldw	r3,-8(fp)
   2e8e4:	e0bff617 	ldw	r2,-40(fp)
   2e8e8:	1880022e 	bgeu	r3,r2,2e8f4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2e8ec:	e0bffe17 	ldw	r2,-8(fp)
   2e8f0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2e8f4:	e0bffc17 	ldw	r2,-16(fp)
   2e8f8:	10c00e04 	addi	r3,r2,56
   2e8fc:	e0bff817 	ldw	r2,-32(fp)
   2e900:	1885883a 	add	r2,r3,r2
   2e904:	e1bff617 	ldw	r6,-40(fp)
   2e908:	100b883a 	mov	r5,r2
   2e90c:	e13ff517 	ldw	r4,-44(fp)
   2e910:	0026d000 	call	26d00 <memcpy>
      ptr   += n;
   2e914:	e0fff517 	ldw	r3,-44(fp)
   2e918:	e0bff617 	ldw	r2,-40(fp)
   2e91c:	1885883a 	add	r2,r3,r2
   2e920:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2e924:	e0fffe17 	ldw	r3,-8(fp)
   2e928:	e0bff617 	ldw	r2,-40(fp)
   2e92c:	1885c83a 	sub	r2,r3,r2
   2e930:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e934:	e0fff817 	ldw	r3,-32(fp)
   2e938:	e0bff617 	ldw	r2,-40(fp)
   2e93c:	1885883a 	add	r2,r3,r2
   2e940:	10c1ffcc 	andi	r3,r2,2047
   2e944:	e0bffc17 	ldw	r2,-16(fp)
   2e948:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2e94c:	e0bffe17 	ldw	r2,-8(fp)
   2e950:	00bfcf16 	blt	zero,r2,2e890 <__alt_data_end+0xfffee890>
   2e954:	00000106 	br	2e95c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2e958:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2e95c:	e0fff517 	ldw	r3,-44(fp)
   2e960:	e0bffd17 	ldw	r2,-12(fp)
   2e964:	1880141e 	bne	r3,r2,2e9b8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2e968:	e0bfff17 	ldw	r2,-4(fp)
   2e96c:	1090000c 	andi	r2,r2,16384
   2e970:	1000131e 	bne	r2,zero,2e9c0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2e974:	0001883a 	nop
   2e978:	e0bffc17 	ldw	r2,-16(fp)
   2e97c:	10c00a17 	ldw	r3,40(r2)
   2e980:	e0bff717 	ldw	r2,-36(fp)
   2e984:	1880051e 	bne	r3,r2,2e99c <altera_avalon_jtag_uart_read+0x138>
   2e988:	e0bffc17 	ldw	r2,-16(fp)
   2e98c:	10c00917 	ldw	r3,36(r2)
   2e990:	e0bffc17 	ldw	r2,-16(fp)
   2e994:	10800117 	ldw	r2,4(r2)
   2e998:	18bff736 	bltu	r3,r2,2e978 <__alt_data_end+0xfffee978>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2e99c:	e0bffc17 	ldw	r2,-16(fp)
   2e9a0:	10c00a17 	ldw	r3,40(r2)
   2e9a4:	e0bff717 	ldw	r2,-36(fp)
   2e9a8:	18800726 	beq	r3,r2,2e9c8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e9ac:	e0bffe17 	ldw	r2,-8(fp)
   2e9b0:	00bfb716 	blt	zero,r2,2e890 <__alt_data_end+0xfffee890>
   2e9b4:	00000506 	br	2e9cc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2e9b8:	0001883a 	nop
   2e9bc:	00000306 	br	2e9cc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2e9c0:	0001883a 	nop
   2e9c4:	00000106 	br	2e9cc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2e9c8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2e9cc:	e0fff517 	ldw	r3,-44(fp)
   2e9d0:	e0bffd17 	ldw	r2,-12(fp)
   2e9d4:	18801826 	beq	r3,r2,2ea38 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e9d8:	0005303a 	rdctl	r2,status
   2e9dc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e9e0:	e0fffb17 	ldw	r3,-20(fp)
   2e9e4:	00bfff84 	movi	r2,-2
   2e9e8:	1884703a 	and	r2,r3,r2
   2e9ec:	1001703a 	wrctl	status,r2
  
  return context;
   2e9f0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2e9f4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e9f8:	e0bffc17 	ldw	r2,-16(fp)
   2e9fc:	10800817 	ldw	r2,32(r2)
   2ea00:	10c00054 	ori	r3,r2,1
   2ea04:	e0bffc17 	ldw	r2,-16(fp)
   2ea08:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ea0c:	e0bffc17 	ldw	r2,-16(fp)
   2ea10:	10800017 	ldw	r2,0(r2)
   2ea14:	10800104 	addi	r2,r2,4
   2ea18:	1007883a 	mov	r3,r2
   2ea1c:	e0bffc17 	ldw	r2,-16(fp)
   2ea20:	10800817 	ldw	r2,32(r2)
   2ea24:	18800035 	stwio	r2,0(r3)
   2ea28:	e0bffa17 	ldw	r2,-24(fp)
   2ea2c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ea30:	e0bff917 	ldw	r2,-28(fp)
   2ea34:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2ea38:	e0fff517 	ldw	r3,-44(fp)
   2ea3c:	e0bffd17 	ldw	r2,-12(fp)
   2ea40:	18800426 	beq	r3,r2,2ea54 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2ea44:	e0fff517 	ldw	r3,-44(fp)
   2ea48:	e0bffd17 	ldw	r2,-12(fp)
   2ea4c:	1885c83a 	sub	r2,r3,r2
   2ea50:	00000606 	br	2ea6c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2ea54:	e0bfff17 	ldw	r2,-4(fp)
   2ea58:	1090000c 	andi	r2,r2,16384
   2ea5c:	10000226 	beq	r2,zero,2ea68 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2ea60:	00bffd44 	movi	r2,-11
   2ea64:	00000106 	br	2ea6c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2ea68:	00bffec4 	movi	r2,-5
}
   2ea6c:	e037883a 	mov	sp,fp
   2ea70:	dfc00117 	ldw	ra,4(sp)
   2ea74:	df000017 	ldw	fp,0(sp)
   2ea78:	dec00204 	addi	sp,sp,8
   2ea7c:	f800283a 	ret

0002ea80 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2ea80:	defff304 	addi	sp,sp,-52
   2ea84:	dfc00c15 	stw	ra,48(sp)
   2ea88:	df000b15 	stw	fp,44(sp)
   2ea8c:	df000b04 	addi	fp,sp,44
   2ea90:	e13ffc15 	stw	r4,-16(fp)
   2ea94:	e17ffd15 	stw	r5,-12(fp)
   2ea98:	e1bffe15 	stw	r6,-8(fp)
   2ea9c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2eaa0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2eaa4:	e0bffd17 	ldw	r2,-12(fp)
   2eaa8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2eaac:	00003706 	br	2eb8c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2eab0:	e0bffc17 	ldw	r2,-16(fp)
   2eab4:	10800c17 	ldw	r2,48(r2)
   2eab8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2eabc:	e0bffc17 	ldw	r2,-16(fp)
   2eac0:	10800d17 	ldw	r2,52(r2)
   2eac4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2eac8:	e0fff917 	ldw	r3,-28(fp)
   2eacc:	e0bff517 	ldw	r2,-44(fp)
   2ead0:	1880062e 	bgeu	r3,r2,2eaec <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2ead4:	e0fff517 	ldw	r3,-44(fp)
   2ead8:	e0bff917 	ldw	r2,-28(fp)
   2eadc:	1885c83a 	sub	r2,r3,r2
   2eae0:	10bfffc4 	addi	r2,r2,-1
   2eae4:	e0bff615 	stw	r2,-40(fp)
   2eae8:	00000b06 	br	2eb18 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2eaec:	e0bff517 	ldw	r2,-44(fp)
   2eaf0:	10000526 	beq	r2,zero,2eb08 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2eaf4:	00c20004 	movi	r3,2048
   2eaf8:	e0bff917 	ldw	r2,-28(fp)
   2eafc:	1885c83a 	sub	r2,r3,r2
   2eb00:	e0bff615 	stw	r2,-40(fp)
   2eb04:	00000406 	br	2eb18 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2eb08:	00c1ffc4 	movi	r3,2047
   2eb0c:	e0bff917 	ldw	r2,-28(fp)
   2eb10:	1885c83a 	sub	r2,r3,r2
   2eb14:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2eb18:	e0bff617 	ldw	r2,-40(fp)
   2eb1c:	10001e26 	beq	r2,zero,2eb98 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2eb20:	e0fffe17 	ldw	r3,-8(fp)
   2eb24:	e0bff617 	ldw	r2,-40(fp)
   2eb28:	1880022e 	bgeu	r3,r2,2eb34 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2eb2c:	e0bffe17 	ldw	r2,-8(fp)
   2eb30:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2eb34:	e0bffc17 	ldw	r2,-16(fp)
   2eb38:	10c20e04 	addi	r3,r2,2104
   2eb3c:	e0bff917 	ldw	r2,-28(fp)
   2eb40:	1885883a 	add	r2,r3,r2
   2eb44:	e1bff617 	ldw	r6,-40(fp)
   2eb48:	e17ffd17 	ldw	r5,-12(fp)
   2eb4c:	1009883a 	mov	r4,r2
   2eb50:	0026d000 	call	26d00 <memcpy>
      ptr   += n;
   2eb54:	e0fffd17 	ldw	r3,-12(fp)
   2eb58:	e0bff617 	ldw	r2,-40(fp)
   2eb5c:	1885883a 	add	r2,r3,r2
   2eb60:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2eb64:	e0fffe17 	ldw	r3,-8(fp)
   2eb68:	e0bff617 	ldw	r2,-40(fp)
   2eb6c:	1885c83a 	sub	r2,r3,r2
   2eb70:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2eb74:	e0fff917 	ldw	r3,-28(fp)
   2eb78:	e0bff617 	ldw	r2,-40(fp)
   2eb7c:	1885883a 	add	r2,r3,r2
   2eb80:	10c1ffcc 	andi	r3,r2,2047
   2eb84:	e0bffc17 	ldw	r2,-16(fp)
   2eb88:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2eb8c:	e0bffe17 	ldw	r2,-8(fp)
   2eb90:	00bfc716 	blt	zero,r2,2eab0 <__alt_data_end+0xfffeeab0>
   2eb94:	00000106 	br	2eb9c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2eb98:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eb9c:	0005303a 	rdctl	r2,status
   2eba0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eba4:	e0fffb17 	ldw	r3,-20(fp)
   2eba8:	00bfff84 	movi	r2,-2
   2ebac:	1884703a 	and	r2,r3,r2
   2ebb0:	1001703a 	wrctl	status,r2
  
  return context;
   2ebb4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2ebb8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2ebbc:	e0bffc17 	ldw	r2,-16(fp)
   2ebc0:	10800817 	ldw	r2,32(r2)
   2ebc4:	10c00094 	ori	r3,r2,2
   2ebc8:	e0bffc17 	ldw	r2,-16(fp)
   2ebcc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ebd0:	e0bffc17 	ldw	r2,-16(fp)
   2ebd4:	10800017 	ldw	r2,0(r2)
   2ebd8:	10800104 	addi	r2,r2,4
   2ebdc:	1007883a 	mov	r3,r2
   2ebe0:	e0bffc17 	ldw	r2,-16(fp)
   2ebe4:	10800817 	ldw	r2,32(r2)
   2ebe8:	18800035 	stwio	r2,0(r3)
   2ebec:	e0bffa17 	ldw	r2,-24(fp)
   2ebf0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ebf4:	e0bff817 	ldw	r2,-32(fp)
   2ebf8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2ebfc:	e0bffe17 	ldw	r2,-8(fp)
   2ec00:	0080100e 	bge	zero,r2,2ec44 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2ec04:	e0bfff17 	ldw	r2,-4(fp)
   2ec08:	1090000c 	andi	r2,r2,16384
   2ec0c:	1000101e 	bne	r2,zero,2ec50 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ec10:	0001883a 	nop
   2ec14:	e0bffc17 	ldw	r2,-16(fp)
   2ec18:	10c00d17 	ldw	r3,52(r2)
   2ec1c:	e0bff517 	ldw	r2,-44(fp)
   2ec20:	1880051e 	bne	r3,r2,2ec38 <altera_avalon_jtag_uart_write+0x1b8>
   2ec24:	e0bffc17 	ldw	r2,-16(fp)
   2ec28:	10c00917 	ldw	r3,36(r2)
   2ec2c:	e0bffc17 	ldw	r2,-16(fp)
   2ec30:	10800117 	ldw	r2,4(r2)
   2ec34:	18bff736 	bltu	r3,r2,2ec14 <__alt_data_end+0xfffeec14>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ec38:	e0bffc17 	ldw	r2,-16(fp)
   2ec3c:	10800917 	ldw	r2,36(r2)
   2ec40:	1000051e 	bne	r2,zero,2ec58 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2ec44:	e0bffe17 	ldw	r2,-8(fp)
   2ec48:	00bfd016 	blt	zero,r2,2eb8c <__alt_data_end+0xfffeeb8c>
   2ec4c:	00000306 	br	2ec5c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2ec50:	0001883a 	nop
   2ec54:	00000106 	br	2ec5c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2ec58:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2ec5c:	e0fffd17 	ldw	r3,-12(fp)
   2ec60:	e0bff717 	ldw	r2,-36(fp)
   2ec64:	18800426 	beq	r3,r2,2ec78 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2ec68:	e0fffd17 	ldw	r3,-12(fp)
   2ec6c:	e0bff717 	ldw	r2,-36(fp)
   2ec70:	1885c83a 	sub	r2,r3,r2
   2ec74:	00000606 	br	2ec90 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2ec78:	e0bfff17 	ldw	r2,-4(fp)
   2ec7c:	1090000c 	andi	r2,r2,16384
   2ec80:	10000226 	beq	r2,zero,2ec8c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2ec84:	00bffd44 	movi	r2,-11
   2ec88:	00000106 	br	2ec90 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2ec8c:	00bffec4 	movi	r2,-5
}
   2ec90:	e037883a 	mov	sp,fp
   2ec94:	dfc00117 	ldw	ra,4(sp)
   2ec98:	df000017 	ldw	fp,0(sp)
   2ec9c:	dec00204 	addi	sp,sp,8
   2eca0:	f800283a 	ret

0002eca4 <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
   2eca4:	defffe04 	addi	sp,sp,-8
   2eca8:	df000115 	stw	fp,4(sp)
   2ecac:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
   2ecb0:	d0a6e517 	ldw	r2,-25708(gp)
   2ecb4:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
   2ecb8:	d0a6e617 	ldw	r2,-25704(gp)
   2ecbc:	1000021e 	bne	r2,zero,2ecc8 <alt_timestamp_start+0x24>
  {
    return -1;
   2ecc0:	00bfffc4 	movi	r2,-1
   2ecc4:	00001106 	br	2ed0c <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
   2ecc8:	e0bfff17 	ldw	r2,-4(fp)
   2eccc:	10800104 	addi	r2,r2,4
   2ecd0:	00c00204 	movi	r3,8
   2ecd4:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
   2ecd8:	e0bfff17 	ldw	r2,-4(fp)
   2ecdc:	10800204 	addi	r2,r2,8
   2ece0:	00ffffd4 	movui	r3,65535
   2ece4:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
   2ece8:	e0bfff17 	ldw	r2,-4(fp)
   2ecec:	10800304 	addi	r2,r2,12
   2ecf0:	00ffffd4 	movui	r3,65535
   2ecf4:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
   2ecf8:	e0bfff17 	ldw	r2,-4(fp)
   2ecfc:	10800104 	addi	r2,r2,4
   2ed00:	00c00104 	movi	r3,4
   2ed04:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
   2ed08:	0005883a 	mov	r2,zero
}
   2ed0c:	e037883a 	mov	sp,fp
   2ed10:	df000017 	ldw	fp,0(sp)
   2ed14:	dec00104 	addi	sp,sp,4
   2ed18:	f800283a 	ret

0002ed1c <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
   2ed1c:	defffc04 	addi	sp,sp,-16
   2ed20:	df000315 	stw	fp,12(sp)
   2ed24:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
   2ed28:	d0a6e517 	ldw	r2,-25708(gp)
   2ed2c:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
   2ed30:	d0a6e617 	ldw	r2,-25704(gp)
   2ed34:	1000021e 	bne	r2,zero,2ed40 <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
   2ed38:	00bfffc4 	movi	r2,-1
   2ed3c:	00001306 	br	2ed8c <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
   2ed40:	e0bffd17 	ldw	r2,-12(fp)
   2ed44:	10800404 	addi	r2,r2,16
   2ed48:	0007883a 	mov	r3,zero
   2ed4c:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
   2ed50:	e0bffd17 	ldw	r2,-12(fp)
   2ed54:	10800404 	addi	r2,r2,16
   2ed58:	10800037 	ldwio	r2,0(r2)
   2ed5c:	10bfffcc 	andi	r2,r2,65535
   2ed60:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
   2ed64:	e0bffd17 	ldw	r2,-12(fp)
   2ed68:	10800504 	addi	r2,r2,20
   2ed6c:	10800037 	ldwio	r2,0(r2)
   2ed70:	10bfffcc 	andi	r2,r2,65535
   2ed74:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
   2ed78:	e0bfff17 	ldw	r2,-4(fp)
   2ed7c:	1006943a 	slli	r3,r2,16
   2ed80:	e0bffe17 	ldw	r2,-8(fp)
   2ed84:	1884b03a 	or	r2,r3,r2
   2ed88:	0084303a 	nor	r2,zero,r2
#endif
  }
}
   2ed8c:	e037883a 	mov	sp,fp
   2ed90:	df000017 	ldw	fp,0(sp)
   2ed94:	dec00104 	addi	sp,sp,4
   2ed98:	f800283a 	ret

0002ed9c <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
   2ed9c:	deffff04 	addi	sp,sp,-4
   2eda0:	df000015 	stw	fp,0(sp)
   2eda4:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
   2eda8:	d0a6e617 	ldw	r2,-25704(gp)
}
   2edac:	e037883a 	mov	sp,fp
   2edb0:	df000017 	ldw	fp,0(sp)
   2edb4:	dec00104 	addi	sp,sp,4
   2edb8:	f800283a 	ret

0002edbc <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   2edbc:	defffc04 	addi	sp,sp,-16
   2edc0:	dfc00315 	stw	ra,12(sp)
   2edc4:	df000215 	stw	fp,8(sp)
   2edc8:	df000204 	addi	fp,sp,8
   2edcc:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   2edd0:	d1600804 	addi	r5,gp,-32736
   2edd4:	e13fff17 	ldw	r4,-4(fp)
   2edd8:	002f4800 	call	2f480 <alt_find_dev>
   2eddc:	e0bffe15 	stw	r2,-8(fp)

  return dev;
   2ede0:	e0bffe17 	ldw	r2,-8(fp)
}
   2ede4:	e037883a 	mov	sp,fp
   2ede8:	dfc00117 	ldw	ra,4(sp)
   2edec:	df000017 	ldw	fp,0(sp)
   2edf0:	dec00204 	addi	sp,sp,8
   2edf4:	f800283a 	ret

0002edf8 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   2edf8:	defffd04 	addi	sp,sp,-12
   2edfc:	df000215 	stw	fp,8(sp)
   2ee00:	df000204 	addi	fp,sp,8
   2ee04:	e13ffe15 	stw	r4,-8(fp)
   2ee08:	e17fff15 	stw	r5,-4(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   2ee0c:	e0bffe17 	ldw	r2,-8(fp)
   2ee10:	10800a17 	ldw	r2,40(r2)
   2ee14:	10800023 	ldbuio	r2,0(r2)
   2ee18:	10803fcc 	andi	r2,r2,255
   2ee1c:	1007883a 	mov	r3,r2
   2ee20:	e0bfff17 	ldw	r2,-4(fp)
   2ee24:	10c00005 	stb	r3,0(r2)

	return 0;
   2ee28:	0005883a 	mov	r2,zero
}
   2ee2c:	e037883a 	mov	sp,fp
   2ee30:	df000017 	ldw	fp,0(sp)
   2ee34:	dec00104 	addi	sp,sp,4
   2ee38:	f800283a 	ret

0002ee3c <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   2ee3c:	defffc04 	addi	sp,sp,-16
   2ee40:	df000315 	stw	fp,12(sp)
   2ee44:	df000304 	addi	fp,sp,12
   2ee48:	e13ffd15 	stw	r4,-12(fp)
   2ee4c:	2805883a 	mov	r2,r5
   2ee50:	e1bfff15 	stw	r6,-4(fp)
   2ee54:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ee58:	e0bffd17 	ldw	r2,-12(fp)
   2ee5c:	10800a17 	ldw	r2,40(r2)
   2ee60:	1007883a 	mov	r3,r2
   2ee64:	e0bffe03 	ldbu	r2,-8(fp)
   2ee68:	10800fcc 	andi	r2,r2,63
   2ee6c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2ee70:	e0bffd17 	ldw	r2,-12(fp)
   2ee74:	10800a17 	ldw	r2,40(r2)
   2ee78:	10800044 	addi	r2,r2,1
   2ee7c:	10800023 	ldbuio	r2,0(r2)
   2ee80:	10803fcc 	andi	r2,r2,255
   2ee84:	1007883a 	mov	r3,r2
   2ee88:	e0bfff17 	ldw	r2,-4(fp)
   2ee8c:	10c00005 	stb	r3,0(r2)

	return 0;
   2ee90:	0005883a 	mov	r2,zero
}
   2ee94:	e037883a 	mov	sp,fp
   2ee98:	df000017 	ldw	fp,0(sp)
   2ee9c:	dec00104 	addi	sp,sp,4
   2eea0:	f800283a 	ret

0002eea4 <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   2eea4:	defffc04 	addi	sp,sp,-16
   2eea8:	df000315 	stw	fp,12(sp)
   2eeac:	df000304 	addi	fp,sp,12
   2eeb0:	e13ffd15 	stw	r4,-12(fp)
   2eeb4:	2807883a 	mov	r3,r5
   2eeb8:	3005883a 	mov	r2,r6
   2eebc:	e0fffe05 	stb	r3,-8(fp)
   2eec0:	e0bfff05 	stb	r2,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2eec4:	e0bffd17 	ldw	r2,-12(fp)
   2eec8:	10800a17 	ldw	r2,40(r2)
   2eecc:	1007883a 	mov	r3,r2
   2eed0:	e0bffe03 	ldbu	r2,-8(fp)
   2eed4:	10800fcc 	andi	r2,r2,63
   2eed8:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   2eedc:	e0bffd17 	ldw	r2,-12(fp)
   2eee0:	10800a17 	ldw	r2,40(r2)
   2eee4:	10800044 	addi	r2,r2,1
   2eee8:	1007883a 	mov	r3,r2
   2eeec:	e0bfff03 	ldbu	r2,-4(fp)
   2eef0:	18800025 	stbio	r2,0(r3)

	return 0;
   2eef4:	0005883a 	mov	r2,zero
}
   2eef8:	e037883a 	mov	sp,fp
   2eefc:	df000017 	ldw	fp,0(sp)
   2ef00:	dec00104 	addi	sp,sp,4
   2ef04:	f800283a 	ret

0002ef08 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   2ef08:	defffd04 	addi	sp,sp,-12
   2ef0c:	df000215 	stw	fp,8(sp)
   2ef10:	df000204 	addi	fp,sp,8
   2ef14:	e13ffe15 	stw	r4,-8(fp)
   2ef18:	e17fff15 	stw	r5,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ef1c:	e0bffe17 	ldw	r2,-8(fp)
   2ef20:	10800a17 	ldw	r2,40(r2)
   2ef24:	1007883a 	mov	r3,r2
   2ef28:	00800c84 	movi	r2,50
   2ef2c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2ef30:	e0bffe17 	ldw	r2,-8(fp)
   2ef34:	10800a17 	ldw	r2,40(r2)
   2ef38:	10800044 	addi	r2,r2,1
   2ef3c:	10800023 	ldbuio	r2,0(r2)
   2ef40:	10803fcc 	andi	r2,r2,255
   2ef44:	10ffffcc 	andi	r3,r2,65535
   2ef48:	e0bfff17 	ldw	r2,-4(fp)
   2ef4c:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ef50:	e0bffe17 	ldw	r2,-8(fp)
   2ef54:	10800a17 	ldw	r2,40(r2)
   2ef58:	1007883a 	mov	r3,r2
   2ef5c:	00800cc4 	movi	r2,51
   2ef60:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2ef64:	e0bffe17 	ldw	r2,-8(fp)
   2ef68:	10800a17 	ldw	r2,40(r2)
   2ef6c:	10800044 	addi	r2,r2,1
   2ef70:	10800023 	ldbuio	r2,0(r2)
   2ef74:	10803fcc 	andi	r2,r2,255
   2ef78:	10bfffcc 	andi	r2,r2,65535
   2ef7c:	1004923a 	slli	r2,r2,8
   2ef80:	e0ffff17 	ldw	r3,-4(fp)
   2ef84:	18c00017 	ldw	r3,0(r3)
   2ef88:	1885883a 	add	r2,r3,r2
   2ef8c:	1007883a 	mov	r3,r2
   2ef90:	e0bfff17 	ldw	r2,-4(fp)
   2ef94:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   2ef98:	e0bfff17 	ldw	r2,-4(fp)
   2ef9c:	10800017 	ldw	r2,0(r2)
   2efa0:	10a0000c 	andi	r2,r2,32768
   2efa4:	10000626 	beq	r2,zero,2efc0 <alt_up_accelerometer_spi_read_x_axis+0xb8>
	{
		*(x_axis) |= 0xFFFF0000;
   2efa8:	e0bfff17 	ldw	r2,-4(fp)
   2efac:	10800017 	ldw	r2,0(r2)
   2efb0:	10bffff4 	orhi	r2,r2,65535
   2efb4:	1007883a 	mov	r3,r2
   2efb8:	e0bfff17 	ldw	r2,-4(fp)
   2efbc:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2efc0:	0005883a 	mov	r2,zero
}
   2efc4:	e037883a 	mov	sp,fp
   2efc8:	df000017 	ldw	fp,0(sp)
   2efcc:	dec00104 	addi	sp,sp,4
   2efd0:	f800283a 	ret

0002efd4 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   2efd4:	defffd04 	addi	sp,sp,-12
   2efd8:	df000215 	stw	fp,8(sp)
   2efdc:	df000204 	addi	fp,sp,8
   2efe0:	e13ffe15 	stw	r4,-8(fp)
   2efe4:	e17fff15 	stw	r5,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2efe8:	e0bffe17 	ldw	r2,-8(fp)
   2efec:	10800a17 	ldw	r2,40(r2)
   2eff0:	1007883a 	mov	r3,r2
   2eff4:	00800d04 	movi	r2,52
   2eff8:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2effc:	e0bffe17 	ldw	r2,-8(fp)
   2f000:	10800a17 	ldw	r2,40(r2)
   2f004:	10800044 	addi	r2,r2,1
   2f008:	10800023 	ldbuio	r2,0(r2)
   2f00c:	10803fcc 	andi	r2,r2,255
   2f010:	10ffffcc 	andi	r3,r2,65535
   2f014:	e0bfff17 	ldw	r2,-4(fp)
   2f018:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f01c:	e0bffe17 	ldw	r2,-8(fp)
   2f020:	10800a17 	ldw	r2,40(r2)
   2f024:	1007883a 	mov	r3,r2
   2f028:	00800d44 	movi	r2,53
   2f02c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f030:	e0bffe17 	ldw	r2,-8(fp)
   2f034:	10800a17 	ldw	r2,40(r2)
   2f038:	10800044 	addi	r2,r2,1
   2f03c:	10800023 	ldbuio	r2,0(r2)
   2f040:	10803fcc 	andi	r2,r2,255
   2f044:	10bfffcc 	andi	r2,r2,65535
   2f048:	1004923a 	slli	r2,r2,8
   2f04c:	e0ffff17 	ldw	r3,-4(fp)
   2f050:	18c00017 	ldw	r3,0(r3)
   2f054:	1885883a 	add	r2,r3,r2
   2f058:	1007883a 	mov	r3,r2
   2f05c:	e0bfff17 	ldw	r2,-4(fp)
   2f060:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   2f064:	e0bfff17 	ldw	r2,-4(fp)
   2f068:	10800017 	ldw	r2,0(r2)
   2f06c:	10a0000c 	andi	r2,r2,32768
   2f070:	10000626 	beq	r2,zero,2f08c <alt_up_accelerometer_spi_read_y_axis+0xb8>
	{
		*(y_axis) |= 0xFFFF0000;
   2f074:	e0bfff17 	ldw	r2,-4(fp)
   2f078:	10800017 	ldw	r2,0(r2)
   2f07c:	10bffff4 	orhi	r2,r2,65535
   2f080:	1007883a 	mov	r3,r2
   2f084:	e0bfff17 	ldw	r2,-4(fp)
   2f088:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f08c:	0005883a 	mov	r2,zero
}
   2f090:	e037883a 	mov	sp,fp
   2f094:	df000017 	ldw	fp,0(sp)
   2f098:	dec00104 	addi	sp,sp,4
   2f09c:	f800283a 	ret

0002f0a0 <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   2f0a0:	defffd04 	addi	sp,sp,-12
   2f0a4:	df000215 	stw	fp,8(sp)
   2f0a8:	df000204 	addi	fp,sp,8
   2f0ac:	e13ffe15 	stw	r4,-8(fp)
   2f0b0:	e17fff15 	stw	r5,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0b4:	e0bffe17 	ldw	r2,-8(fp)
   2f0b8:	10800a17 	ldw	r2,40(r2)
   2f0bc:	1007883a 	mov	r3,r2
   2f0c0:	00800d84 	movi	r2,54
   2f0c4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f0c8:	e0bffe17 	ldw	r2,-8(fp)
   2f0cc:	10800a17 	ldw	r2,40(r2)
   2f0d0:	10800044 	addi	r2,r2,1
   2f0d4:	10800023 	ldbuio	r2,0(r2)
   2f0d8:	10803fcc 	andi	r2,r2,255
   2f0dc:	10ffffcc 	andi	r3,r2,65535
   2f0e0:	e0bfff17 	ldw	r2,-4(fp)
   2f0e4:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0e8:	e0bffe17 	ldw	r2,-8(fp)
   2f0ec:	10800a17 	ldw	r2,40(r2)
   2f0f0:	1007883a 	mov	r3,r2
   2f0f4:	00800dc4 	movi	r2,55
   2f0f8:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f0fc:	e0bffe17 	ldw	r2,-8(fp)
   2f100:	10800a17 	ldw	r2,40(r2)
   2f104:	10800044 	addi	r2,r2,1
   2f108:	10800023 	ldbuio	r2,0(r2)
   2f10c:	10803fcc 	andi	r2,r2,255
   2f110:	10bfffcc 	andi	r2,r2,65535
   2f114:	1004923a 	slli	r2,r2,8
   2f118:	e0ffff17 	ldw	r3,-4(fp)
   2f11c:	18c00017 	ldw	r3,0(r3)
   2f120:	1885883a 	add	r2,r3,r2
   2f124:	1007883a 	mov	r3,r2
   2f128:	e0bfff17 	ldw	r2,-4(fp)
   2f12c:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   2f130:	e0bfff17 	ldw	r2,-4(fp)
   2f134:	10800017 	ldw	r2,0(r2)
   2f138:	10a0000c 	andi	r2,r2,32768
   2f13c:	10000626 	beq	r2,zero,2f158 <alt_up_accelerometer_spi_read_z_axis+0xb8>
	{
		*(z_axis) |= 0xFFFF0000;
   2f140:	e0bfff17 	ldw	r2,-4(fp)
   2f144:	10800017 	ldw	r2,0(r2)
   2f148:	10bffff4 	orhi	r2,r2,65535
   2f14c:	1007883a 	mov	r3,r2
   2f150:	e0bfff17 	ldw	r2,-4(fp)
   2f154:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f158:	0005883a 	mov	r2,zero
}
   2f15c:	e037883a 	mov	sp,fp
   2f160:	df000017 	ldw	fp,0(sp)
   2f164:	dec00104 	addi	sp,sp,4
   2f168:	f800283a 	ret

0002f16c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2f16c:	defff504 	addi	sp,sp,-44
   2f170:	df000a15 	stw	fp,40(sp)
   2f174:	df000a04 	addi	fp,sp,40
   2f178:	e13ffc15 	stw	r4,-16(fp)
   2f17c:	e17ffd15 	stw	r5,-12(fp)
   2f180:	e1bffe15 	stw	r6,-8(fp)
   2f184:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2f188:	e03ff615 	stw	zero,-40(fp)
   2f18c:	d0a6e817 	ldw	r2,-25696(gp)
  
  if (alt_ticks_per_second ())
   2f190:	10003c26 	beq	r2,zero,2f284 <alt_alarm_start+0x118>
  {
    if (alarm)
   2f194:	e0bffc17 	ldw	r2,-16(fp)
   2f198:	10003826 	beq	r2,zero,2f27c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2f19c:	e0bffc17 	ldw	r2,-16(fp)
   2f1a0:	e0fffe17 	ldw	r3,-8(fp)
   2f1a4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2f1a8:	e0bffc17 	ldw	r2,-16(fp)
   2f1ac:	e0ffff17 	ldw	r3,-4(fp)
   2f1b0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f1b4:	0005303a 	rdctl	r2,status
   2f1b8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f1bc:	e0fff917 	ldw	r3,-28(fp)
   2f1c0:	00bfff84 	movi	r2,-2
   2f1c4:	1884703a 	and	r2,r3,r2
   2f1c8:	1001703a 	wrctl	status,r2
  
  return context;
   2f1cc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2f1d0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2f1d4:	d0a6e917 	ldw	r2,-25692(gp)
      
      current_nticks = alt_nticks();
   2f1d8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2f1dc:	e0fffd17 	ldw	r3,-12(fp)
   2f1e0:	e0bff617 	ldw	r2,-40(fp)
   2f1e4:	1885883a 	add	r2,r3,r2
   2f1e8:	10c00044 	addi	r3,r2,1
   2f1ec:	e0bffc17 	ldw	r2,-16(fp)
   2f1f0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2f1f4:	e0bffc17 	ldw	r2,-16(fp)
   2f1f8:	10c00217 	ldw	r3,8(r2)
   2f1fc:	e0bff617 	ldw	r2,-40(fp)
   2f200:	1880042e 	bgeu	r3,r2,2f214 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2f204:	e0bffc17 	ldw	r2,-16(fp)
   2f208:	00c00044 	movi	r3,1
   2f20c:	10c00405 	stb	r3,16(r2)
   2f210:	00000206 	br	2f21c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2f214:	e0bffc17 	ldw	r2,-16(fp)
   2f218:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2f21c:	e0bffc17 	ldw	r2,-16(fp)
   2f220:	d0e00e04 	addi	r3,gp,-32712
   2f224:	e0fffa15 	stw	r3,-24(fp)
   2f228:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f22c:	e0bffb17 	ldw	r2,-20(fp)
   2f230:	e0fffa17 	ldw	r3,-24(fp)
   2f234:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f238:	e0bffa17 	ldw	r2,-24(fp)
   2f23c:	10c00017 	ldw	r3,0(r2)
   2f240:	e0bffb17 	ldw	r2,-20(fp)
   2f244:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f248:	e0bffa17 	ldw	r2,-24(fp)
   2f24c:	10800017 	ldw	r2,0(r2)
   2f250:	e0fffb17 	ldw	r3,-20(fp)
   2f254:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f258:	e0bffa17 	ldw	r2,-24(fp)
   2f25c:	e0fffb17 	ldw	r3,-20(fp)
   2f260:	10c00015 	stw	r3,0(r2)
   2f264:	e0bff817 	ldw	r2,-32(fp)
   2f268:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f26c:	e0bff717 	ldw	r2,-36(fp)
   2f270:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2f274:	0005883a 	mov	r2,zero
   2f278:	00000306 	br	2f288 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2f27c:	00bffa84 	movi	r2,-22
   2f280:	00000106 	br	2f288 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2f284:	00bfde84 	movi	r2,-134
  }
}
   2f288:	e037883a 	mov	sp,fp
   2f28c:	df000017 	ldw	fp,0(sp)
   2f290:	dec00104 	addi	sp,sp,4
   2f294:	f800283a 	ret

0002f298 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2f298:	defffe04 	addi	sp,sp,-8
   2f29c:	df000115 	stw	fp,4(sp)
   2f2a0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2f2a4:	e03fff15 	stw	zero,-4(fp)
   2f2a8:	00000506 	br	2f2c0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2f2ac:	e0bfff17 	ldw	r2,-4(fp)
   2f2b0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2f2b4:	e0bfff17 	ldw	r2,-4(fp)
   2f2b8:	10800804 	addi	r2,r2,32
   2f2bc:	e0bfff15 	stw	r2,-4(fp)
   2f2c0:	e0bfff17 	ldw	r2,-4(fp)
   2f2c4:	10820030 	cmpltui	r2,r2,2048
   2f2c8:	103ff81e 	bne	r2,zero,2f2ac <__alt_data_end+0xfffef2ac>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2f2cc:	0001883a 	nop
   2f2d0:	e037883a 	mov	sp,fp
   2f2d4:	df000017 	ldw	fp,0(sp)
   2f2d8:	dec00104 	addi	sp,sp,4
   2f2dc:	f800283a 	ret

0002f2e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f2e0:	defffe04 	addi	sp,sp,-8
   2f2e4:	dfc00115 	stw	ra,4(sp)
   2f2e8:	df000015 	stw	fp,0(sp)
   2f2ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f2f0:	d0a00b17 	ldw	r2,-32724(gp)
   2f2f4:	10000326 	beq	r2,zero,2f304 <alt_get_errno+0x24>
   2f2f8:	d0a00b17 	ldw	r2,-32724(gp)
   2f2fc:	103ee83a 	callr	r2
   2f300:	00000106 	br	2f308 <alt_get_errno+0x28>
   2f304:	d0a6db04 	addi	r2,gp,-25748
}
   2f308:	e037883a 	mov	sp,fp
   2f30c:	dfc00117 	ldw	ra,4(sp)
   2f310:	df000017 	ldw	fp,0(sp)
   2f314:	dec00204 	addi	sp,sp,8
   2f318:	f800283a 	ret

0002f31c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2f31c:	defffa04 	addi	sp,sp,-24
   2f320:	dfc00515 	stw	ra,20(sp)
   2f324:	df000415 	stw	fp,16(sp)
   2f328:	df000404 	addi	fp,sp,16
   2f32c:	e13ffe15 	stw	r4,-8(fp)
   2f330:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2f334:	e0bffe17 	ldw	r2,-8(fp)
   2f338:	10000326 	beq	r2,zero,2f348 <alt_dev_llist_insert+0x2c>
   2f33c:	e0bffe17 	ldw	r2,-8(fp)
   2f340:	10800217 	ldw	r2,8(r2)
   2f344:	1000061e 	bne	r2,zero,2f360 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2f348:	002f2e00 	call	2f2e0 <alt_get_errno>
   2f34c:	1007883a 	mov	r3,r2
   2f350:	00800584 	movi	r2,22
   2f354:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2f358:	00bffa84 	movi	r2,-22
   2f35c:	00001306 	br	2f3ac <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2f360:	e0bffe17 	ldw	r2,-8(fp)
   2f364:	e0ffff17 	ldw	r3,-4(fp)
   2f368:	e0fffc15 	stw	r3,-16(fp)
   2f36c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f370:	e0bffd17 	ldw	r2,-12(fp)
   2f374:	e0fffc17 	ldw	r3,-16(fp)
   2f378:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f37c:	e0bffc17 	ldw	r2,-16(fp)
   2f380:	10c00017 	ldw	r3,0(r2)
   2f384:	e0bffd17 	ldw	r2,-12(fp)
   2f388:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f38c:	e0bffc17 	ldw	r2,-16(fp)
   2f390:	10800017 	ldw	r2,0(r2)
   2f394:	e0fffd17 	ldw	r3,-12(fp)
   2f398:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f39c:	e0bffc17 	ldw	r2,-16(fp)
   2f3a0:	e0fffd17 	ldw	r3,-12(fp)
   2f3a4:	10c00015 	stw	r3,0(r2)

  return 0;  
   2f3a8:	0005883a 	mov	r2,zero
}
   2f3ac:	e037883a 	mov	sp,fp
   2f3b0:	dfc00117 	ldw	ra,4(sp)
   2f3b4:	df000017 	ldw	fp,0(sp)
   2f3b8:	dec00204 	addi	sp,sp,8
   2f3bc:	f800283a 	ret

0002f3c0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2f3c0:	defffd04 	addi	sp,sp,-12
   2f3c4:	dfc00215 	stw	ra,8(sp)
   2f3c8:	df000115 	stw	fp,4(sp)
   2f3cc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f3d0:	008000f4 	movhi	r2,3
   2f3d4:	10800d04 	addi	r2,r2,52
   2f3d8:	e0bfff15 	stw	r2,-4(fp)
   2f3dc:	00000606 	br	2f3f8 <_do_ctors+0x38>
        (*ctor) (); 
   2f3e0:	e0bfff17 	ldw	r2,-4(fp)
   2f3e4:	10800017 	ldw	r2,0(r2)
   2f3e8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f3ec:	e0bfff17 	ldw	r2,-4(fp)
   2f3f0:	10bfff04 	addi	r2,r2,-4
   2f3f4:	e0bfff15 	stw	r2,-4(fp)
   2f3f8:	e0ffff17 	ldw	r3,-4(fp)
   2f3fc:	008000f4 	movhi	r2,3
   2f400:	10800e04 	addi	r2,r2,56
   2f404:	18bff62e 	bgeu	r3,r2,2f3e0 <__alt_data_end+0xfffef3e0>
        (*ctor) (); 
}
   2f408:	0001883a 	nop
   2f40c:	e037883a 	mov	sp,fp
   2f410:	dfc00117 	ldw	ra,4(sp)
   2f414:	df000017 	ldw	fp,0(sp)
   2f418:	dec00204 	addi	sp,sp,8
   2f41c:	f800283a 	ret

0002f420 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2f420:	defffd04 	addi	sp,sp,-12
   2f424:	dfc00215 	stw	ra,8(sp)
   2f428:	df000115 	stw	fp,4(sp)
   2f42c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f430:	008000f4 	movhi	r2,3
   2f434:	10800d04 	addi	r2,r2,52
   2f438:	e0bfff15 	stw	r2,-4(fp)
   2f43c:	00000606 	br	2f458 <_do_dtors+0x38>
        (*dtor) (); 
   2f440:	e0bfff17 	ldw	r2,-4(fp)
   2f444:	10800017 	ldw	r2,0(r2)
   2f448:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f44c:	e0bfff17 	ldw	r2,-4(fp)
   2f450:	10bfff04 	addi	r2,r2,-4
   2f454:	e0bfff15 	stw	r2,-4(fp)
   2f458:	e0ffff17 	ldw	r3,-4(fp)
   2f45c:	008000f4 	movhi	r2,3
   2f460:	10800e04 	addi	r2,r2,56
   2f464:	18bff62e 	bgeu	r3,r2,2f440 <__alt_data_end+0xfffef440>
        (*dtor) (); 
}
   2f468:	0001883a 	nop
   2f46c:	e037883a 	mov	sp,fp
   2f470:	dfc00117 	ldw	ra,4(sp)
   2f474:	df000017 	ldw	fp,0(sp)
   2f478:	dec00204 	addi	sp,sp,8
   2f47c:	f800283a 	ret

0002f480 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f480:	defffa04 	addi	sp,sp,-24
   2f484:	dfc00515 	stw	ra,20(sp)
   2f488:	df000415 	stw	fp,16(sp)
   2f48c:	df000404 	addi	fp,sp,16
   2f490:	e13ffe15 	stw	r4,-8(fp)
   2f494:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f498:	e0bfff17 	ldw	r2,-4(fp)
   2f49c:	10800017 	ldw	r2,0(r2)
   2f4a0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f4a4:	e13ffe17 	ldw	r4,-8(fp)
   2f4a8:	002272c0 	call	2272c <strlen>
   2f4ac:	10800044 	addi	r2,r2,1
   2f4b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f4b4:	00000d06 	br	2f4ec <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f4b8:	e0bffc17 	ldw	r2,-16(fp)
   2f4bc:	10800217 	ldw	r2,8(r2)
   2f4c0:	e0fffd17 	ldw	r3,-12(fp)
   2f4c4:	180d883a 	mov	r6,r3
   2f4c8:	e17ffe17 	ldw	r5,-8(fp)
   2f4cc:	1009883a 	mov	r4,r2
   2f4d0:	002fcf00 	call	2fcf0 <memcmp>
   2f4d4:	1000021e 	bne	r2,zero,2f4e0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f4d8:	e0bffc17 	ldw	r2,-16(fp)
   2f4dc:	00000706 	br	2f4fc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f4e0:	e0bffc17 	ldw	r2,-16(fp)
   2f4e4:	10800017 	ldw	r2,0(r2)
   2f4e8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f4ec:	e0fffc17 	ldw	r3,-16(fp)
   2f4f0:	e0bfff17 	ldw	r2,-4(fp)
   2f4f4:	18bff01e 	bne	r3,r2,2f4b8 <__alt_data_end+0xfffef4b8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2f4f8:	0005883a 	mov	r2,zero
}
   2f4fc:	e037883a 	mov	sp,fp
   2f500:	dfc00117 	ldw	ra,4(sp)
   2f504:	df000017 	ldw	fp,0(sp)
   2f508:	dec00204 	addi	sp,sp,8
   2f50c:	f800283a 	ret

0002f510 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f510:	defffb04 	addi	sp,sp,-20
   2f514:	dfc00415 	stw	ra,16(sp)
   2f518:	df000315 	stw	fp,12(sp)
   2f51c:	df000304 	addi	fp,sp,12
   2f520:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f524:	d0a00617 	ldw	r2,-32744(gp)
   2f528:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f52c:	00003106 	br	2f5f4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2f530:	e0bffd17 	ldw	r2,-12(fp)
   2f534:	10800217 	ldw	r2,8(r2)
   2f538:	1009883a 	mov	r4,r2
   2f53c:	002272c0 	call	2272c <strlen>
   2f540:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2f544:	e0bffd17 	ldw	r2,-12(fp)
   2f548:	10c00217 	ldw	r3,8(r2)
   2f54c:	e0bffe17 	ldw	r2,-8(fp)
   2f550:	10bfffc4 	addi	r2,r2,-1
   2f554:	1885883a 	add	r2,r3,r2
   2f558:	10800003 	ldbu	r2,0(r2)
   2f55c:	10803fcc 	andi	r2,r2,255
   2f560:	1080201c 	xori	r2,r2,128
   2f564:	10bfe004 	addi	r2,r2,-128
   2f568:	10800bd8 	cmpnei	r2,r2,47
   2f56c:	1000031e 	bne	r2,zero,2f57c <alt_find_file+0x6c>
    {
      len -= 1;
   2f570:	e0bffe17 	ldw	r2,-8(fp)
   2f574:	10bfffc4 	addi	r2,r2,-1
   2f578:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f57c:	e0bffe17 	ldw	r2,-8(fp)
   2f580:	e0ffff17 	ldw	r3,-4(fp)
   2f584:	1885883a 	add	r2,r3,r2
   2f588:	10800003 	ldbu	r2,0(r2)
   2f58c:	10803fcc 	andi	r2,r2,255
   2f590:	1080201c 	xori	r2,r2,128
   2f594:	10bfe004 	addi	r2,r2,-128
   2f598:	10800be0 	cmpeqi	r2,r2,47
   2f59c:	1000081e 	bne	r2,zero,2f5c0 <alt_find_file+0xb0>
   2f5a0:	e0bffe17 	ldw	r2,-8(fp)
   2f5a4:	e0ffff17 	ldw	r3,-4(fp)
   2f5a8:	1885883a 	add	r2,r3,r2
   2f5ac:	10800003 	ldbu	r2,0(r2)
   2f5b0:	10803fcc 	andi	r2,r2,255
   2f5b4:	1080201c 	xori	r2,r2,128
   2f5b8:	10bfe004 	addi	r2,r2,-128
   2f5bc:	10000a1e 	bne	r2,zero,2f5e8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2f5c0:	e0bffd17 	ldw	r2,-12(fp)
   2f5c4:	10800217 	ldw	r2,8(r2)
   2f5c8:	e0fffe17 	ldw	r3,-8(fp)
   2f5cc:	180d883a 	mov	r6,r3
   2f5d0:	e17fff17 	ldw	r5,-4(fp)
   2f5d4:	1009883a 	mov	r4,r2
   2f5d8:	002fcf00 	call	2fcf0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f5dc:	1000021e 	bne	r2,zero,2f5e8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2f5e0:	e0bffd17 	ldw	r2,-12(fp)
   2f5e4:	00000706 	br	2f604 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2f5e8:	e0bffd17 	ldw	r2,-12(fp)
   2f5ec:	10800017 	ldw	r2,0(r2)
   2f5f0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f5f4:	e0fffd17 	ldw	r3,-12(fp)
   2f5f8:	d0a00604 	addi	r2,gp,-32744
   2f5fc:	18bfcc1e 	bne	r3,r2,2f530 <__alt_data_end+0xfffef530>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2f600:	0005883a 	mov	r2,zero
}
   2f604:	e037883a 	mov	sp,fp
   2f608:	dfc00117 	ldw	ra,4(sp)
   2f60c:	df000017 	ldw	fp,0(sp)
   2f610:	dec00204 	addi	sp,sp,8
   2f614:	f800283a 	ret

0002f618 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2f618:	defffc04 	addi	sp,sp,-16
   2f61c:	df000315 	stw	fp,12(sp)
   2f620:	df000304 	addi	fp,sp,12
   2f624:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2f628:	00bffa04 	movi	r2,-24
   2f62c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f630:	e03ffd15 	stw	zero,-12(fp)
   2f634:	00001906 	br	2f69c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   2f638:	008000f4 	movhi	r2,3
   2f63c:	10831504 	addi	r2,r2,3156
   2f640:	e0fffd17 	ldw	r3,-12(fp)
   2f644:	18c00324 	muli	r3,r3,12
   2f648:	10c5883a 	add	r2,r2,r3
   2f64c:	10800017 	ldw	r2,0(r2)
   2f650:	10000f1e 	bne	r2,zero,2f690 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   2f654:	008000f4 	movhi	r2,3
   2f658:	10831504 	addi	r2,r2,3156
   2f65c:	e0fffd17 	ldw	r3,-12(fp)
   2f660:	18c00324 	muli	r3,r3,12
   2f664:	10c5883a 	add	r2,r2,r3
   2f668:	e0ffff17 	ldw	r3,-4(fp)
   2f66c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2f670:	d0e00a17 	ldw	r3,-32728(gp)
   2f674:	e0bffd17 	ldw	r2,-12(fp)
   2f678:	1880020e 	bge	r3,r2,2f684 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   2f67c:	e0bffd17 	ldw	r2,-12(fp)
   2f680:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   2f684:	e0bffd17 	ldw	r2,-12(fp)
   2f688:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2f68c:	00000606 	br	2f6a8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f690:	e0bffd17 	ldw	r2,-12(fp)
   2f694:	10800044 	addi	r2,r2,1
   2f698:	e0bffd15 	stw	r2,-12(fp)
   2f69c:	e0bffd17 	ldw	r2,-12(fp)
   2f6a0:	10800810 	cmplti	r2,r2,32
   2f6a4:	103fe41e 	bne	r2,zero,2f638 <__alt_data_end+0xfffef638>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2f6a8:	e0bffe17 	ldw	r2,-8(fp)
}
   2f6ac:	e037883a 	mov	sp,fp
   2f6b0:	df000017 	ldw	fp,0(sp)
   2f6b4:	dec00104 	addi	sp,sp,4
   2f6b8:	f800283a 	ret

0002f6bc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2f6bc:	defffe04 	addi	sp,sp,-8
   2f6c0:	dfc00115 	stw	ra,4(sp)
   2f6c4:	df000015 	stw	fp,0(sp)
   2f6c8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2f6cc:	01440004 	movi	r5,4096
   2f6d0:	0009883a 	mov	r4,zero
   2f6d4:	002fb780 	call	2fb78 <alt_icache_flush>
#endif
}
   2f6d8:	0001883a 	nop
   2f6dc:	e037883a 	mov	sp,fp
   2f6e0:	dfc00117 	ldw	ra,4(sp)
   2f6e4:	df000017 	ldw	fp,0(sp)
   2f6e8:	dec00204 	addi	sp,sp,8
   2f6ec:	f800283a 	ret

0002f6f0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2f6f0:	defff904 	addi	sp,sp,-28
   2f6f4:	dfc00615 	stw	ra,24(sp)
   2f6f8:	df000515 	stw	fp,20(sp)
   2f6fc:	df000504 	addi	fp,sp,20
   2f700:	e13ffc15 	stw	r4,-16(fp)
   2f704:	e17ffd15 	stw	r5,-12(fp)
   2f708:	e1bffe15 	stw	r6,-8(fp)
   2f70c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2f710:	e1bfff17 	ldw	r6,-4(fp)
   2f714:	e17ffe17 	ldw	r5,-8(fp)
   2f718:	e13ffd17 	ldw	r4,-12(fp)
   2f71c:	002dc980 	call	2dc98 <open>
   2f720:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2f724:	e0bffb17 	ldw	r2,-20(fp)
   2f728:	10001c16 	blt	r2,zero,2f79c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2f72c:	008000f4 	movhi	r2,3
   2f730:	10831504 	addi	r2,r2,3156
   2f734:	e0fffb17 	ldw	r3,-20(fp)
   2f738:	18c00324 	muli	r3,r3,12
   2f73c:	10c5883a 	add	r2,r2,r3
   2f740:	10c00017 	ldw	r3,0(r2)
   2f744:	e0bffc17 	ldw	r2,-16(fp)
   2f748:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f74c:	008000f4 	movhi	r2,3
   2f750:	10831504 	addi	r2,r2,3156
   2f754:	e0fffb17 	ldw	r3,-20(fp)
   2f758:	18c00324 	muli	r3,r3,12
   2f75c:	10c5883a 	add	r2,r2,r3
   2f760:	10800104 	addi	r2,r2,4
   2f764:	10c00017 	ldw	r3,0(r2)
   2f768:	e0bffc17 	ldw	r2,-16(fp)
   2f76c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f770:	008000f4 	movhi	r2,3
   2f774:	10831504 	addi	r2,r2,3156
   2f778:	e0fffb17 	ldw	r3,-20(fp)
   2f77c:	18c00324 	muli	r3,r3,12
   2f780:	10c5883a 	add	r2,r2,r3
   2f784:	10800204 	addi	r2,r2,8
   2f788:	10c00017 	ldw	r3,0(r2)
   2f78c:	e0bffc17 	ldw	r2,-16(fp)
   2f790:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f794:	e13ffb17 	ldw	r4,-20(fp)
   2f798:	002df240 	call	2df24 <alt_release_fd>
  }
} 
   2f79c:	0001883a 	nop
   2f7a0:	e037883a 	mov	sp,fp
   2f7a4:	dfc00117 	ldw	ra,4(sp)
   2f7a8:	df000017 	ldw	fp,0(sp)
   2f7ac:	dec00204 	addi	sp,sp,8
   2f7b0:	f800283a 	ret

0002f7b4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f7b4:	defffb04 	addi	sp,sp,-20
   2f7b8:	dfc00415 	stw	ra,16(sp)
   2f7bc:	df000315 	stw	fp,12(sp)
   2f7c0:	df000304 	addi	fp,sp,12
   2f7c4:	e13ffd15 	stw	r4,-12(fp)
   2f7c8:	e17ffe15 	stw	r5,-8(fp)
   2f7cc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f7d0:	01c07fc4 	movi	r7,511
   2f7d4:	01800044 	movi	r6,1
   2f7d8:	e17ffd17 	ldw	r5,-12(fp)
   2f7dc:	010000f4 	movhi	r4,3
   2f7e0:	21031804 	addi	r4,r4,3168
   2f7e4:	002f6f00 	call	2f6f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f7e8:	01c07fc4 	movi	r7,511
   2f7ec:	000d883a 	mov	r6,zero
   2f7f0:	e17ffe17 	ldw	r5,-8(fp)
   2f7f4:	010000f4 	movhi	r4,3
   2f7f8:	21031504 	addi	r4,r4,3156
   2f7fc:	002f6f00 	call	2f6f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f800:	01c07fc4 	movi	r7,511
   2f804:	01800044 	movi	r6,1
   2f808:	e17fff17 	ldw	r5,-4(fp)
   2f80c:	010000f4 	movhi	r4,3
   2f810:	21031b04 	addi	r4,r4,3180
   2f814:	002f6f00 	call	2f6f0 <alt_open_fd>
}  
   2f818:	0001883a 	nop
   2f81c:	e037883a 	mov	sp,fp
   2f820:	dfc00117 	ldw	ra,4(sp)
   2f824:	df000017 	ldw	fp,0(sp)
   2f828:	dec00204 	addi	sp,sp,8
   2f82c:	f800283a 	ret

0002f830 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   2f830:	defff004 	addi	sp,sp,-64
   2f834:	df000f15 	stw	fp,60(sp)
   2f838:	df000f04 	addi	fp,sp,60
   2f83c:	e13ffd15 	stw	r4,-12(fp)
   2f840:	e17ffe15 	stw	r5,-8(fp)
   2f844:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   2f848:	00bffa84 	movi	r2,-22
   2f84c:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2f850:	e0bffd17 	ldw	r2,-12(fp)
   2f854:	10800828 	cmpgeui	r2,r2,32
   2f858:	1000501e 	bne	r2,zero,2f99c <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f85c:	0005303a 	rdctl	r2,status
   2f860:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f864:	e0fff617 	ldw	r3,-40(fp)
   2f868:	00bfff84 	movi	r2,-2
   2f86c:	1884703a 	and	r2,r3,r2
   2f870:	1001703a 	wrctl	status,r2
  
  return context;
   2f874:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   2f878:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   2f87c:	008000f4 	movhi	r2,3
   2f880:	108e8d04 	addi	r2,r2,14900
   2f884:	e0fffd17 	ldw	r3,-12(fp)
   2f888:	180690fa 	slli	r3,r3,3
   2f88c:	10c5883a 	add	r2,r2,r3
   2f890:	e0ffff17 	ldw	r3,-4(fp)
   2f894:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   2f898:	008000f4 	movhi	r2,3
   2f89c:	108e8d04 	addi	r2,r2,14900
   2f8a0:	e0fffd17 	ldw	r3,-12(fp)
   2f8a4:	180690fa 	slli	r3,r3,3
   2f8a8:	10c5883a 	add	r2,r2,r3
   2f8ac:	10800104 	addi	r2,r2,4
   2f8b0:	e0fffe17 	ldw	r3,-8(fp)
   2f8b4:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   2f8b8:	e0bfff17 	ldw	r2,-4(fp)
   2f8bc:	10001926 	beq	r2,zero,2f924 <alt_irq_register+0xf4>
   2f8c0:	e0bffd17 	ldw	r2,-12(fp)
   2f8c4:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f8c8:	0005303a 	rdctl	r2,status
   2f8cc:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f8d0:	e0fff717 	ldw	r3,-36(fp)
   2f8d4:	00bfff84 	movi	r2,-2
   2f8d8:	1884703a 	and	r2,r3,r2
   2f8dc:	1001703a 	wrctl	status,r2
  
  return context;
   2f8e0:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2f8e4:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   2f8e8:	00c00044 	movi	r3,1
   2f8ec:	e0bff217 	ldw	r2,-56(fp)
   2f8f0:	1884983a 	sll	r2,r3,r2
   2f8f4:	1007883a 	mov	r3,r2
   2f8f8:	d0a6e717 	ldw	r2,-25700(gp)
   2f8fc:	1884b03a 	or	r2,r3,r2
   2f900:	d0a6e715 	stw	r2,-25700(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2f904:	d0a6e717 	ldw	r2,-25700(gp)
   2f908:	100170fa 	wrctl	ienable,r2
   2f90c:	e0bff817 	ldw	r2,-32(fp)
   2f910:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f914:	e0bff917 	ldw	r2,-28(fp)
   2f918:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2f91c:	0005883a 	mov	r2,zero
   2f920:	00001906 	br	2f988 <alt_irq_register+0x158>
   2f924:	e0bffd17 	ldw	r2,-12(fp)
   2f928:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f92c:	0005303a 	rdctl	r2,status
   2f930:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f934:	e0fffa17 	ldw	r3,-24(fp)
   2f938:	00bfff84 	movi	r2,-2
   2f93c:	1884703a 	and	r2,r3,r2
   2f940:	1001703a 	wrctl	status,r2
  
  return context;
   2f944:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2f948:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   2f94c:	00c00044 	movi	r3,1
   2f950:	e0bff417 	ldw	r2,-48(fp)
   2f954:	1884983a 	sll	r2,r3,r2
   2f958:	0084303a 	nor	r2,zero,r2
   2f95c:	1007883a 	mov	r3,r2
   2f960:	d0a6e717 	ldw	r2,-25700(gp)
   2f964:	1884703a 	and	r2,r3,r2
   2f968:	d0a6e715 	stw	r2,-25700(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2f96c:	d0a6e717 	ldw	r2,-25700(gp)
   2f970:	100170fa 	wrctl	ienable,r2
   2f974:	e0bffb17 	ldw	r2,-20(fp)
   2f978:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f97c:	e0bffc17 	ldw	r2,-16(fp)
   2f980:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2f984:	0005883a 	mov	r2,zero
   2f988:	e0bff115 	stw	r2,-60(fp)
   2f98c:	e0bff317 	ldw	r2,-52(fp)
   2f990:	e0bff515 	stw	r2,-44(fp)
   2f994:	e0bff517 	ldw	r2,-44(fp)
   2f998:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   2f99c:	e0bff117 	ldw	r2,-60(fp)
}
   2f9a0:	e037883a 	mov	sp,fp
   2f9a4:	df000017 	ldw	fp,0(sp)
   2f9a8:	dec00104 	addi	sp,sp,4
   2f9ac:	f800283a 	ret

0002f9b0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2f9b0:	defffa04 	addi	sp,sp,-24
   2f9b4:	df000515 	stw	fp,20(sp)
   2f9b8:	df000504 	addi	fp,sp,20
   2f9bc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f9c0:	0005303a 	rdctl	r2,status
   2f9c4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f9c8:	e0fffc17 	ldw	r3,-16(fp)
   2f9cc:	00bfff84 	movi	r2,-2
   2f9d0:	1884703a 	and	r2,r3,r2
   2f9d4:	1001703a 	wrctl	status,r2
  
  return context;
   2f9d8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2f9dc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2f9e0:	e0bfff17 	ldw	r2,-4(fp)
   2f9e4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2f9e8:	e0bffd17 	ldw	r2,-12(fp)
   2f9ec:	10800017 	ldw	r2,0(r2)
   2f9f0:	e0fffd17 	ldw	r3,-12(fp)
   2f9f4:	18c00117 	ldw	r3,4(r3)
   2f9f8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2f9fc:	e0bffd17 	ldw	r2,-12(fp)
   2fa00:	10800117 	ldw	r2,4(r2)
   2fa04:	e0fffd17 	ldw	r3,-12(fp)
   2fa08:	18c00017 	ldw	r3,0(r3)
   2fa0c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2fa10:	e0bffd17 	ldw	r2,-12(fp)
   2fa14:	e0fffd17 	ldw	r3,-12(fp)
   2fa18:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2fa1c:	e0bffd17 	ldw	r2,-12(fp)
   2fa20:	e0fffd17 	ldw	r3,-12(fp)
   2fa24:	10c00015 	stw	r3,0(r2)
   2fa28:	e0bffb17 	ldw	r2,-20(fp)
   2fa2c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2fa30:	e0bffe17 	ldw	r2,-8(fp)
   2fa34:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2fa38:	0001883a 	nop
   2fa3c:	e037883a 	mov	sp,fp
   2fa40:	df000017 	ldw	fp,0(sp)
   2fa44:	dec00104 	addi	sp,sp,4
   2fa48:	f800283a 	ret

0002fa4c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2fa4c:	defffb04 	addi	sp,sp,-20
   2fa50:	dfc00415 	stw	ra,16(sp)
   2fa54:	df000315 	stw	fp,12(sp)
   2fa58:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2fa5c:	d0a00e17 	ldw	r2,-32712(gp)
   2fa60:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2fa64:	d0a6e917 	ldw	r2,-25692(gp)
   2fa68:	10800044 	addi	r2,r2,1
   2fa6c:	d0a6e915 	stw	r2,-25692(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2fa70:	00002e06 	br	2fb2c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2fa74:	e0bffd17 	ldw	r2,-12(fp)
   2fa78:	10800017 	ldw	r2,0(r2)
   2fa7c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2fa80:	e0bffd17 	ldw	r2,-12(fp)
   2fa84:	10800403 	ldbu	r2,16(r2)
   2fa88:	10803fcc 	andi	r2,r2,255
   2fa8c:	10000426 	beq	r2,zero,2faa0 <alt_tick+0x54>
   2fa90:	d0a6e917 	ldw	r2,-25692(gp)
   2fa94:	1000021e 	bne	r2,zero,2faa0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2fa98:	e0bffd17 	ldw	r2,-12(fp)
   2fa9c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2faa0:	e0bffd17 	ldw	r2,-12(fp)
   2faa4:	10800217 	ldw	r2,8(r2)
   2faa8:	d0e6e917 	ldw	r3,-25692(gp)
   2faac:	18801d36 	bltu	r3,r2,2fb24 <alt_tick+0xd8>
   2fab0:	e0bffd17 	ldw	r2,-12(fp)
   2fab4:	10800403 	ldbu	r2,16(r2)
   2fab8:	10803fcc 	andi	r2,r2,255
   2fabc:	1000191e 	bne	r2,zero,2fb24 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2fac0:	e0bffd17 	ldw	r2,-12(fp)
   2fac4:	10800317 	ldw	r2,12(r2)
   2fac8:	e0fffd17 	ldw	r3,-12(fp)
   2facc:	18c00517 	ldw	r3,20(r3)
   2fad0:	1809883a 	mov	r4,r3
   2fad4:	103ee83a 	callr	r2
   2fad8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2fadc:	e0bfff17 	ldw	r2,-4(fp)
   2fae0:	1000031e 	bne	r2,zero,2faf0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2fae4:	e13ffd17 	ldw	r4,-12(fp)
   2fae8:	002f9b00 	call	2f9b0 <alt_alarm_stop>
   2faec:	00000d06 	br	2fb24 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2faf0:	e0bffd17 	ldw	r2,-12(fp)
   2faf4:	10c00217 	ldw	r3,8(r2)
   2faf8:	e0bfff17 	ldw	r2,-4(fp)
   2fafc:	1887883a 	add	r3,r3,r2
   2fb00:	e0bffd17 	ldw	r2,-12(fp)
   2fb04:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2fb08:	e0bffd17 	ldw	r2,-12(fp)
   2fb0c:	10c00217 	ldw	r3,8(r2)
   2fb10:	d0a6e917 	ldw	r2,-25692(gp)
   2fb14:	1880032e 	bgeu	r3,r2,2fb24 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2fb18:	e0bffd17 	ldw	r2,-12(fp)
   2fb1c:	00c00044 	movi	r3,1
   2fb20:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2fb24:	e0bffe17 	ldw	r2,-8(fp)
   2fb28:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2fb2c:	e0fffd17 	ldw	r3,-12(fp)
   2fb30:	d0a00e04 	addi	r2,gp,-32712
   2fb34:	18bfcf1e 	bne	r3,r2,2fa74 <__alt_data_end+0xfffefa74>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2fb38:	0001883a 	nop
}
   2fb3c:	0001883a 	nop
   2fb40:	e037883a 	mov	sp,fp
   2fb44:	dfc00117 	ldw	ra,4(sp)
   2fb48:	df000017 	ldw	fp,0(sp)
   2fb4c:	dec00204 	addi	sp,sp,8
   2fb50:	f800283a 	ret

0002fb54 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2fb54:	deffff04 	addi	sp,sp,-4
   2fb58:	df000015 	stw	fp,0(sp)
   2fb5c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2fb60:	000170fa 	wrctl	ienable,zero
}
   2fb64:	0001883a 	nop
   2fb68:	e037883a 	mov	sp,fp
   2fb6c:	df000017 	ldw	fp,0(sp)
   2fb70:	dec00104 	addi	sp,sp,4
   2fb74:	f800283a 	ret

0002fb78 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2fb78:	defffb04 	addi	sp,sp,-20
   2fb7c:	df000415 	stw	fp,16(sp)
   2fb80:	df000404 	addi	fp,sp,16
   2fb84:	e13ffe15 	stw	r4,-8(fp)
   2fb88:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2fb8c:	e0bfff17 	ldw	r2,-4(fp)
   2fb90:	10840070 	cmpltui	r2,r2,4097
   2fb94:	1000021e 	bne	r2,zero,2fba0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2fb98:	00840004 	movi	r2,4096
   2fb9c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2fba0:	e0fffe17 	ldw	r3,-8(fp)
   2fba4:	e0bfff17 	ldw	r2,-4(fp)
   2fba8:	1885883a 	add	r2,r3,r2
   2fbac:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2fbb0:	e0bffe17 	ldw	r2,-8(fp)
   2fbb4:	e0bffc15 	stw	r2,-16(fp)
   2fbb8:	00000506 	br	2fbd0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2fbbc:	e0bffc17 	ldw	r2,-16(fp)
   2fbc0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2fbc4:	e0bffc17 	ldw	r2,-16(fp)
   2fbc8:	10800804 	addi	r2,r2,32
   2fbcc:	e0bffc15 	stw	r2,-16(fp)
   2fbd0:	e0fffc17 	ldw	r3,-16(fp)
   2fbd4:	e0bffd17 	ldw	r2,-12(fp)
   2fbd8:	18bff836 	bltu	r3,r2,2fbbc <__alt_data_end+0xfffefbbc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2fbdc:	e0bffe17 	ldw	r2,-8(fp)
   2fbe0:	108007cc 	andi	r2,r2,31
   2fbe4:	10000226 	beq	r2,zero,2fbf0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2fbe8:	e0bffc17 	ldw	r2,-16(fp)
   2fbec:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2fbf0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2fbf4:	0001883a 	nop
   2fbf8:	e037883a 	mov	sp,fp
   2fbfc:	df000017 	ldw	fp,0(sp)
   2fc00:	dec00104 	addi	sp,sp,4
   2fc04:	f800283a 	ret

0002fc08 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2fc08:	defffe04 	addi	sp,sp,-8
   2fc0c:	df000115 	stw	fp,4(sp)
   2fc10:	df000104 	addi	fp,sp,4
   2fc14:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2fc18:	e0bfff17 	ldw	r2,-4(fp)
   2fc1c:	10bffe84 	addi	r2,r2,-6
   2fc20:	10c00428 	cmpgeui	r3,r2,16
   2fc24:	18001a1e 	bne	r3,zero,2fc90 <alt_exception_cause_generated_bad_addr+0x88>
   2fc28:	100690ba 	slli	r3,r2,2
   2fc2c:	008000f4 	movhi	r2,3
   2fc30:	10bf1004 	addi	r2,r2,-960
   2fc34:	1885883a 	add	r2,r3,r2
   2fc38:	10800017 	ldw	r2,0(r2)
   2fc3c:	1000683a 	jmp	r2
   2fc40:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
   2fc44:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
   2fc48:	0002fc90 	cmplti	zero,zero,3058
   2fc4c:	0002fc90 	cmplti	zero,zero,3058
   2fc50:	0002fc90 	cmplti	zero,zero,3058
   2fc54:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
   2fc58:	0002fc88 	cmpgei	zero,zero,3058
   2fc5c:	0002fc90 	cmplti	zero,zero,3058
   2fc60:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
   2fc64:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
   2fc68:	0002fc90 	cmplti	zero,zero,3058
   2fc6c:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
   2fc70:	0002fc88 	cmpgei	zero,zero,3058
   2fc74:	0002fc90 	cmplti	zero,zero,3058
   2fc78:	0002fc90 	cmplti	zero,zero,3058
   2fc7c:	0002fc80 	call	2fc8 <__alt_mem_onchip_memory-0x1d038>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2fc80:	00800044 	movi	r2,1
   2fc84:	00000306 	br	2fc94 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2fc88:	0005883a 	mov	r2,zero
   2fc8c:	00000106 	br	2fc94 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2fc90:	0005883a 	mov	r2,zero
  }
}
   2fc94:	e037883a 	mov	sp,fp
   2fc98:	df000017 	ldw	fp,0(sp)
   2fc9c:	dec00104 	addi	sp,sp,4
   2fca0:	f800283a 	ret

0002fca4 <atexit>:
   2fca4:	200b883a 	mov	r5,r4
   2fca8:	000f883a 	mov	r7,zero
   2fcac:	000d883a 	mov	r6,zero
   2fcb0:	0009883a 	mov	r4,zero
   2fcb4:	002fd6c1 	jmpi	2fd6c <__register_exitproc>

0002fcb8 <exit>:
   2fcb8:	defffe04 	addi	sp,sp,-8
   2fcbc:	000b883a 	mov	r5,zero
   2fcc0:	dc000015 	stw	r16,0(sp)
   2fcc4:	dfc00115 	stw	ra,4(sp)
   2fcc8:	2021883a 	mov	r16,r4
   2fccc:	002fe840 	call	2fe84 <__call_exitprocs>
   2fcd0:	008000f4 	movhi	r2,3
   2fcd4:	10879804 	addi	r2,r2,7776
   2fcd8:	11000017 	ldw	r4,0(r2)
   2fcdc:	20800f17 	ldw	r2,60(r4)
   2fce0:	10000126 	beq	r2,zero,2fce8 <exit+0x30>
   2fce4:	103ee83a 	callr	r2
   2fce8:	8009883a 	mov	r4,r16
   2fcec:	00300040 	call	30004 <_exit>

0002fcf0 <memcmp>:
   2fcf0:	01c000c4 	movi	r7,3
   2fcf4:	3980192e 	bgeu	r7,r6,2fd5c <memcmp+0x6c>
   2fcf8:	2144b03a 	or	r2,r4,r5
   2fcfc:	11c4703a 	and	r2,r2,r7
   2fd00:	10000f26 	beq	r2,zero,2fd40 <memcmp+0x50>
   2fd04:	20800003 	ldbu	r2,0(r4)
   2fd08:	28c00003 	ldbu	r3,0(r5)
   2fd0c:	10c0151e 	bne	r2,r3,2fd64 <memcmp+0x74>
   2fd10:	31bfff84 	addi	r6,r6,-2
   2fd14:	01ffffc4 	movi	r7,-1
   2fd18:	00000406 	br	2fd2c <memcmp+0x3c>
   2fd1c:	20800003 	ldbu	r2,0(r4)
   2fd20:	28c00003 	ldbu	r3,0(r5)
   2fd24:	31bfffc4 	addi	r6,r6,-1
   2fd28:	10c00e1e 	bne	r2,r3,2fd64 <memcmp+0x74>
   2fd2c:	21000044 	addi	r4,r4,1
   2fd30:	29400044 	addi	r5,r5,1
   2fd34:	31fff91e 	bne	r6,r7,2fd1c <__alt_data_end+0xfffefd1c>
   2fd38:	0005883a 	mov	r2,zero
   2fd3c:	f800283a 	ret
   2fd40:	20c00017 	ldw	r3,0(r4)
   2fd44:	28800017 	ldw	r2,0(r5)
   2fd48:	18bfee1e 	bne	r3,r2,2fd04 <__alt_data_end+0xfffefd04>
   2fd4c:	31bfff04 	addi	r6,r6,-4
   2fd50:	21000104 	addi	r4,r4,4
   2fd54:	29400104 	addi	r5,r5,4
   2fd58:	39bff936 	bltu	r7,r6,2fd40 <__alt_data_end+0xfffefd40>
   2fd5c:	303fe91e 	bne	r6,zero,2fd04 <__alt_data_end+0xfffefd04>
   2fd60:	003ff506 	br	2fd38 <__alt_data_end+0xfffefd38>
   2fd64:	10c5c83a 	sub	r2,r2,r3
   2fd68:	f800283a 	ret

0002fd6c <__register_exitproc>:
   2fd6c:	defffa04 	addi	sp,sp,-24
   2fd70:	dc000315 	stw	r16,12(sp)
   2fd74:	040000f4 	movhi	r16,3
   2fd78:	84079804 	addi	r16,r16,7776
   2fd7c:	80c00017 	ldw	r3,0(r16)
   2fd80:	dc400415 	stw	r17,16(sp)
   2fd84:	dfc00515 	stw	ra,20(sp)
   2fd88:	18805217 	ldw	r2,328(r3)
   2fd8c:	2023883a 	mov	r17,r4
   2fd90:	10003726 	beq	r2,zero,2fe70 <__register_exitproc+0x104>
   2fd94:	10c00117 	ldw	r3,4(r2)
   2fd98:	010007c4 	movi	r4,31
   2fd9c:	20c00e16 	blt	r4,r3,2fdd8 <__register_exitproc+0x6c>
   2fda0:	1a000044 	addi	r8,r3,1
   2fda4:	8800221e 	bne	r17,zero,2fe30 <__register_exitproc+0xc4>
   2fda8:	18c00084 	addi	r3,r3,2
   2fdac:	18c7883a 	add	r3,r3,r3
   2fdb0:	18c7883a 	add	r3,r3,r3
   2fdb4:	12000115 	stw	r8,4(r2)
   2fdb8:	10c7883a 	add	r3,r2,r3
   2fdbc:	19400015 	stw	r5,0(r3)
   2fdc0:	0005883a 	mov	r2,zero
   2fdc4:	dfc00517 	ldw	ra,20(sp)
   2fdc8:	dc400417 	ldw	r17,16(sp)
   2fdcc:	dc000317 	ldw	r16,12(sp)
   2fdd0:	dec00604 	addi	sp,sp,24
   2fdd4:	f800283a 	ret
   2fdd8:	00800034 	movhi	r2,0
   2fddc:	10800004 	addi	r2,r2,0
   2fde0:	10002626 	beq	r2,zero,2fe7c <__register_exitproc+0x110>
   2fde4:	01006404 	movi	r4,400
   2fde8:	d9400015 	stw	r5,0(sp)
   2fdec:	d9800115 	stw	r6,4(sp)
   2fdf0:	d9c00215 	stw	r7,8(sp)
   2fdf4:	00000000 	call	0 <__alt_mem_onchip_memory-0x20000>
   2fdf8:	d9400017 	ldw	r5,0(sp)
   2fdfc:	d9800117 	ldw	r6,4(sp)
   2fe00:	d9c00217 	ldw	r7,8(sp)
   2fe04:	10001d26 	beq	r2,zero,2fe7c <__register_exitproc+0x110>
   2fe08:	81000017 	ldw	r4,0(r16)
   2fe0c:	10000115 	stw	zero,4(r2)
   2fe10:	02000044 	movi	r8,1
   2fe14:	22405217 	ldw	r9,328(r4)
   2fe18:	0007883a 	mov	r3,zero
   2fe1c:	12400015 	stw	r9,0(r2)
   2fe20:	20805215 	stw	r2,328(r4)
   2fe24:	10006215 	stw	zero,392(r2)
   2fe28:	10006315 	stw	zero,396(r2)
   2fe2c:	883fde26 	beq	r17,zero,2fda8 <__alt_data_end+0xfffefda8>
   2fe30:	18c9883a 	add	r4,r3,r3
   2fe34:	2109883a 	add	r4,r4,r4
   2fe38:	1109883a 	add	r4,r2,r4
   2fe3c:	21802215 	stw	r6,136(r4)
   2fe40:	01800044 	movi	r6,1
   2fe44:	12406217 	ldw	r9,392(r2)
   2fe48:	30cc983a 	sll	r6,r6,r3
   2fe4c:	4992b03a 	or	r9,r9,r6
   2fe50:	12406215 	stw	r9,392(r2)
   2fe54:	21c04215 	stw	r7,264(r4)
   2fe58:	01000084 	movi	r4,2
   2fe5c:	893fd21e 	bne	r17,r4,2fda8 <__alt_data_end+0xfffefda8>
   2fe60:	11006317 	ldw	r4,396(r2)
   2fe64:	218cb03a 	or	r6,r4,r6
   2fe68:	11806315 	stw	r6,396(r2)
   2fe6c:	003fce06 	br	2fda8 <__alt_data_end+0xfffefda8>
   2fe70:	18805304 	addi	r2,r3,332
   2fe74:	18805215 	stw	r2,328(r3)
   2fe78:	003fc606 	br	2fd94 <__alt_data_end+0xfffefd94>
   2fe7c:	00bfffc4 	movi	r2,-1
   2fe80:	003fd006 	br	2fdc4 <__alt_data_end+0xfffefdc4>

0002fe84 <__call_exitprocs>:
   2fe84:	defff504 	addi	sp,sp,-44
   2fe88:	df000915 	stw	fp,36(sp)
   2fe8c:	dd400615 	stw	r21,24(sp)
   2fe90:	dc800315 	stw	r18,12(sp)
   2fe94:	dfc00a15 	stw	ra,40(sp)
   2fe98:	ddc00815 	stw	r23,32(sp)
   2fe9c:	dd800715 	stw	r22,28(sp)
   2fea0:	dd000515 	stw	r20,20(sp)
   2fea4:	dcc00415 	stw	r19,16(sp)
   2fea8:	dc400215 	stw	r17,8(sp)
   2feac:	dc000115 	stw	r16,4(sp)
   2feb0:	d9000015 	stw	r4,0(sp)
   2feb4:	2839883a 	mov	fp,r5
   2feb8:	04800044 	movi	r18,1
   2febc:	057fffc4 	movi	r21,-1
   2fec0:	008000f4 	movhi	r2,3
   2fec4:	10879804 	addi	r2,r2,7776
   2fec8:	12000017 	ldw	r8,0(r2)
   2fecc:	45005217 	ldw	r20,328(r8)
   2fed0:	44c05204 	addi	r19,r8,328
   2fed4:	a0001c26 	beq	r20,zero,2ff48 <__call_exitprocs+0xc4>
   2fed8:	a0800117 	ldw	r2,4(r20)
   2fedc:	15ffffc4 	addi	r23,r2,-1
   2fee0:	b8000d16 	blt	r23,zero,2ff18 <__call_exitprocs+0x94>
   2fee4:	14000044 	addi	r16,r2,1
   2fee8:	8421883a 	add	r16,r16,r16
   2feec:	8421883a 	add	r16,r16,r16
   2fef0:	84402004 	addi	r17,r16,128
   2fef4:	a463883a 	add	r17,r20,r17
   2fef8:	a421883a 	add	r16,r20,r16
   2fefc:	e0001e26 	beq	fp,zero,2ff78 <__call_exitprocs+0xf4>
   2ff00:	80804017 	ldw	r2,256(r16)
   2ff04:	e0801c26 	beq	fp,r2,2ff78 <__call_exitprocs+0xf4>
   2ff08:	bdffffc4 	addi	r23,r23,-1
   2ff0c:	843fff04 	addi	r16,r16,-4
   2ff10:	8c7fff04 	addi	r17,r17,-4
   2ff14:	bd7ff91e 	bne	r23,r21,2fefc <__alt_data_end+0xfffefefc>
   2ff18:	00800034 	movhi	r2,0
   2ff1c:	10800004 	addi	r2,r2,0
   2ff20:	10000926 	beq	r2,zero,2ff48 <__call_exitprocs+0xc4>
   2ff24:	a0800117 	ldw	r2,4(r20)
   2ff28:	1000301e 	bne	r2,zero,2ffec <__call_exitprocs+0x168>
   2ff2c:	a0800017 	ldw	r2,0(r20)
   2ff30:	10003226 	beq	r2,zero,2fffc <__call_exitprocs+0x178>
   2ff34:	a009883a 	mov	r4,r20
   2ff38:	98800015 	stw	r2,0(r19)
   2ff3c:	00000000 	call	0 <__alt_mem_onchip_memory-0x20000>
   2ff40:	9d000017 	ldw	r20,0(r19)
   2ff44:	a03fe41e 	bne	r20,zero,2fed8 <__alt_data_end+0xfffefed8>
   2ff48:	dfc00a17 	ldw	ra,40(sp)
   2ff4c:	df000917 	ldw	fp,36(sp)
   2ff50:	ddc00817 	ldw	r23,32(sp)
   2ff54:	dd800717 	ldw	r22,28(sp)
   2ff58:	dd400617 	ldw	r21,24(sp)
   2ff5c:	dd000517 	ldw	r20,20(sp)
   2ff60:	dcc00417 	ldw	r19,16(sp)
   2ff64:	dc800317 	ldw	r18,12(sp)
   2ff68:	dc400217 	ldw	r17,8(sp)
   2ff6c:	dc000117 	ldw	r16,4(sp)
   2ff70:	dec00b04 	addi	sp,sp,44
   2ff74:	f800283a 	ret
   2ff78:	a0800117 	ldw	r2,4(r20)
   2ff7c:	80c00017 	ldw	r3,0(r16)
   2ff80:	10bfffc4 	addi	r2,r2,-1
   2ff84:	15c01426 	beq	r2,r23,2ffd8 <__call_exitprocs+0x154>
   2ff88:	80000015 	stw	zero,0(r16)
   2ff8c:	183fde26 	beq	r3,zero,2ff08 <__alt_data_end+0xfffeff08>
   2ff90:	95c8983a 	sll	r4,r18,r23
   2ff94:	a0806217 	ldw	r2,392(r20)
   2ff98:	a5800117 	ldw	r22,4(r20)
   2ff9c:	2084703a 	and	r2,r4,r2
   2ffa0:	10000b26 	beq	r2,zero,2ffd0 <__call_exitprocs+0x14c>
   2ffa4:	a0806317 	ldw	r2,396(r20)
   2ffa8:	2088703a 	and	r4,r4,r2
   2ffac:	20000c1e 	bne	r4,zero,2ffe0 <__call_exitprocs+0x15c>
   2ffb0:	89400017 	ldw	r5,0(r17)
   2ffb4:	d9000017 	ldw	r4,0(sp)
   2ffb8:	183ee83a 	callr	r3
   2ffbc:	a0800117 	ldw	r2,4(r20)
   2ffc0:	15bfbf1e 	bne	r2,r22,2fec0 <__alt_data_end+0xfffefec0>
   2ffc4:	98800017 	ldw	r2,0(r19)
   2ffc8:	153fcf26 	beq	r2,r20,2ff08 <__alt_data_end+0xfffeff08>
   2ffcc:	003fbc06 	br	2fec0 <__alt_data_end+0xfffefec0>
   2ffd0:	183ee83a 	callr	r3
   2ffd4:	003ff906 	br	2ffbc <__alt_data_end+0xfffeffbc>
   2ffd8:	a5c00115 	stw	r23,4(r20)
   2ffdc:	003feb06 	br	2ff8c <__alt_data_end+0xfffeff8c>
   2ffe0:	89000017 	ldw	r4,0(r17)
   2ffe4:	183ee83a 	callr	r3
   2ffe8:	003ff406 	br	2ffbc <__alt_data_end+0xfffeffbc>
   2ffec:	a0800017 	ldw	r2,0(r20)
   2fff0:	a027883a 	mov	r19,r20
   2fff4:	1029883a 	mov	r20,r2
   2fff8:	003fb606 	br	2fed4 <__alt_data_end+0xfffefed4>
   2fffc:	0005883a 	mov	r2,zero
   30000:	003ffb06 	br	2fff0 <__alt_data_end+0xfffefff0>

00030004 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   30004:	defffd04 	addi	sp,sp,-12
   30008:	df000215 	stw	fp,8(sp)
   3000c:	df000204 	addi	fp,sp,8
   30010:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   30014:	0001883a 	nop
   30018:	e0bfff17 	ldw	r2,-4(fp)
   3001c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   30020:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   30024:	10000226 	beq	r2,zero,30030 <_exit+0x2c>
    ALT_SIM_FAIL();
   30028:	002af070 	cmpltui	zero,zero,43969
   3002c:	00000106 	br	30034 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   30030:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   30034:	003fff06 	br	30034 <__alt_data_end+0xffff0034>
